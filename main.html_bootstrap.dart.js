// Generated by dart2js, the Dart to JavaScript compiler.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
function Isolate() {}
init();

var $$ = {};
var $ = Isolate.$isolateProperties;
$$.StackTrace = {"": "Object;stack",
  toString$0: function() {
    var t1 = this.stack;
    return !(t1 == null) ? t1 : "";
  }
};

$$.Closure = {"": "Object;",
  toString$0: function() {
    return "Closure";
  },
  is$Function: true
};

$$.Null = {"": "Object;"};

$$.CastErrorImplementation = {"": "Object;actualType,expectedType",
  toString$0: function() {
    return "CastError: Casting value of type " + $.S(this.actualType) + " to" + " incompatible type " + $.S(this.expectedType);
  }
};

$$.TypeImpl = {"": "Object;typeName",
  toString$0: function() {
    return this.typeName;
  },
  get$hashCode: function() {
    var t1 = this.typeName;
    return $.getInterceptor(t1).get$hashCode(t1);
  },
  operator$eq$1: function(other) {
    if (!(typeof other === "object" && other !== null && !!other.is$TypeImpl))
      return false;
    return $.eq(this.typeName, other.typeName);
  },
  is$TypeImpl: true
};

$$.ConstantMap = {"": "Object;length>,_jsObject,_liblib1$_keys>",
  containsKey$1: function(key) {
    if ($.eqB(key, "__proto__"))
      return false;
    return this._jsObject.hasOwnProperty(key);
  },
  operator$index$1: function(key) {
    if (this.containsKey$1(key) !== true)
      return;
    return this._jsObject[key];
  },
  forEach$1: function(f) {
    var t1 = this._liblib1$_keys;
    $.getInterceptor$JSArray(t1).forEach$1(t1, new $.ConstantMap_forEach_anon(this, f));
  },
  get$keys: function() {
    return $._ConstantMapKeyIterable$(this);
  },
  get$values: function() {
    return $.MappedIterable$(this._liblib1$_keys, new $.ConstantMap_values_anon(this), $.String, $.getRuntimeTypeInfo(this)[0]);
  },
  get$isEmpty: function() {
    return $.eq(this.length, 0);
  },
  toString$0: function() {
    return $.Maps_mapToString(this);
  },
  _throwUnmodifiable$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot modify unmodifiable Map"));
  },
  operator$indexSet$2: function(key, val) {
    return this._throwUnmodifiable$0();
  },
  remove$1: function(key) {
    return this._throwUnmodifiable$0();
  },
  clear$0: function() {
    return this._throwUnmodifiable$0();
  },
  is$Map: function() {
    return true;
  }
};

$$._ConstantMapKeyIterable = {"": "Iterable;_liblib1$_map",
  get$iterator: function() {
    var t1 = this._liblib1$_map._liblib1$_keys;
    return $.getInterceptor$JSArray(t1).get$iterator(t1);
  }
};

$$.MetaInfo = {"": "Object;_tag>,_tags,_set>"};

$$.JSSyntaxRegExp = {"": "Object;_liblib1$_pattern,_isMultiLine,_isCaseSensitive",
  firstMatch$1: function(str) {
    var m, matchStart, t1, matchEnd;
    m = $.regExpExec(this, $.checkString(str));
    if (m == null)
      return;
    matchStart = m.index;
    t1 = $.getInterceptor$JSStringJSArray(m).operator$index$1(m, 0);
    t1 = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    matchEnd = matchStart + t1;
    return $._MatchImplementation$(this.get$pattern(), str, matchStart, matchEnd, m);
  },
  hasMatch$1: function(str) {
    return $.regExpTest(this, $.checkString(str));
  },
  allMatches$1: function(str) {
    $.checkString(str);
    return $._AllMatchesIterable$(this, str);
  },
  get$pattern: function() {
    return this._liblib1$_pattern;
  },
  get$isMultiLine: function() {
    return this._isMultiLine;
  },
  get$isCaseSensitive: function() {
    return this._isCaseSensitive;
  },
  is$JSSyntaxRegExp: true
};

$$._MatchImplementation = {"": "Object;pattern>,str,start,end,_groups",
  group$1: function(index) {
    var t1 = this._groups;
    return $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, index);
  },
  operator$index$1: function(index) {
    var t1 = this._groups;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
      return this.operator$index$1$bailout1(1, index, t1);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  operator$index$1$bailout1: function(state0, index, t1) {
    return $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, index);
  }
};

$$._AllMatchesIterable = {"": "Iterable;_re,_str",
  get$iterator: function() {
    return $._AllMatchesIterator$(this._re, this._str);
  }
};

$$._AllMatchesIterator = {"": "Object;_re,_str,_liblib1$_current",
  get$current: function() {
    return this._liblib1$_current;
  },
  moveNext$0: function() {
    this._liblib1$_current = this._re.firstMatch$1(this._str);
    return !(this._liblib1$_current == null);
  }
};

$$.StringMatch = {"": "Object;start,str,pattern>",
  operator$index$1: function(g) {
    return this.group$1(g);
  },
  group$1: function(group_) {
    if (!$.eqB(group_, 0))
      throw $.$$throw($.RangeError$value(group_));
    return this.pattern;
  }
};

$$._DateImpl = {"": "Object;millisecondsSinceEpoch>,isUtc",
  operator$eq$1: function(other) {
    if (!(typeof other === "object" && other !== null && !!other.is$Date))
      return false;
    return $.eq(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
  },
  operator$lt$1: function(other) {
    return $.lt(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
  },
  operator$le$1: function(other) {
    return $.le(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
  },
  operator$gt$1: function(other) {
    return $.gt(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
  },
  operator$ge$1: function(other) {
    return $.ge(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
  },
  get$hashCode: function() {
    return this.millisecondsSinceEpoch;
  },
  toString$0: function() {
    var t1, t2, t3, y, m, d, h, min, sec, ms;
    t1 = new $._DateImpl_toString_fourDigits();
    t2 = new $._DateImpl_toString_threeDigits();
    t3 = new $._DateImpl_toString_twoDigits();
    y = t1.call$1(this.get$year());
    m = t3.call$1(this.get$month());
    d = t3.call$1(this.get$day());
    h = t3.call$1(this.get$hour());
    min = t3.call$1(this.get$minute());
    sec = t3.call$1(this.get$second());
    ms = t2.call$1(this.get$millisecond());
    if (this.isUtc === true)
      return $.S(y) + "-" + $.S(m) + "-" + $.S(d) + " " + $.S(h) + ":" + $.S(min) + ":" + $.S(sec) + "." + $.S(ms) + "Z";
    else
      return $.S(y) + "-" + $.S(m) + "-" + $.S(d) + " " + $.S(h) + ":" + $.S(min) + ":" + $.S(sec) + "." + $.S(ms);
  },
  add$1: function(duration) {
    var ms, t2;
    ms = this.millisecondsSinceEpoch;
    if (typeof ms !== "number")
      return this.add$1$bailout1(1, duration, ms);
    t2 = duration.get$inMilliseconds();
    if (typeof t2 !== "number")
      return this.add$1$bailout1(2, ms, t2);
    return $.Date_Date$fromMillisecondsSinceEpoch(ms + t2, this.isUtc);
  },
  add$1$bailout1: function(state0, env0, env1) {
    switch (state0) {
      case 1:
        ms = env1;
        duration = env0;
        break;
      case 2:
        t2 = env1;
        ms = env0;
        break;
    }
    switch (state0) {
      case 0:
        ms = this.millisecondsSinceEpoch;
      case 1:
        state0 = 0;
        t2 = duration.get$inMilliseconds();
      case 2:
        var ms, duration, t2;
        state0 = 0;
        return $.Date_Date$fromMillisecondsSinceEpoch($.add(ms, t2), this.isUtc);
    }
  },
  get$year: function() {
    return $.Primitives_getYear(this);
  },
  get$month: function() {
    return $.Primitives_getMonth(this);
  },
  get$day: function() {
    return $.Primitives_getDay(this);
  },
  get$hour: function() {
    return $.Primitives_getHours(this);
  },
  get$minute: function() {
    return $.Primitives_getMinutes(this);
  },
  get$second: function() {
    return $.Primitives_getSeconds(this);
  },
  get$millisecond: function() {
    return $.Primitives_getMilliseconds(this);
  },
  _DateImpl$now$0: function() {
    $.Primitives_lazyAsJsDate(this);
  },
  _DateImpl$fromMillisecondsSinceEpoch$2: function(millisecondsSinceEpoch, isUtc) {
    var t1 = this.millisecondsSinceEpoch;
    if ($.gtB($.getInterceptor$JSNumber(t1).abs$0(t1), 8640000000000000))
      throw $.$$throw($.ArgumentError$(t1));
    t1 = this.isUtc;
    if (t1 == null)
      throw $.$$throw($.ArgumentError$(t1));
  },
  is$Date: true
};

$$.NullThrownError = {"": "Object;",
  toString$0: function() {
    return "Throw of null.";
  }
};

$$.ArgumentError = {"": "Object;message>",
  toString$0: function() {
    var t1 = this.message;
    if (!(t1 == null))
      return "Illegal argument(s): " + $.S(t1);
    return "Illegal argument(s)";
  }
};

$$.RangeError = {"": "ArgumentError;message",
  toString$0: function() {
    return "RangeError: " + $.S(this.message);
  }
};

$$.NoSuchMethodError = {"": "Object;_receiver,_memberName,_arguments,_namedArguments,_existingArgumentNames",
  toString$0: function() {
    var t1, t2, t3, t4, t5, actualParameters, i, formalParameters;
    t1 = {};
    t1.sb_0 = $.StringBuffer_StringBuffer("");
    t1.i_1 = 0;
    t2 = this._arguments;
    if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
      return this.toString$0$bailout(1, t1, t2);
    for (; $.ltB(t1.i_1, t2.length); t1.i_1 = $.add(t1.i_1, 1)) {
      if ($.gtB(t1.i_1, 0)) {
        t3 = t1.sb_0;
        $.getInterceptor$JSArray(t3).add$1(t3, ", ");
      }
      t3 = t1.sb_0;
      t4 = $.getInterceptor$JSArray(t3);
      t5 = t1.i_1;
      if (t5 !== (t5 | 0))
        throw $.iae(t5);
      if (t5 < 0 || t5 >= t2.length)
        throw $.ioore(t5);
      t4.add$1(t3, $.Error_safeToString(t2[t5]));
    }
    t2 = this._namedArguments;
    if (!(t2 == null))
      $.getInterceptor$JSArray(t2).forEach$1(t2, new $.NoSuchMethodError_toString_anon(t1));
    t2 = this._existingArgumentNames;
    if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
      return this.toString$0$bailout(2, t1, t2);
    t3 = t1.sb_0;
    actualParameters = $.getInterceptor(t3).toString$0(t3);
    t1.sb_0 = $.StringBuffer_StringBuffer("");
    for (i = 0; i < t2.length; ++i) {
      if (i > 0) {
        t3 = t1.sb_0;
        $.getInterceptor$JSArray(t3).add$1(t3, ", ");
      }
      t3 = t1.sb_0;
      t4 = $.getInterceptor$JSArray(t3);
      if (i >= t2.length)
        throw $.ioore(i);
      t4.add$1(t3, t2[i]);
    }
    t1 = t1.sb_0;
    formalParameters = $.getInterceptor(t1).toString$0(t1);
    t1 = this._memberName;
    return "NoSuchMethodError: incorrect number of arguments passed to method named '" + $.S(t1) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Tried calling: " + $.S(t1) + "(" + $.S(actualParameters) + ")\n" + "Found: " + $.S(t1) + "(" + $.S(formalParameters) + ")";
  },
  toString$0$bailout: function(state0, env0, env1) {
    switch (state0) {
      case 1:
        t2 = env1;
        t1 = env0;
        break;
      case 2:
        t2 = env1;
        t1 = env0;
        break;
    }
    switch (state0) {
      case 0:
        t1 = {};
        t1.sb_0 = $.StringBuffer_StringBuffer("");
        t1.i_1 = 0;
        t2 = this._arguments;
      case 1:
        state0 = 0;
        if (!(t2 == null))
          for (t3 = $.getInterceptor$JSStringJSArray(t2); $.ltB(t1.i_1, t3.get$length(t2)); t1.i_1 = $.add(t1.i_1, 1)) {
            if ($.gtB(t1.i_1, 0)) {
              t4 = t1.sb_0;
              $.getInterceptor$JSArray(t4).add$1(t4, ", ");
            }
            t4 = t1.sb_0;
            $.getInterceptor$JSArray(t4).add$1(t4, $.Error_safeToString(t3.operator$index$1(t2, t1.i_1)));
          }
        t2 = this._namedArguments;
        if (!(t2 == null))
          $.getInterceptor$JSArray(t2).forEach$1(t2, new $.NoSuchMethodError_toString_anon(t1));
        t2 = this._existingArgumentNames;
      case 2:
        var t1, t2, t3, t4, actualParameters, i, formalParameters;
        state0 = 0;
        if (t2 == null)
          return "NoSuchMethodError : method not found: '" + $.S(this._memberName) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Arguments: [" + $.S(t1.sb_0) + "]";
        else {
          t3 = t1.sb_0;
          actualParameters = $.getInterceptor(t3).toString$0(t3);
          t1.sb_0 = $.StringBuffer_StringBuffer("");
          for (t3 = $.getInterceptor$JSStringJSArray(t2), i = 0; $.ltB(i, t3.get$length(t2)); ++i) {
            if (i > 0) {
              t4 = t1.sb_0;
              $.getInterceptor$JSArray(t4).add$1(t4, ", ");
            }
            t4 = t1.sb_0;
            $.getInterceptor$JSArray(t4).add$1(t4, t3.operator$index$1(t2, i));
          }
          t1 = t1.sb_0;
          formalParameters = $.getInterceptor(t1).toString$0(t1);
          t1 = this._memberName;
          return "NoSuchMethodError: incorrect number of arguments passed to method named '" + $.S(t1) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Tried calling: " + $.S(t1) + "(" + $.S(actualParameters) + ")\n" + "Found: " + $.S(t1) + "(" + $.S(formalParameters) + ")";
        }
    }
  }
};

$$.UnsupportedError = {"": "Object;message>",
  toString$0: function() {
    return "Unsupported operation: " + $.S(this.get$message());
  }
};

$$.UnimplementedError = {"": "Object;message>",
  toString$0: function() {
    var t1 = this.message;
    return !(t1 == null) ? "UnimplementedError: " + $.S(t1) : "UnimplementedError";
  }
};

$$.StateError = {"": "Object;message>",
  toString$0: function() {
    return "Bad state: " + this.message;
  }
};

$$.StackOverflowError = {"": "Object;",
  toString$0: function() {
    return "Stack Overflow";
  }
};

$$.RuntimeError = {"": "Object;message>",
  toString$0: function() {
    return "RuntimeError: " + this.message;
  }
};

$$._ExceptionImplementation = {"": "Object;message>",
  toString$0: function() {
    var t1 = this.message;
    if (t1 == null)
      return "Exception";
    return "Exception: " + $.S(t1);
  },
  is$Exception: true
};

$$.FormatException = {"": "Object;message>",
  toString$0: function() {
    return "FormatException: " + $.S(this.message);
  },
  is$Exception: true
};

$$.IllegalJSRegExpException = {"": "Object;_pattern,_errmsg",
  toString$0: function() {
    return "IllegalJSRegExpException: '" + $.S(this._pattern) + "' '" + this._errmsg + "'";
  },
  is$Exception: true
};

$$.Iterable = {"": "Object;",
  mappedBy$1: function(f) {
    return $.MappedIterable$(this, f, $.getRuntimeTypeInfo(this)[0], null);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f, $.getRuntimeTypeInfo(this)[0]);
  },
  contains$1: function(element) {
    var t1;
    for (t1 = $.getInterceptor$JSArray(this).get$iterator(this); t1.moveNext$0() === true;)
      if ($.eqB(t1.get$current(), element))
        return true;
    return false;
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.getInterceptor$JSArray(this).get$iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
  },
  every$1: function(f) {
    var t1;
    for (t1 = $.getInterceptor$JSArray(this).get$iterator(this); t1.moveNext$0() === true;)
      if (f.call$1(t1.get$current()) !== true)
        return false;
    return true;
  },
  join$1: function(separator) {
    var iterator, buffer, t1;
    if (typeof separator !== "string")
      return this.join$1$bailout(1, separator);
    iterator = $.getInterceptor$JSArray(this).get$iterator(this);
    if (iterator.moveNext$0() !== true)
      return "";
    buffer = $.StringBuffer_StringBuffer("");
    if (separator === "")
      do
        $.getInterceptor$JSArray(buffer).add$1(buffer, $.S(iterator.get$current()));
      while (iterator.moveNext$0() === true);
    else {
      t1 = $.getInterceptor$JSArray(buffer);
      t1.add$1(buffer, $.S(iterator.get$current()));
      for (; iterator.moveNext$0() === true;) {
        t1.add$1(buffer, separator);
        t1.add$1(buffer, $.S(iterator.get$current()));
      }
    }
    return $.getInterceptor(buffer).toString$0(buffer);
  },
  join$1$bailout: function(state0, separator) {
    var iterator, buffer, t1;
    iterator = $.getInterceptor$JSArray(this).get$iterator(this);
    if (iterator.moveNext$0() !== true)
      return "";
    buffer = $.StringBuffer_StringBuffer("");
    if (separator == null || $.eqB(separator, ""))
      do
        $.getInterceptor$JSArray(buffer).add$1(buffer, $.S(iterator.get$current()));
      while (iterator.moveNext$0() === true);
    else {
      t1 = $.getInterceptor$JSArray(buffer);
      t1.add$1(buffer, $.S(iterator.get$current()));
      for (; iterator.moveNext$0() === true;) {
        t1.add$1(buffer, separator);
        t1.add$1(buffer, $.S(iterator.get$current()));
      }
    }
    return $.getInterceptor(buffer).toString$0(buffer);
  },
  toList$0: function() {
    var t1 = $.List_List$from(this, $.getRuntimeTypeInfo(this)[0]);
    $.setRuntimeTypeInfo(t1, [$.getRuntimeTypeInfo(this)[0]]);
    return t1;
  },
  get$length: function() {
    var it, count;
    it = this.get$iterator();
    for (count = 0; it.moveNext$0() === true;)
      ++count;
    return count;
  },
  get$isEmpty: function() {
    return this.get$iterator().moveNext$0() !== true;
  },
  get$last: function() {
    var it, result;
    it = this.get$iterator();
    if (it.moveNext$0() !== true)
      throw $.$$throw($.StateError$("No elements"));
    do
      result = it.get$current();
    while (it.moveNext$0() === true);
    return result;
  }
};

$$.MappedIterable = {"": "Iterable;_iterable,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  get$iterator: function() {
    var t1 = this._iterable;
    return $.MappedIterator$($.getInterceptor$JSArray(t1).get$iterator(t1), this._f, $.getRuntimeTypeInfo(this)[0], $.getRuntimeTypeInfo(this)[1]);
  },
  get$length: function() {
    var t1 = this._iterable;
    return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
  },
  get$isEmpty: function() {
    var t1 = this._iterable;
    return $.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1);
  }
};

$$.MappedIterator = {"": "Iterator;_liblib0$_current,_iterator,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  moveNext$0: function() {
    var t1 = this._iterator;
    if (t1.moveNext$0() === true) {
      this._liblib0$_current = this._f$1(t1.get$current());
      return true;
    } else {
      this._liblib0$_current = null;
      return false;
    }
  },
  get$current: function() {
    return this._liblib0$_current;
  }
};

$$.WhereIterable = {"": "Iterable;_iterable,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  get$iterator: function() {
    var t1 = this._iterable;
    return $.WhereIterator$($.getInterceptor$JSArray(t1).get$iterator(t1), this._f, $.getRuntimeTypeInfo(this)[0]);
  }
};

$$.WhereIterator = {"": "Iterator;_iterator,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  moveNext$0: function() {
    for (var t1 = this._iterator; t1.moveNext$0() === true;)
      if (this._f$1(t1.get$current()) === true)
        return true;
    return false;
  },
  get$current: function() {
    return this._iterator.get$current();
  }
};

$$.Iterator = {"": "Object;"};

$$.NonExtensibleListMixin = {"": "Iterable;",
  get$iterator: function() {
    return $.ListIterator$(this);
  },
  forEach$1: function(f) {
    var t1, i;
    for (t1 = $.getInterceptor$JSStringJSArray(this), i = 0; $.ltB(i, t1.get$length(this)); ++i)
      f.call$1(this.operator$index$1(i));
  },
  contains$1: function(value) {
    var i;
    for (i = 0; $.ltB(i, this.get$length()); ++i)
      if ($.eqB(this.operator$index$1(i), value))
        return true;
    return false;
  },
  every$1: function(f) {
    var t1, i;
    for (t1 = $.getInterceptor$JSStringJSArray(this), i = 0; $.ltB(i, t1.get$length(this)); ++i)
      if (f.call$1(this.operator$index$1(i)) !== true)
        return false;
    return true;
  },
  get$isEmpty: function() {
    return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
  },
  indexOf$2: function(value, start) {
    var i, t1;
    if (typeof start !== "number")
      return this.indexOf$2$bailout(1, value, start);
    i = start;
    while (true) {
      t1 = this.get$length();
      if (typeof t1 !== "number")
        return this.indexOf$2$bailout(2, i, value, t1);
      if (!(i < t1))
        break;
      if ($.eqB(this.operator$index$1(i), value))
        return i;
      ++i;
    }
    return -1;
  },
  indexOf$2$bailout: function(state0, env0, env1, env2) {
    switch (state0) {
      case 1:
        start = env1;
        value = env0;
        break;
      case 2:
        t1 = env2;
        value = env1;
        i = env0;
        break;
    }
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        i = start;
      case 2:
        var start, value, i, t1;
        L0:
          while (true)
            switch (state0) {
              case 0:
                t1 = this.get$length();
              case 2:
                state0 = 0;
                if (!$.ltB(i, t1))
                  break L0;
                if ($.eqB(this.operator$index$1(i), value))
                  return i;
                i = $.add(i, 1);
            }
        return -1;
    }
  },
  indexOf$1: function(value) {
    return this.indexOf$2(value, 0);
  },
  get$last: function() {
    if ($.gtB(this.get$length(), 0))
      return this.operator$index$1($.sub(this.get$length(), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  getRange$2: function(start, length$) {
    var result, i;
    if (typeof start !== "number")
      return this.getRange$2$bailout(1, start, length$);
    if (typeof length$ !== "number")
      return this.getRange$2$bailout(1, start, length$);
    result = [];
    for (i = 0; i < length$; ++i)
      result.push(this.operator$index$1(start + i));
    return result;
  },
  getRange$2$bailout: function(state0, start, length$) {
    var result, i;
    result = [];
    for (i = 0; $.ltB(i, length$); ++i)
      result.push(this.operator$index$1($.add(start, i)));
    return result;
  },
  operator$indexSet$2: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot modify an unmodifiable list"));
  },
  set$length: function(newLength) {
    throw $.$$throw($.UnsupportedError$("Cannot change the length of an unmodifiable list"));
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to an unmodifiable list"));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to an unmodifiable list"));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to an unmodifiable list"));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear an unmodifiable list"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove in an unmodifiable list"));
  },
  setRange$4: function(start, length$, from, startFrom) {
    throw $.$$throw($.UnsupportedError$("Cannot modify an unmodifiable list"));
  },
  setRange$3: function(start, length$, from) {
    return this.setRange$4(start, length$, from, null);
  },
  removeRange$2: function(start, length$) {
    throw $.$$throw($.UnsupportedError$("Cannot remove in an unmodifiable list"));
  },
  is$List: function() {
    return true;
  },
  is$Collection: function() {
    return true;
  }
};

$$.ListIterator = {"": "Object;_liblib0$_list,_liblib0$_position,_liblib0$_current",
  moveNext$0: function() {
    var t1, nextPosition, t2, t3;
    t1 = this._liblib0$_position;
    if (typeof t1 !== "number")
      return this.moveNext$0$bailout3(1, t1);
    nextPosition = t1 + 1;
    t1 = this._liblib0$_list;
    t2 = $.getInterceptor$JSStringJSArray(t1);
    t3 = t2.get$length(t1);
    if (typeof t3 !== "number")
      return this.moveNext$0$bailout3(2, t1, t2, t3, nextPosition);
    if (nextPosition < t3) {
      this._liblib0$_current = t1.operator$index$1(nextPosition);
      this._liblib0$_position = nextPosition;
      return true;
    }
    this._liblib0$_position = t2.get$length(t1);
    this._liblib0$_current = null;
    return false;
  },
  moveNext$0$bailout3: function(state0, env0, env1, env2, env3) {
    switch (state0) {
      case 1:
        t1 = env0;
        break;
      case 2:
        nextPosition = env3;
        t3 = env2;
        t2 = env1;
        t1 = env0;
        break;
    }
    switch (state0) {
      case 0:
        t1 = this._liblib0$_position;
      case 1:
        state0 = 0;
        nextPosition = $.add(t1, 1);
        t1 = this._liblib0$_list;
        t2 = $.getInterceptor$JSStringJSArray(t1);
        t3 = t2.get$length(t1);
      case 2:
        var t1, nextPosition, t2, t3;
        state0 = 0;
        if ($.ltB(nextPosition, t3)) {
          this._liblib0$_current = t1.operator$index$1(nextPosition);
          this._liblib0$_position = nextPosition;
          return true;
        }
        this._liblib0$_position = t2.get$length(t1);
        this._liblib0$_current = null;
        return false;
    }
  },
  get$current: function() {
    return this._liblib0$_current;
  }
};

$$.MappedList = {"": "NonExtensibleListMixin;_liblib0$_list,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  operator$index$1: function(index) {
    var t1 = this._liblib0$_list;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
      return this.operator$index$1$bailout5(1, index, t1);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return this._f$1(t1[index]);
  },
  operator$index$1$bailout5: function(state0, index, t1) {
    return this._f$1($.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, index));
  },
  get$length: function() {
    var t1 = this._liblib0$_list;
    return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
  }
};

$$._HashMapImpl = {"": "Object;_keys>,_values>,_loadLimit,_numberOfEntries,_numberOfDeleted",
  _probeForAdding$1: function(key) {
    var t1, t3, hash, numberOfProbes, insertionIndex, existingKey, numberOfProbes0;
    if (key == null)
      throw $.$$throw($.ArgumentError$(null));
    t1 = $.getInterceptor(key).get$hashCode(key);
    if (t1 !== (t1 | 0))
      return this._probeForAdding$1$bailout(1, key, t1);
    t3 = this._keys;
    t3 = $.getInterceptor$JSStringJSArray(t3).get$length(t3);
    if (t3 !== (t3 | 0))
      return this._probeForAdding$1$bailout(2, key, t3, t1);
    hash = (t1 & t3 - 1) >>> 0;
    for (numberOfProbes = 1, insertionIndex = -1; true; numberOfProbes = numberOfProbes0) {
      t1 = this._keys;
      if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
        return this._probeForAdding$1$bailout(3, numberOfProbes, key, t1, insertionIndex, hash);
      if (hash < 0 || hash >= t1.length)
        throw $.ioore(hash);
      existingKey = t1[hash];
      if (existingKey == null) {
        if (insertionIndex < 0)
          return hash;
        return insertionIndex;
      } else if ($.eqB(existingKey, key))
        return hash;
      else if (insertionIndex < 0 && $.Primitives_identical(existingKey, $.CONSTANT3))
        insertionIndex = hash;
      numberOfProbes0 = numberOfProbes + 1;
      t1 = this._keys;
      hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, $.getInterceptor$JSStringJSArray(t1).get$length(t1));
      if (hash !== (hash | 0))
        return this._probeForAdding$1$bailout(4, key, insertionIndex, hash, numberOfProbes0);
    }
  },
  _probeForAdding$1$bailout: function(state0, env0, env1, env2, env3, env4) {
    switch (state0) {
      case 1:
        t1 = env1;
        key = env0;
        break;
      case 2:
        t1 = env2;
        t3 = env1;
        key = env0;
        break;
      case 3:
        hash = env4;
        insertionIndex = env3;
        t1 = env2;
        key = env1;
        numberOfProbes = env0;
        break;
      case 4:
        numberOfProbes0 = env3;
        hash = env2;
        insertionIndex = env1;
        key = env0;
        break;
    }
    switch (state0) {
      case 0:
        if (key == null)
          throw $.$$throw($.ArgumentError$(null));
        t1 = $.getInterceptor(key).get$hashCode(key);
      case 1:
        state0 = 0;
        t3 = this._keys;
        t3 = $.getInterceptor$JSStringJSArray(t3).get$length(t3);
      case 2:
        state0 = 0;
        hash = $.and(t1, $.sub(t3, 1));
        numberOfProbes = 1;
        insertionIndex = -1;
      default:
        var t1, key, t3, hash, numberOfProbes, insertionIndex, existingKey, numberOfProbes0;
        L0:
          while (true)
            switch (state0) {
              case 0:
                if (!true)
                  break L0;
                t1 = this._keys;
              case 3:
                state0 = 0;
                existingKey = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, hash);
                if (existingKey == null) {
                  if ($.ltB(insertionIndex, 0))
                    return hash;
                  return insertionIndex;
                } else if ($.eqB(existingKey, key))
                  return hash;
                else if ($.ltB(insertionIndex, 0) && $.Primitives_identical(existingKey, $.CONSTANT3))
                  insertionIndex = hash;
                numberOfProbes0 = numberOfProbes + 1;
                t1 = this._keys;
                hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, $.getInterceptor$JSStringJSArray(t1).get$length(t1));
              case 4:
                state0 = 0;
                numberOfProbes = numberOfProbes0;
            }
    }
  },
  _probeForLookup$1: function(key) {
    var t1, t2, hash, numberOfProbes, existingKey, numberOfProbes0;
    if (key == null)
      throw $.$$throw($.ArgumentError$(null));
    t1 = $.getInterceptor(key).get$hashCode(key);
    t2 = this._keys;
    hash = $.and(t1, $.sub($.getInterceptor$JSStringJSArray(t2).get$length(t2), 1));
    if (hash !== (hash | 0))
      return this._probeForLookup$1$bailout(1, key, hash);
    for (numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
      t1 = this._keys;
      existingKey = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, hash);
      if (existingKey == null)
        return -1;
      if ($.eqB(existingKey, key))
        return hash;
      numberOfProbes0 = numberOfProbes + 1;
      t1 = this._keys;
      hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, $.getInterceptor$JSStringJSArray(t1).get$length(t1));
    }
  },
  _probeForLookup$1$bailout: function(state0, key, hash) {
    var numberOfProbes, t1, existingKey, numberOfProbes0;
    for (numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
      t1 = this._keys;
      existingKey = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, hash);
      if (existingKey == null)
        return -1;
      if ($.eqB(existingKey, key))
        return hash;
      numberOfProbes0 = numberOfProbes + 1;
      t1 = this._keys;
      hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, $.getInterceptor$JSStringJSArray(t1).get$length(t1));
    }
  },
  _ensureCapacity$0: function() {
    var newNumberOfEntries, t1, numberOfFree;
    newNumberOfEntries = $.add(this._numberOfEntries, 1);
    if ($.geB(newNumberOfEntries, this._loadLimit)) {
      t1 = this._keys;
      this._grow$1($.mul($.getInterceptor$JSStringJSArray(t1).get$length(t1), 2));
      return;
    }
    t1 = this._keys;
    numberOfFree = $.sub($.sub($.getInterceptor$JSStringJSArray(t1).get$length(t1), newNumberOfEntries), this._numberOfDeleted);
    if ($.gtB(this._numberOfDeleted, numberOfFree)) {
      t1 = this._keys;
      this._grow$1($.getInterceptor$JSStringJSArray(t1).get$length(t1));
    }
  },
  _grow$1: function(newCapacity) {
    var t1, capacity, oldKeys, oldValues, t4, i, key, value, newIndex;
    t1 = this._keys;
    capacity = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
    if (typeof capacity !== "number")
      return this._grow$1$bailout(1, newCapacity, capacity);
    this._loadLimit = $.tdiv($.mul(newCapacity, 3), 4);
    oldKeys = this._keys;
    if (typeof oldKeys !== "string" && (typeof oldKeys !== "object" || oldKeys === null || oldKeys.constructor !== Array && !oldKeys.is$JavaScriptIndexingBehavior()))
      return this._grow$1$bailout(2, newCapacity, oldKeys, capacity);
    oldValues = this._values;
    if (typeof oldValues !== "string" && (typeof oldValues !== "object" || oldValues === null || oldValues.constructor !== Array && !oldValues.is$JavaScriptIndexingBehavior()))
      return this._grow$1$bailout(3, newCapacity, oldKeys, oldValues, capacity);
    t4 = $.List_List$fixedLength(newCapacity, null);
    $.setRuntimeTypeInfo(t4, []);
    this._keys = t4;
    t4 = $.List_List$fixedLength(newCapacity, null, $.getRuntimeTypeInfo(this)[1]);
    $.setRuntimeTypeInfo(t4, [$.getRuntimeTypeInfo(this)[1]]);
    this._values = t4;
    for (i = 0; i < capacity; ++i) {
      if (i >= oldKeys.length)
        throw $.ioore(i);
      key = oldKeys[i];
      if (key == null || $.Primitives_identical(key, $.CONSTANT3))
        continue;
      if (i >= oldValues.length)
        throw $.ioore(i);
      value = oldValues[i];
      newIndex = this._probeForAdding$1(key);
      $.indexSet(this._keys, newIndex, key);
      $.indexSet(this._values, newIndex, value);
    }
    this._numberOfDeleted = 0;
  },
  _grow$1$bailout: function(state0, env0, env1, env2, env3) {
    switch (state0) {
      case 1:
        capacity = env1;
        newCapacity = env0;
        break;
      case 2:
        capacity = env2;
        oldKeys = env1;
        newCapacity = env0;
        break;
      case 3:
        capacity = env3;
        oldValues = env2;
        oldKeys = env1;
        newCapacity = env0;
        break;
    }
    switch (state0) {
      case 0:
        t1 = this._keys;
        capacity = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
      case 1:
        state0 = 0;
        this._loadLimit = $.tdiv($.mul(newCapacity, 3), 4);
        oldKeys = this._keys;
      case 2:
        state0 = 0;
        oldValues = this._values;
      case 3:
        var t1, capacity, newCapacity, oldKeys, oldValues, t4, t2, i, key, value, newIndex;
        state0 = 0;
        t4 = $.List_List$fixedLength(newCapacity, null);
        $.setRuntimeTypeInfo(t4, []);
        this._keys = t4;
        t4 = $.List_List$fixedLength(newCapacity, null, $.getRuntimeTypeInfo(this)[1]);
        $.setRuntimeTypeInfo(t4, [$.getRuntimeTypeInfo(this)[1]]);
        this._values = t4;
        for (t1 = $.getInterceptor$JSStringJSArray(oldKeys), t2 = $.getInterceptor$JSStringJSArray(oldValues), i = 0; $.ltB(i, capacity); ++i) {
          key = t1.operator$index$1(oldKeys, i);
          if (key == null || $.Primitives_identical(key, $.CONSTANT3))
            continue;
          value = t2.operator$index$1(oldValues, i);
          newIndex = this._probeForAdding$1(key);
          $.indexSet(this._keys, newIndex, key);
          $.indexSet(this._values, newIndex, value);
        }
        this._numberOfDeleted = 0;
    }
  },
  clear$0: function() {
    var t1, length$, i;
    this._numberOfEntries = 0;
    this._numberOfDeleted = 0;
    t1 = this._keys;
    length$ = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
    if (typeof length$ !== "number")
      return this.clear$0$bailout(1, length$);
    for (i = 0; i < length$; ++i) {
      $.indexSet(this._keys, i, null);
      $.indexSet(this._values, i, null);
    }
  },
  clear$0$bailout: function(state0, length$) {
    var i;
    for (i = 0; $.ltB(i, length$); ++i) {
      $.indexSet(this._keys, i, null);
      $.indexSet(this._values, i, null);
    }
  },
  operator$indexSet$2: function(key, value) {
    var index, t1, t2;
    this._ensureCapacity$0();
    index = this._probeForAdding$1(key);
    t1 = this._keys;
    if (!($.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, index) == null)) {
      t1 = this._keys;
      t2 = $.Primitives_identical($.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, index), $.CONSTANT3);
      t1 = t2;
    } else
      t1 = true;
    if (t1)
      this._numberOfEntries = $.add(this._numberOfEntries, 1);
    $.indexSet(this._keys, index, key);
    $.indexSet(this._values, index, value);
  },
  operator$index$1: function(key) {
    var index, t1;
    index = this._probeForLookup$1(key);
    if (typeof index !== "number")
      return this.operator$index$1$bailout(1, index);
    if (index < 0)
      return;
    t1 = this._values;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
      return this.operator$index$1$bailout(2, t1, index);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  operator$index$1$bailout: function(state0, env0, env1) {
    switch (state0) {
      case 1:
        index = env0;
        break;
      case 2:
        index = env1;
        t1 = env0;
        break;
    }
    switch (state0) {
      case 0:
        index = this._probeForLookup$1(key);
      case 1:
        state0 = 0;
        if ($.ltB(index, 0))
          return;
        t1 = this._values;
      case 2:
        var index, t1;
        state0 = 0;
        return $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, index);
    }
  },
  remove$1: function(key) {
    var index, t1, value;
    index = this._probeForLookup$1(key);
    if ($.geB(index, 0)) {
      this._numberOfEntries = $.sub(this._numberOfEntries, 1);
      t1 = this._values;
      value = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, index);
      $.indexSet(this._values, index, null);
      $.indexSet(this._keys, index, $.CONSTANT3);
      this._numberOfDeleted = $.add(this._numberOfDeleted, 1);
      return value;
    }
    return;
  },
  get$isEmpty: function() {
    return $.eq(this._numberOfEntries, 0);
  },
  get$length: function() {
    return this._numberOfEntries;
  },
  forEach$1: function(f) {
    var it, t1, t2;
    it = $._HashMapImplIndexIterator$(this);
    for (; it.moveNext$0() === true;) {
      t1 = this._keys;
      t1 = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, it.get$current());
      t2 = this._values;
      f.call$2(t1, $.getInterceptor$JSStringJSArray(t2).operator$index$1(t2, it.get$current()));
    }
  },
  get$keys: function() {
    return $._HashMapImplKeyIterable$(this, $.getRuntimeTypeInfo(this)[0]);
  },
  get$values: function() {
    return $._HashMapImplValueIterable$(this, $.getRuntimeTypeInfo(this)[1]);
  },
  containsKey$1: function(key) {
    return !$.eqB(this._probeForLookup$1(key), -1);
  },
  toString$0: function() {
    return $.Maps_mapToString(this);
  },
  _HashMapImpl$0: function() {
    this._numberOfEntries = 0;
    this._numberOfDeleted = 0;
    this._loadLimit = $._HashMapImpl__computeLoadLimit(8);
    var t1 = $.List_List$fixedLength(8, null);
    $.setRuntimeTypeInfo(t1, []);
    this._keys = t1;
    t1 = $.List_List$fixedLength(8, null, $.getRuntimeTypeInfo(this)[1]);
    $.setRuntimeTypeInfo(t1, [$.getRuntimeTypeInfo(this)[1]]);
    this._values = t1;
  },
  is$Map: function() {
    return true;
  }
};

$$._HashMapImplKeyIterable = {"": "Iterable;_map",
  get$iterator: function() {
    return $._HashMapImplKeyIterator$(this._map, $.getRuntimeTypeInfo(this)[0]);
  }
};

$$._HashMapImplValueIterable = {"": "Iterable;_map",
  get$iterator: function() {
    return $._HashMapImplValueIterator$(this._map, $.getRuntimeTypeInfo(this)[0]);
  }
};

$$._HashMapImplIterator = {"": "Object;",
  moveNext$0: function() {
    var t1, t2, length$, t3, newIndex, key;
    t1 = this._map;
    t2 = t1.get$_keys();
    length$ = $.getInterceptor$JSStringJSArray(t2).get$length(t2);
    if (typeof length$ !== "number")
      return this.moveNext$0$bailout1(1, length$, t1);
    t3 = this._index;
    if (typeof t3 !== "number")
      return this.moveNext$0$bailout1(2, length$, t1, t3);
    newIndex = t3 + 1;
    for (; newIndex < length$;) {
      t2 = t1.get$_keys();
      if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
        return this.moveNext$0$bailout1(3, length$, t2, newIndex, t1);
      if (newIndex !== (newIndex | 0))
        throw $.iae(newIndex);
      if (newIndex < 0 || newIndex >= t2.length)
        throw $.ioore(newIndex);
      key = t2[newIndex];
      if (!(key == null) && !$.Primitives_identical(key, $.CONSTANT3)) {
        this._liblib0$_current = this._computeCurrentFromIndex$3(newIndex, t1.get$_keys(), t1.get$_values());
        this._index = newIndex;
        return true;
      }
      ++newIndex;
    }
    this._index = length$;
    this._liblib0$_current = null;
    return false;
  },
  moveNext$0$bailout1: function(state0, env0, env1, env2, env3) {
    switch (state0) {
      case 1:
        t1 = env1;
        length$ = env0;
        break;
      case 2:
        t3 = env2;
        t1 = env1;
        length$ = env0;
        break;
      case 3:
        t1 = env3;
        newIndex = env2;
        t2 = env1;
        length$ = env0;
        break;
    }
    switch (state0) {
      case 0:
        t1 = this._map;
        t2 = t1.get$_keys();
        length$ = $.getInterceptor$JSStringJSArray(t2).get$length(t2);
      case 1:
        state0 = 0;
        t3 = this._index;
      case 2:
        state0 = 0;
        newIndex = $.add(t3, 1);
      case 3:
        var t1, t2, length$, t3, newIndex, key;
        L0:
          while (true)
            switch (state0) {
              case 0:
                if (!$.ltB(newIndex, length$))
                  break L0;
                t2 = t1.get$_keys();
              case 3:
                state0 = 0;
                key = $.getInterceptor$JSStringJSArray(t2).operator$index$1(t2, newIndex);
                if (!(key == null) && !$.Primitives_identical(key, $.CONSTANT3)) {
                  this._liblib0$_current = this._computeCurrentFromIndex$3(newIndex, t1.get$_keys(), t1.get$_values());
                  this._index = newIndex;
                  return true;
                }
                newIndex = $.add(newIndex, 1);
            }
        this._index = length$;
        this._liblib0$_current = null;
        return false;
    }
  },
  get$current: function() {
    return this._liblib0$_current;
  }
};

$$._HashMapImplKeyIterator = {"": "_HashMapImplIterator;_map,_index,_liblib0$_current",
  _computeCurrentFromIndex$3: function(index, keys, values) {
    return $.getInterceptor$JSStringJSArray(keys).operator$index$1(keys, index);
  }
};

$$._HashMapImplValueIterator = {"": "_HashMapImplIterator;_map,_index,_liblib0$_current",
  _computeCurrentFromIndex$3: function(index, keys, values) {
    return $.getInterceptor$JSStringJSArray(values).operator$index$1(values, index);
  }
};

$$._HashMapImplIndexIterator = {"": "_HashMapImplIterator;_map,_index,_liblib0$_current",
  _computeCurrentFromIndex$3: function(index, keys, values) {
    return index;
  }
};

$$._DeletedKeySentinel = {"": "Object;"};

$$._KeyValuePair = {"": "Object;key>,value="};

$$._LinkedHashMapImpl = {"": "Object;_liblib0$_list,_map",
  operator$indexSet$2: function(key, value) {
    var t1;
    if (this._map.containsKey$1(key) === true) {
      t1 = this._map;
      $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, key).get$element().set$value(value);
    } else {
      t1 = this._liblib0$_list;
      $.getInterceptor$JSArray(t1).addLast$1(t1, $._KeyValuePair$(key, value, $.getRuntimeTypeInfo(this)[0], $.getRuntimeTypeInfo(this)[1]));
      $.indexSet(this._map, key, this._liblib0$_list.lastEntry$0());
    }
  },
  operator$index$1: function(key) {
    var t1, entry;
    t1 = this._map;
    entry = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, key);
    if (entry == null)
      return;
    return entry.get$element().get$value();
  },
  remove$1: function(key) {
    var entry = this._map.remove$1(key);
    if (entry == null)
      return;
    entry.remove$0();
    return entry.get$element().get$value();
  },
  get$keys: function() {
    var t1, t2, t3;
    t1 = this._liblib0$_list;
    t2 = new $._LinkedHashMapImpl_keys_anon();
    t3 = $.getRuntimeTypeInfo(this);
    return $.MappedIterable$(t1, t2, [$._KeyValuePair, t3[0], t3[1]], $.getRuntimeTypeInfo(this)[0]);
  },
  get$values: function() {
    var t1, t2, t3;
    t1 = this._liblib0$_list;
    t2 = new $._LinkedHashMapImpl_values_anon();
    t3 = $.getRuntimeTypeInfo(this);
    return $.MappedIterable$(t1, t2, [$._KeyValuePair, t3[0], t3[1]], $.getRuntimeTypeInfo(this)[1]);
  },
  forEach$1: function(f) {
    var t1 = this._liblib0$_list;
    $.getInterceptor$JSArray(t1).forEach$1(t1, new $._LinkedHashMapImpl_forEach_anon(f));
  },
  containsKey$1: function(key) {
    return this._map.containsKey$1(key);
  },
  get$length: function() {
    var t1 = this._map;
    return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
  },
  get$isEmpty: function() {
    return $.eq(this.get$length(), 0);
  },
  clear$0: function() {
    var t1 = this._map;
    $.getInterceptor$JSArray(t1).clear$0(t1);
    t1 = this._liblib0$_list;
    $.getInterceptor$JSArray(t1).clear$0(t1);
  },
  toString$0: function() {
    return $.Maps_mapToString(this);
  },
  _LinkedHashMapImpl$0: function() {
    var t1, t2, t3;
    t1 = $.getRuntimeTypeInfo(this)[0];
    t2 = $.getRuntimeTypeInfo(this);
    this._map = $.HashMap_HashMap(t1, [$.DoubleLinkedQueueEntry, [$._KeyValuePair, t2[0], t2[1]]]);
    t3 = $.getRuntimeTypeInfo(this);
    this._liblib0$_list = $.DoubleLinkedQueue$([$._KeyValuePair, t3[0], t3[1]]);
  },
  is$Map: function() {
    return true;
  }
};

$$.Object = {"": ";",
  operator$eq$1: function(other) {
    return $.Primitives_identical(this, other);
  },
  get$hashCode: function() {
    return $.Primitives_objectHashCode(this);
  },
  toString$0: function() {
    return $.Primitives_objectToString(this);
  },
  get$runtimeType: function() {
    return $.TypeImpl$($.getRuntimeTypeString(this));
  }
};

$$.DoubleLinkedQueueEntry = {"": "Object;_previous=,_next=,_element",
  _link$2: function(p, n) {
    this._next = n;
    this._previous = p;
    p.set$_next(this);
    n.set$_previous(this);
  },
  prepend$1: function(e) {
    $.DoubleLinkedQueueEntry$(e, $.getRuntimeTypeInfo(this)[0])._link$2(this._previous, this);
  },
  remove$0: function() {
    var t1 = this._next;
    this._previous.set$_next(t1);
    t1 = this._previous;
    this._next.set$_previous(t1);
    this._next = null;
    this._previous = null;
    return this._element;
  },
  _asNonSentinelEntry$0: function() {
    return this;
  },
  previousEntry$0: function() {
    return this._previous._asNonSentinelEntry$0();
  },
  get$element: function() {
    return this._element;
  },
  DoubleLinkedQueueEntry$1: function(e) {
    this._element = e;
  }
};

$$._DoubleLinkedQueueEntrySentinel = {"": "DoubleLinkedQueueEntry;_previous,_next,_element",
  remove$0: function() {
    throw $.$$throw($.StateError$("Empty queue"));
  },
  _asNonSentinelEntry$0: function() {
    return;
  },
  get$element: function() {
    throw $.$$throw($.StateError$("Empty queue"));
  },
  _DoubleLinkedQueueEntrySentinel$0: function() {
    this._link$2(this, this);
  }
};

$$.DoubleLinkedQueue = {"": "Iterable;_sentinel",
  addLast$1: function(value) {
    this._sentinel.prepend$1(value);
  },
  add$1: function(value) {
    this._sentinel.prepend$1(value);
  },
  addAll$1: function(iterable) {
    var t1, t2;
    for (t1 = $.getInterceptor$JSArray(iterable).get$iterator(iterable); t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      this._sentinel.prepend$1(t2);
    }
  },
  removeLast$0: function() {
    return this._sentinel.get$_previous().remove$0();
  },
  removeFirst$0: function() {
    return this._sentinel.get$_next().remove$0();
  },
  get$last: function() {
    return this._sentinel.get$_previous().get$element();
  },
  lastEntry$0: function() {
    return this._sentinel.previousEntry$0();
  },
  get$isEmpty: function() {
    var t1, t2;
    t1 = this._sentinel;
    t2 = t1.get$_next();
    return t2 == null ? t1 == null : t2 === t1;
  },
  clear$0: function() {
    var t1 = this._sentinel;
    t1.set$_next(t1);
    t1 = this._sentinel;
    t1.set$_previous(t1);
  },
  get$iterator: function() {
    return $._DoubleLinkedQueueIterator$(this._sentinel, $.getRuntimeTypeInfo(this)[0]);
  },
  toString$0: function() {
    return $.Collections_collectionToString(this);
  },
  DoubleLinkedQueue$0: function() {
    this._sentinel = $._DoubleLinkedQueueEntrySentinel$($.getRuntimeTypeInfo(this)[0]);
  },
  is$Collection: function() {
    return true;
  }
};

$$._DoubleLinkedQueueIterator = {"": "Object;_sentinel,_currentEntry,_liblib0$_current",
  moveNext$0: function() {
    var t1 = this._currentEntry;
    if (t1 == null)
      return false;
    this._currentEntry = t1.get$_next();
    if ($.Primitives_identical(this._currentEntry, this._sentinel)) {
      this._currentEntry = null;
      this._liblib0$_current = null;
      this._sentinel = null;
      return false;
    }
    this._liblib0$_current = this._currentEntry.get$element();
    return true;
  },
  get$current: function() {
    return this._liblib0$_current;
  }
};

$$._HashSetImpl = {"": "Iterable;_backingMap",
  clear$0: function() {
    var t1 = this._backingMap;
    $.getInterceptor$JSArray(t1).clear$0(t1);
  },
  add$1: function(value) {
    var t1 = this._backingMap;
    if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
      return this.add$1$bailout0(1, t1, value);
    if (value !== (value | 0))
      throw $.iae(value);
    if (value < 0 || value >= t1.length)
      throw $.ioore(value);
    t1[value] = value;
  },
  add$1$bailout0: function(state0, t1, value) {
    $.indexSet(t1, value, value);
  },
  contains$1: function(value) {
    return this._backingMap.containsKey$1(value);
  },
  remove$1: function(value) {
    if (this._backingMap.containsKey$1(value) !== true)
      return false;
    this._backingMap.remove$1(value);
    return true;
  },
  addAll$1: function(iterable) {
    var t1, t2;
    for (t1 = $.getInterceptor$JSArray(iterable).get$iterator(iterable); t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      $.indexSet(this._backingMap, t2, t2);
    }
  },
  removeAll$1: function(iterable) {
    var t1;
    for (t1 = $.getInterceptor$JSArray(iterable).get$iterator(iterable); t1.moveNext$0() === true;)
      this.remove$1(t1.get$current());
  },
  forEach$1: function(f) {
    var t1 = this._backingMap;
    $.getInterceptor$JSArray(t1).forEach$1(t1, new $._HashSetImpl_forEach_anon(f));
  },
  get$isEmpty: function() {
    var t1 = this._backingMap;
    return $.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1);
  },
  get$length: function() {
    var t1 = this._backingMap;
    return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
  },
  get$iterator: function() {
    return $._HashSetIterator$(this, $.getRuntimeTypeInfo(this)[0]);
  },
  toString$0: function() {
    return $.Collections_collectionToString(this);
  },
  _HashSetImpl$0: function() {
    this._backingMap = $._HashMapImpl$($.getRuntimeTypeInfo(this)[0], $.getRuntimeTypeInfo(this)[0]);
  },
  is$Collection: function() {
    return true;
  }
};

$$._HashSetIterator = {"": "Object;_keysIterator",
  get$current: function() {
    var result = this._keysIterator.get$current();
    if (result === $.CONSTANT3)
      throw $.$$throw($.StateError$("Concurrent modification."));
    return result;
  },
  moveNext$0: function() {
    var t1, result, t2;
    t1 = this._keysIterator;
    do {
      result = t1.moveNext$0();
      if (result === true)
        t2 = t1.get$current() == null || $.Primitives_identical(t1.get$current(), $.CONSTANT3);
      else
        t2 = false;
    } while (t2);
    return result;
  }
};

$$._StringBufferImpl = {"": "Object;_buffer,_liblib0$_length",
  get$length: function() {
    return this._liblib0$_length;
  },
  get$isEmpty: function() {
    return $.eq(this._liblib0$_length, 0);
  },
  add$1: function(obj) {
    var str, t1;
    str = $.getInterceptor(obj).toString$0(obj);
    if (!(typeof str === "string"))
      throw $.$$throw($.ArgumentError$("toString() did not return a string"));
    if ($.CONSTANT1.get$isEmpty(str) === true)
      return;
    t1 = this._buffer;
    $.getInterceptor$JSArray(t1).add$1(t1, str);
    t1 = this._liblib0$_length;
    if (typeof t1 !== "number")
      return this.add$1$bailout(1, t1, str);
    this._liblib0$_length = t1 + str.length;
  },
  add$1$bailout: function(state0, t1, str) {
    this._liblib0$_length = $.add(t1, str.length);
  },
  addAll$1: function(objects) {
    var t1;
    for (t1 = $.getInterceptor$JSArray(objects).get$iterator(objects); t1.moveNext$0() === true;)
      this.add$1(t1.get$current());
  },
  clear$0: function() {
    var t1 = $.List_List(0, $.String);
    $.setRuntimeTypeInfo(t1, [$.String]);
    this._buffer = t1;
    this._liblib0$_length = 0;
  },
  toString$0: function() {
    var t1, result;
    t1 = this._buffer;
    if ($.eqB($.getInterceptor$JSStringJSArray(t1).get$length(t1), 0))
      return "";
    t1 = this._buffer;
    if ($.eqB($.getInterceptor$JSStringJSArray(t1).get$length(t1), 1)) {
      t1 = this._buffer;
      return $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, 0);
    }
    result = $.stringJoinUnchecked($.Strings__toJsStringArray(this._buffer), "");
    t1 = this._buffer;
    $.getInterceptor$JSArray(t1).clear$0(t1);
    t1 = this._buffer;
    $.getInterceptor$JSArray(t1).add$1(t1, result);
    return result;
  },
  _StringBufferImpl$1: function(content$) {
    this.clear$0();
    this.add$1(content$);
  }
};

$$.ObjectInterceptor = {"": "Object;",
  toString$0: function(receiver) {
    return receiver.toString$0();
  },
  add$1: function(receiver, a0) {
    return receiver.add$1(a0);
  },
  charCodeAt$1: function(receiver, a0) {
    return receiver.charCodeAt$1(a0);
  },
  get$iterator: function(receiver) {
    return receiver.get$iterator();
  },
  substring$1: function(receiver, a0) {
    return receiver.substring$1(a0);
  },
  replaceAll$2: function(receiver, a0, a1) {
    return receiver.replaceAll$2(a0, a1);
  },
  get$length: function(receiver) {
    return receiver.get$length();
  },
  operator$index$1: function(receiver, a0) {
    return receiver.operator$index$1(a0);
  },
  substring$2: function(receiver, a0, a1) {
    return receiver.substring$2(a0, a1);
  },
  split$1: function(receiver, a0) {
    return receiver.split$1(a0);
  },
  clear$0: function(receiver) {
    return receiver.clear$0();
  },
  endsWith$1: function(receiver, a0) {
    return receiver.endsWith$1(a0);
  },
  removeRange$2: function(receiver, a0, a1) {
    return receiver.removeRange$2(a0, a1);
  },
  setRange$3: function(receiver, a0, a1, a2) {
    return receiver.setRange$3(a0, a1, a2);
  },
  toLowerCase$0: function(receiver) {
    return receiver.toLowerCase$0();
  },
  truncate$0: function(receiver) {
    return receiver.truncate$0();
  },
  set$length: function(receiver, value) {
    return receiver.set$length(value);
  },
  indexOf$2: function(receiver, a0, a1) {
    return receiver.indexOf$2(a0, a1);
  },
  toList$0: function(receiver) {
    return receiver.toList$0();
  },
  every$1: function(receiver, a0) {
    return receiver.every$1(a0);
  },
  get$isInfinite: function(receiver) {
    return receiver.get$isInfinite();
  },
  floor$0: function(receiver) {
    return receiver.floor$0();
  },
  forEach$1: function(receiver, a0) {
    return receiver.forEach$1(a0);
  },
  getRange$2: function(receiver, a0, a1) {
    return receiver.getRange$2(a0, a1);
  },
  get$last: function(receiver) {
    return receiver.get$last();
  },
  where$1: function(receiver, a0) {
    return receiver.where$1(a0);
  },
  toUpperCase$0: function(receiver) {
    return receiver.toUpperCase$0();
  },
  get$isEmpty: function(receiver) {
    return receiver.get$isEmpty();
  },
  indexOf$1: function(receiver, a0) {
    return receiver.indexOf$1(a0);
  },
  removeLast$0: function(receiver) {
    return receiver.removeLast$0();
  },
  addAll$1: function(receiver, a0) {
    return receiver.addAll$1(a0);
  },
  get$runtimeType: function(receiver) {
    return receiver.get$runtimeType();
  },
  trim$0: function(receiver) {
    return receiver.trim$0();
  },
  allMatches$1: function(receiver, a0) {
    return receiver.allMatches$1(a0);
  },
  abs$0: function(receiver) {
    return receiver.abs$0();
  },
  toRadixString$1: function(receiver, a0) {
    return receiver.toRadixString$1(a0);
  },
  ceil$0: function(receiver) {
    return receiver.ceil$0();
  },
  addLast$1: function(receiver, a0) {
    return receiver.addLast$1(a0);
  },
  get$hashCode: function(receiver) {
    return receiver.get$hashCode();
  },
  contains$1: function(receiver, a0) {
    return receiver.contains$1(a0);
  },
  join$1: function(receiver, a0) {
    return receiver.join$1(a0);
  },
  toInt$0: function(receiver) {
    return receiver.toInt$0();
  },
  get$isNaN: function(receiver) {
    return receiver.get$isNaN();
  },
  mappedBy$1: function(receiver, a0) {
    return receiver.mappedBy$1(a0);
  }
};

$$.JSFunction = {"": "Object;",
  toString$0: function(receiver) {
    return "Closure";
  },
  is$Function: true
};

$$.JSBool = {"": "Object;",
  toString$0: function(receiver) {
    return String(receiver);
  },
  get$hashCode: function(receiver) {
    return receiver ? 519018 : 218159;
  },
  get$runtimeType: function(receiver) {
    return $.CONSTANT10;
  },
  is$bool: true
};

$$.JSNull = {"": "Object;",
  toString$0: function(receiver) {
    return "null";
  },
  get$hashCode: function(receiver) {
    return 0;
  },
  get$runtimeType: function(receiver) {
    return $.createRuntimeType("Null");
  }
};

$$.JSArray = {"": "Object;",
  add$1: function(receiver, value) {
    $.checkGrowable(receiver, "add");
    receiver.push(value);
  },
  removeLast$0: function(receiver) {
    $.checkGrowable(receiver, "removeLast");
    if (receiver.length === 0)
      throw $.$$throw($.RangeError$value(-1));
    return receiver.pop();
  },
  where$1: function(receiver, f) {
    return $.WhereIterable$(receiver, f, $.getRuntimeTypeInfo(receiver)[0]);
  },
  addAll$1: function(receiver, collection) {
    var t1;
    for (t1 = $.getInterceptor$JSArray(collection).get$iterator(collection); t1.moveNext$0() === true;)
      $.CONSTANT0.add$1(receiver, t1.get$current());
  },
  addLast$1: function(receiver, value) {
    $.checkGrowable(receiver, "addLast");
    receiver.push(value);
  },
  clear$0: function(receiver) {
    this.set$length(receiver, 0);
  },
  forEach$1: function(receiver, f) {
    return $.Collections_forEach(receiver, f);
  },
  mappedBy$1: function(receiver, f) {
    return $.MappedList$(receiver, f);
  },
  join$1: function(receiver, separator) {
    var list, i, t1;
    if (separator == null)
      separator = "";
    list = $.List_List(receiver.length);
    $.setRuntimeTypeInfo(list, []);
    for (i = 0; i < receiver.length; ++i) {
      t1 = $.S(receiver[i]);
      if (i >= list.length)
        throw $.ioore(i);
      list[i] = t1;
    }
    return list.join(separator);
  },
  getRange$2: function(receiver, start, length$) {
    var t1, end;
    if (0 === length$)
      return [];
    $.checkNull(start);
    $.checkNull(length$);
    if (!(typeof start === "number" && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    if (!(typeof length$ === "number" && Math.floor(length$) === length$))
      throw $.$$throw($.ArgumentError$(length$));
    t1 = length$ < 0;
    if (t1)
      throw $.$$throw($.ArgumentError$(length$));
    if (start < 0)
      throw $.$$throw($.RangeError$value(start));
    end = start + length$;
    if (end > receiver.length)
      throw $.$$throw($.RangeError$value(length$));
    if (t1)
      throw $.$$throw($.ArgumentError$(length$));
    return receiver.slice(start, end);
  },
  get$last: function(receiver) {
    var t1 = receiver.length;
    if (t1 > 0)
      return receiver[t1 - 1];
    throw $.$$throw($.StateError$("No elements"));
  },
  removeRange$2: function(receiver, start, length$) {
    var receiverLength, t1, t2;
    $.checkGrowable(receiver, "removeRange");
    if (length$ === 0)
      return;
    $.checkNull(start);
    $.checkNull(length$);
    if (!(typeof start === "number" && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    if (length$ < 0)
      throw $.$$throw($.ArgumentError$(length$));
    receiverLength = receiver.length;
    if (start < 0 || start >= receiverLength)
      throw $.$$throw($.RangeError$value(start));
    t1 = start + length$;
    if (t1 > receiverLength)
      throw $.$$throw($.RangeError$value(t1));
    t2 = receiverLength - length$;
    $.Arrays_copy(receiver, t1, receiver, start, t2 - start);
    $.CONSTANT0.set$length(receiver, t2);
  },
  setRange$4: function(receiver, start, length$, from, startFrom) {
    var t1;
    $.checkMutable(receiver, "indexed set");
    if ($.eqB(length$, 0))
      return;
    $.checkNull(start);
    $.checkNull(length$);
    $.checkNull(from);
    $.checkNull(startFrom);
    if (!(typeof start === "number" && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    if (!(typeof length$ === "number" && Math.floor(length$) === length$))
      throw $.$$throw($.ArgumentError$(length$));
    if (!(typeof startFrom === "number" && Math.floor(startFrom) === startFrom))
      throw $.$$throw($.ArgumentError$(startFrom));
    if (length$ < 0)
      throw $.$$throw($.ArgumentError$(length$));
    if (start < 0)
      throw $.$$throw($.RangeError$value(start));
    t1 = start + length$;
    if (t1 > receiver.length)
      throw $.$$throw($.RangeError$value(t1));
    $.Arrays_copy(from, startFrom, receiver, start, length$);
  },
  setRange$3: function($receiver, start, length$, from) {
    return this.setRange$4($receiver, start, length$, from, 0);
  },
  every$1: function(receiver, f) {
    return $.Collections_every(receiver, f);
  },
  indexOf$2: function(receiver, element, start) {
    if (!(typeof start === "number" && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    return $.Arrays_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  contains$1: function(receiver, other) {
    var i;
    for (i = 0; i < receiver.length; ++i)
      if ($.eqB(other, receiver[i]))
        return true;
    return false;
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  toString$0: function(receiver) {
    return $.Collections_collectionToString(receiver);
  },
  toList$0: function(receiver) {
    var t1 = $.List_List$from(receiver, $.getRuntimeTypeInfo(receiver)[0]);
    $.setRuntimeTypeInfo(t1, [$.getRuntimeTypeInfo(receiver)[0]]);
    return t1;
  },
  get$iterator: function(receiver) {
    return $._ArrayIterator$(receiver);
  },
  get$hashCode: function(receiver) {
    return $.Primitives_objectHashCode(receiver);
  },
  get$runtimeType: function(receiver) {
    return $.TypeImpl$($.getRuntimeTypeString(receiver));
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  set$length: function(receiver, newLength) {
    if (!(typeof newLength === "number" && Math.floor(newLength) === newLength))
      throw $.$$throw($.ArgumentError$(newLength));
    if (newLength < 0)
      throw $.$$throw($.RangeError$value(newLength));
    $.checkGrowable(receiver, "set length");
    receiver.length = newLength;
  },
  operator$index$1: function(receiver, index) {
    if (!(typeof index === "number" && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index >= receiver.length || index < 0)
      throw $.$$throw($.RangeError$value(index));
    return receiver[index];
  },
  is$List: function() {
    return true;
  },
  is$Collection: function() {
    return true;
  }
};

$$._ArrayIterator = {"": "Object;_list,_liblib$_position,_liblib$_current",
  get$current: function() {
    return this._liblib$_current;
  },
  moveNext$0: function() {
    var t1, nextPosition, length$;
    t1 = this._liblib$_position;
    if (t1 !== (t1 | 0))
      return this.moveNext$0$bailout0(1, t1);
    nextPosition = t1 + 1;
    t1 = this._list;
    length$ = t1.length;
    if (nextPosition < length$) {
      this._liblib$_position = nextPosition;
      if (nextPosition < 0 || nextPosition >= t1.length)
        throw $.ioore(nextPosition);
      this._liblib$_current = t1[nextPosition];
      return true;
    }
    this._liblib$_position = length$;
    this._liblib$_current = null;
    return false;
  },
  moveNext$0$bailout0: function(state0, t1) {
    var nextPosition, length$;
    nextPosition = $.add(t1, 1);
    t1 = this._list;
    length$ = t1.length;
    if ($.ltB(nextPosition, length$)) {
      this._liblib$_position = nextPosition;
      if (nextPosition !== (nextPosition | 0))
        throw $.iae(nextPosition);
      if (nextPosition < 0 || nextPosition >= t1.length)
        throw $.ioore(nextPosition);
      this._liblib$_current = t1[nextPosition];
      return true;
    }
    this._liblib$_position = length$;
    this._liblib$_current = null;
    return false;
  }
};

$$.JSNumber = {"": "Object;",
  get$isNaN: function(receiver) {
    return isNaN(receiver);
  },
  abs$0: function(receiver) {
    return Math.abs(receiver);
  },
  toInt$0: function(receiver) {
    var truncated;
    if (this.get$isNaN(receiver) === true)
      throw $.$$throw($.UnsupportedError$("NaN"));
    if (this.get$isInfinite(receiver) === true)
      throw $.$$throw($.UnsupportedError$("Infinity"));
    truncated = this.truncate$0(receiver);
    return truncated == -0.0 ? 0 : truncated;
  },
  ceil$0: function(receiver) {
    return Math.ceil(receiver);
  },
  floor$0: function(receiver) {
    return Math.floor(receiver);
  },
  get$isInfinite: function(receiver) {
    return receiver == Infinity || receiver == -Infinity;
  },
  truncate$0: function(receiver) {
    return receiver < 0 ? this.ceil$0(receiver) : this.floor$0(receiver);
  },
  toRadixString$1: function(receiver, radix) {
    $.checkNum(radix);
    if (radix < 2 || radix > 36)
      throw $.$$throw($.RangeError$(radix));
    return receiver.toString(radix);
  },
  toString$0: function(receiver) {
    if (receiver === 0 && (1 / receiver) < 0)
      return "-0.0";
    else
      return String(receiver);
  },
  get$hashCode: function(receiver) {
    return receiver & 536870911;
  }
};

$$.JSInt = {"": "JSNumber;",
  get$runtimeType: function(receiver) {
    return $.CONSTANT11;
  }
};

$$.JSDouble = {"": "JSNumber;",
  get$runtimeType: function(receiver) {
    return $.CONSTANT12;
  }
};

$$.JSString = {"": "Object;",
  charCodeAt$1: function(receiver, index) {
    if (!(typeof index === "number"))
      throw $.$$throw($.ArgumentError$(index));
    if (index < 0)
      throw $.$$throw($.RangeError$value(index));
    if (index >= receiver.length)
      throw $.$$throw($.RangeError$value(index));
    return receiver.charCodeAt(index);
  },
  allMatches$1: function(receiver, str) {
    $.checkString(str);
    return $.allMatchesInStringUnchecked(receiver, str);
  },
  endsWith$1: function(receiver, other) {
    var otherLength, t1;
    $.checkString(other);
    otherLength = other.length;
    t1 = receiver.length;
    if (otherLength > t1)
      return false;
    return other === this.substring$1(receiver, t1 - otherLength);
  },
  replaceAll$2: function(receiver, from, to) {
    $.checkString(to);
    return $.stringReplaceAllUnchecked(receiver, from, to);
  },
  split$1: function(receiver, pattern) {
    $.checkNull(pattern);
    return receiver.split(pattern);
  },
  substring$2: function(receiver, startIndex, endIndex) {
    $.checkNum(startIndex);
    if (endIndex == null)
      endIndex = receiver.length;
    $.checkNum(endIndex);
    if ($.ltB(startIndex, 0))
      throw $.$$throw($.RangeError$value(startIndex));
    if ($.gtB(startIndex, endIndex))
      throw $.$$throw($.RangeError$value(startIndex));
    if ($.gtB(endIndex, receiver.length))
      throw $.$$throw($.RangeError$value(endIndex));
    return receiver.substring(startIndex, endIndex);
  },
  substring$1: function($receiver, startIndex) {
    return this.substring$2($receiver, startIndex, null);
  },
  toLowerCase$0: function(receiver) {
    return receiver.toLowerCase();
  },
  toUpperCase$0: function(receiver) {
    return receiver.toUpperCase();
  },
  trim$0: function(receiver) {
    return receiver.trim();
  },
  indexOf$2: function(receiver, other, start) {
    $.checkNull(other);
    if (!(typeof start === "number" && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    if (!(typeof other === "string"))
      throw $.$$throw($.ArgumentError$(other));
    if (start < 0)
      return -1;
    return receiver.indexOf(other, start);
  },
  indexOf$1: function($receiver, other) {
    return this.indexOf$2($receiver, other, 0);
  },
  contains$2: function(receiver, other, startIndex) {
    $.checkNull(other);
    return $.stringContainsUnchecked(receiver, other, startIndex);
  },
  contains$1: function($receiver, other) {
    return this.contains$2($receiver, other, 0);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  toString$0: function(receiver) {
    return receiver;
  },
  get$hashCode: function(receiver) {
    var i, hash, hash0, hash1;
    for (i = 0, hash = 0; i < receiver.length; ++i, hash = hash1) {
      hash0 = 536870911 & hash + receiver.charCodeAt(i);
      hash1 = 536870911 & hash0 + ((524287 & hash0) << 10 >>> 0);
      hash1 = hash1 ^ (hash1 >> 6);
    }
    hash0 = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
    hash0 = hash0 ^ (hash0 >> 11);
    return 536870911 & hash0 + ((16383 & hash0) << 15 >>> 0);
  },
  get$runtimeType: function(receiver) {
    return $.CONSTANT9;
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  operator$index$1: function(receiver, index) {
    if (!(typeof index === "number" && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index >= receiver.length || index < 0)
      throw $.$$throw($.RangeError$value(index));
    return receiver[index];
  },
  is$String: true
};

$$._Manager = {"": "Object;nextIsolateId=,currentManagerId=,nextManagerId=,currentContext=,rootContext=,topEventLoop>,fromCommandLine>,isWorker>,supportsWorkers,isolates>,mainManager>,managers>",
  get$useWorkers: function() {
    return this.supportsWorkers;
  },
  get$needSerialization: function() {
    return this.get$useWorkers();
  },
  _nativeDetectEnvironment$0: function() {
    var t1 = $.get$globalWindow() == null;
    $.get$globalWorker();
    this.isWorker = t1 && $.get$globalPostMessageDefined() === true;
    this.supportsWorkers = false;
    this.fromCommandLine = t1 && this.isWorker !== true;
  },
  _nativeInitWorkerMessageHandler$0: function() {
    var function$ = function (e) { $.IsolateNatives__processWorkerMessage.call$2(this.mainManager, e); };
    $.get$globalThis().onmessage = function$;
    $.get$globalThis().dartPrint = function (object) {};
  },
  maybeCloseWorker$0: function() {
    var t1 = this.isolates;
    if ($.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1) === true)
      this.mainManager.postMessage$1($._serializeMessage($.makeLiteralMap(["command", "close"])));
  },
  _Manager$0: function() {
    this._nativeDetectEnvironment$0();
    this.topEventLoop = $._EventLoop$();
    this.isolates = $.Map_Map($.$int, $._IsolateContext);
    this.managers = $.Map_Map($.$int, $._ManagerStub);
    if (this.isWorker === true) {
      this.mainManager = $._MainManagerStub$();
      this._nativeInitWorkerMessageHandler$0();
    }
  }
};

$$._IsolateContext = {"": "Object;id=,ports>,isolateStatics",
  eval$1: function(code) {
    var old, result, t1;
    old = $._globalState().get$currentContext();
    $._globalState().set$currentContext(this);
    this._setGlobals$0();
    result = null;
    try {
      result = code.call$0();
    } finally {
      t1 = old;
      $._globalState().set$currentContext(t1);
      if (!(old == null))
        old._setGlobals$0();
    }
    return result;
  },
  _setGlobals$0: function() {
    $ = this.isolateStatics;
  },
  lookup$1: function(portId) {
    var t1 = this.ports;
    return $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, portId);
  },
  register$2: function(portId, port) {
    if (this.ports.containsKey$1(portId) === true)
      throw $.$$throw($.Exception_Exception("Registry: ports must be registered only once."));
    $.indexSet(this.ports, portId, port);
    $.indexSet($._globalState().get$isolates(), this.id, this);
  },
  unregister$1: function(portId) {
    var t1;
    this.ports.remove$1(portId);
    t1 = this.ports;
    if ($.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1) === true)
      $._globalState().get$isolates().remove$1(this.id);
  },
  _IsolateContext$0: function() {
    var t1, t2;
    t1 = $._globalState();
    t2 = t1.get$nextIsolateId();
    t1.set$nextIsolateId($.add(t2, 1));
    this.id = t2;
    this.ports = $.Map_Map($.$int, $.ReceivePort);
    this.isolateStatics = new Isolate;
  }
};

$$._EventLoop = {"": "Object;events",
  enqueue$3: function(isolate, fn, msg) {
    var t1 = this.events;
    $.getInterceptor$JSArray(t1).addLast$1(t1, $._IsolateEvent$(isolate, fn, msg));
  },
  dequeue$0: function() {
    var t1 = this.events;
    if ($.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1) === true)
      return;
    return t1.removeFirst$0();
  },
  runIteration$0: function() {
    var event$, t1, t2;
    event$ = this.dequeue$0();
    if (event$ == null) {
      if ($._globalState().get$isWorker() === true)
        $._globalState().maybeCloseWorker$0();
      else {
        if (!($._globalState().get$rootContext() == null))
          if ($._globalState().get$isolates().containsKey$1($._globalState().get$rootContext().get$id()) === true)
            if ($._globalState().get$fromCommandLine() === true) {
              t1 = $._globalState().get$rootContext().get$ports();
              t2 = $.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1) === true;
              t1 = t2;
            } else
              t1 = false;
          else
            t1 = false;
        else
          t1 = false;
        if (t1)
          throw $.$$throw($.Exception_Exception("Program exited with open ReceivePorts."));
      }
      return false;
    }
    event$.process$0();
    return true;
  },
  _runHelper$0: function() {
    if (!($.get$globalWindow() == null))
      new $._EventLoop__runHelper_next(this).call$0();
    else
      for (; this.runIteration$0() === true;)
        ;
  },
  run$0: function(exception) {
    var t1, e, trace;
    if ($._globalState().get$isWorker() !== true)
      this._runHelper$0();
    else
      try {
        this._runHelper$0();
      } catch (exception) {
        t1 = $.unwrapException(exception);
        e = t1;
        trace = $.getTraceFromException(exception);
        $._globalState().get$mainManager().postMessage$1($._serializeMessage($.makeLiteralMap(["command", "error", "msg", $.S(e) + "\n" + $.S(trace)])));
      }

  }
};

$$._IsolateEvent = {"": "Object;isolate,fn,message>",
  process$0: function() {
    this.isolate.eval$1(this.fn);
  }
};

$$._MainManagerStub = {"": "Object;",
  get$id: function() {
    return 0;
  },
  set$id: function(i) {
    throw $.$$throw($.UnimplementedError$(null));
  },
  set$onmessage: function(f) {
    throw $.$$throw($.Exception_Exception("onmessage should not be set on MainManagerStub"));
  },
  postMessage$1: function(msg) {
    $.get$globalThis().postMessage(msg);
  },
  terminate$0: function() {
  }
};

$$._BaseSendPort = {"": "Object;_isolateId>",
  _checkReplyTo$1: function(replyTo) {
    if (!(replyTo == null) && !(typeof replyTo === "object" && replyTo !== null && !!replyTo.is$_NativeJsSendPort) && !(typeof replyTo === "object" && replyTo !== null && !!replyTo.is$_WorkerSendPort) && !(typeof replyTo === "object" && replyTo !== null && !!replyTo.is$_BufferingSendPort))
      throw $.$$throw($.Exception_Exception("SendPort.send: Illegal replyTo port type"));
  },
  call$1: function(message) {
    var completer, port;
    completer = $.Completer_Completer();
    port = $.ReceivePortImpl$();
    this.send$2(message, port.toSendPort$0());
    port.receive$1(new $._BaseSendPort_call_anon(completer, port));
    return completer.get$future();
  },
  is$Function: true,
  is$SendPort: true
};

$$._NativeJsSendPort = {"": "_BaseSendPort;_receivePort>,_isolateId",
  send$2: function(message, replyTo) {
    $._waitForPendingPorts([message, replyTo], new $._NativeJsSendPort_send_anon(this, message, replyTo));
  },
  send$1: function(message) {
    return this.send$2(message, null);
  },
  operator$eq$1: function(other) {
    return typeof other === "object" && other !== null && !!other.is$_NativeJsSendPort && $.eqB(this._receivePort, other._receivePort);
  },
  get$hashCode: function() {
    return this._receivePort.get$_id();
  },
  is$_NativeJsSendPort: true,
  is$SendPort: true
};

$$._WorkerSendPort = {"": "_BaseSendPort;_workerId>,_receivePortId,_isolateId",
  send$2: function(message, replyTo) {
    $._waitForPendingPorts([message, replyTo], new $._WorkerSendPort_send_anon(this, message, replyTo));
  },
  send$1: function(message) {
    return this.send$2(message, null);
  },
  operator$eq$1: function(other) {
    var t1;
    if (typeof other === "object" && other !== null && !!other.is$_WorkerSendPort)
      t1 = $.eqB(this._workerId, other._workerId) && $.eqB(this._isolateId, other._isolateId) && $.eqB(this._receivePortId, other._receivePortId);
    else
      t1 = false;
    return t1;
  },
  get$hashCode: function() {
    return $.xor($.xor($.shl(this._workerId, 16), $.shl(this._isolateId, 8)), this._receivePortId);
  },
  is$_WorkerSendPort: true,
  is$SendPort: true
};

$$.ReceivePortImpl = {"": "Object;_id>,_liblib7$_callback>",
  _liblib7$_callback$2: function(arg0, arg1) {
    return this._liblib7$_callback.call$2(arg0, arg1);
  },
  receive$1: function(onMessage) {
    this._liblib7$_callback = onMessage;
  },
  close$0: function() {
    this._liblib7$_callback = null;
    $._globalState().get$currentContext().unregister$1(this._id);
  },
  get$close: function() {
    return new $.BoundClosure(this, "close$0");
  },
  toSendPort$0: function() {
    return $._NativeJsSendPort$(this, $._globalState().get$currentContext().get$id());
  },
  ReceivePortImpl$0: function() {
    $._globalState().get$currentContext().register$2(this._id, this);
  }
};

$$._PendingSendPortFinder = {"": "_MessageTraverser;ports>,_visited",
  visitPrimitive$1: function(x) {
  },
  visitList$1: function(list) {
    var t1 = this._visited;
    if (!($.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, list) == null))
      return;
    $.indexSet(this._visited, list, true);
    $.getInterceptor$JSArray(list).forEach$1(list, new $._PendingSendPortFinder_visitList_anon(this));
  },
  visitMap$1: function(map) {
    var t1 = this._visited;
    if (!($.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, map) == null))
      return;
    $.indexSet(this._visited, map, true);
    t1 = map.get$values();
    $.getInterceptor$JSArray(t1).forEach$1(t1, new $._PendingSendPortFinder_visitMap_anon(this));
  },
  visitSendPort$1: function(port) {
    if (!!port.is$_BufferingSendPort && port._port == null)
      this.ports.push(port.get$_futurePort());
  },
  _PendingSendPortFinder$0: function() {
    this._visited = $._JsVisitedMap$();
  }
};

$$._JsSerializer = {"": "_Serializer;_nextFreeRefId,_visited",
  visitSendPort$1: function(x) {
    if (typeof x === "object" && x !== null && !!x.is$_NativeJsSendPort)
      return this.visitNativeJsSendPort$1(x);
    if (typeof x === "object" && x !== null && !!x.is$_WorkerSendPort)
      return ["sendport", x._workerId, x._isolateId, x._receivePortId];
    if (typeof x === "object" && x !== null && !!x.is$_BufferingSendPort)
      return this.visitBufferingSendPort$1(x);
    throw $.$$throw("Illegal underlying port " + $.S(x));
  },
  visitNativeJsSendPort$1: function(port) {
    return ["sendport", $._globalState().get$currentManagerId(), port._isolateId, port._receivePort.get$_id()];
  },
  visitBufferingSendPort$1: function(port) {
    var t1 = port._port;
    if (!(t1 == null))
      return this.visitSendPort$1(t1);
    else
      throw $.$$throw("internal error: must call _waitForPendingPorts to ensure all ports are resolved at this point.");
  },
  _JsSerializer$0: function() {
    this._visited = $._JsVisitedMap$();
  }
};

$$._JsCopier = {"": "_Copier;_visited",
  visitSendPort$1: function(x) {
    if (typeof x === "object" && x !== null && !!x.is$_NativeJsSendPort)
      return this.visitNativeJsSendPort$1(x);
    if (typeof x === "object" && x !== null && !!x.is$_WorkerSendPort)
      return this.visitWorkerSendPort$1(x);
    if (typeof x === "object" && x !== null && !!x.is$_BufferingSendPort)
      return this.visitBufferingSendPort$1(x);
    throw $.$$throw("Illegal underlying port " + $.S(this.get$p()));
  },
  visitNativeJsSendPort$1: function(port) {
    return $._NativeJsSendPort$(port._receivePort, port._isolateId);
  },
  visitWorkerSendPort$1: function(port) {
    return $._WorkerSendPort$(port._workerId, port._isolateId, port._receivePortId);
  },
  visitBufferingSendPort$1: function(port) {
    var t1 = port._port;
    if (!(t1 == null))
      return this.visitSendPort$1(t1);
    else
      throw $.$$throw("internal error: must call _waitForPendingPorts to ensure all ports are resolved at this point.");
  },
  _JsCopier$0: function() {
    this._visited = $._JsVisitedMap$();
  }
};

$$._JsDeserializer = {"": "_Deserializer;_deserialized",
  deserializeSendPort$1: function(x) {
    var t1, managerId, isolateId, receivePortId, isolate, receivePort;
    t1 = $.getInterceptor$JSStringJSArray(x);
    managerId = t1.operator$index$1(x, 1);
    isolateId = t1.operator$index$1(x, 2);
    receivePortId = t1.operator$index$1(x, 3);
    if ($.eqB(managerId, $._globalState().get$currentManagerId())) {
      t1 = $._globalState().get$isolates();
      isolate = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, isolateId);
      if (isolate == null)
        return;
      receivePort = isolate.lookup$1(receivePortId);
      if (receivePort == null)
        return;
      return $._NativeJsSendPort$(receivePort, isolateId);
    } else
      return $._WorkerSendPort$(managerId, isolateId, receivePortId);
  }
};

$$._JsVisitedMap = {"": "Object;tagged",
  operator$index$1: function(object) {
    return object['__MessageTraverser__attached_info__'];
  },
  operator$indexSet$2: function(object, info) {
    var t1 = this.tagged;
    $.getInterceptor$JSArray(t1).add$1(t1, object);
    object['__MessageTraverser__attached_info__'] = info;
  },
  reset$0: function() {
    var t1 = $.List_List(0);
    $.setRuntimeTypeInfo(t1, []);
    this.tagged = t1;
  },
  cleanup$0: function() {
    var t1, length$, i;
    t1 = this.tagged;
    length$ = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
    if (typeof length$ !== "number")
      return this.cleanup$0$bailout(1, length$);
    i = 0;
    for (; i < length$; ++i) {
      t1 = this.tagged;
      $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, i)['__MessageTraverser__attached_info__'] = null;
    }
    this.tagged = null;
  },
  cleanup$0$bailout: function(state0, length$) {
    var i, t1;
    i = 0;
    for (; $.ltB(i, length$); ++i) {
      t1 = this.tagged;
      $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, i)['__MessageTraverser__attached_info__'] = null;
    }
    this.tagged = null;
  }
};

$$._MessageTraverserVisitedMap = {"": "Object;",
  operator$index$1: function(object) {
    return;
  },
  operator$indexSet$2: function(object, info) {
  },
  reset$0: function() {
  },
  cleanup$0: function() {
  }
};

$$._MessageTraverser = {"": "Object;",
  traverse$1: function(x) {
    var t1, result;
    t1 = x;
    if (t1 == null || typeof t1 === "string" || typeof t1 === "number" || typeof t1 === "boolean")
      return this.visitPrimitive$1(x);
    this._visited.reset$0();
    result = null;
    try {
      result = this._dispatch$1(x);
    } finally {
      this._visited.cleanup$0();
    }
    return result;
  },
  _dispatch$1: function(x) {
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return this.visitPrimitive$1(x);
    if (typeof x === "object" && x !== null && (x.constructor === Array || x.is$List()))
      return this.visitList$1(x);
    if (typeof x === "object" && x !== null && x.is$Map())
      return this.visitMap$1(x);
    if (typeof x === "object" && x !== null && !!x.is$SendPort)
      return this.visitSendPort$1(x);
    if (typeof x === "object" && x !== null && !!x.is$SendPortSync)
      return this.visitSendPortSync$1(x);
    return this.visitObject$1(x);
  },
  visitObject$1: function(x) {
    throw $.$$throw("Message serialization: Illegal value " + $.S(x) + " passed");
  }
};

$$._Copier = {"": "_MessageTraverser;",
  visitPrimitive$1: function(x) {
    return x;
  },
  visitList$1: function(list) {
    var t1, copy, len, i;
    if (typeof list !== "object" || list === null || list.constructor !== Array && !list.is$JavaScriptIndexingBehavior())
      return this.visitList$1$bailout(1, list);
    t1 = this._visited;
    copy = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, list);
    if (!(copy == null))
      return copy;
    len = list.length;
    copy = $.List_List(len);
    $.setRuntimeTypeInfo(copy, []);
    $.indexSet(this._visited, list, copy);
    for (i = 0; i < len; ++i) {
      if (i >= list.length)
        throw $.ioore(i);
      t1 = this._dispatch$1(list[i]);
      if (i >= copy.length)
        throw $.ioore(i);
      copy[i] = t1;
    }
    return copy;
  },
  visitList$1$bailout: function(state0, env0, env1, env2) {
    switch (state0) {
      case 1:
        list = env0;
        break;
      case 2:
        len = env2;
        list = env1;
        t1 = env0;
        break;
    }
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = this._visited;
        copy = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, list);
        if (!(copy == null))
          return copy;
        t1 = $.getInterceptor$JSStringJSArray(list);
        len = t1.get$length(list);
      case 2:
        var list, t1, copy, len, i, t2;
        state0 = 0;
        copy = $.List_List(len);
        $.setRuntimeTypeInfo(copy, []);
        $.indexSet(this._visited, list, copy);
        for (i = 0; $.ltB(i, len); ++i) {
          t2 = this._dispatch$1(t1.operator$index$1(list, i));
          if (i >= copy.length)
            throw $.ioore(i);
          copy[i] = t2;
        }
        return copy;
    }
  },
  visitMap$1: function(map) {
    var t1, t2;
    t1 = {};
    t2 = this._visited;
    t1.copy_0 = $.getInterceptor$JSStringJSArray(t2).operator$index$1(t2, map);
    t2 = t1.copy_0;
    if (!(t2 == null))
      return t2;
    t1.copy_0 = $.Map_Map();
    $.indexSet(this._visited, map, t1.copy_0);
    map.forEach$1(new $._Copier_visitMap_anon(t1, this));
    return t1.copy_0;
  }
};

$$._Serializer = {"": "_MessageTraverser;",
  visitPrimitive$1: function(x) {
    return x;
  },
  visitList$1: function(list) {
    var t1, copyId, id;
    t1 = this._visited;
    copyId = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, list);
    if (!(copyId == null))
      return ["ref", copyId];
    id = this._nextFreeRefId;
    this._nextFreeRefId = id + 1;
    $.indexSet(this._visited, list, id);
    return ["list", id, this._serializeList$1(list)];
  },
  visitMap$1: function(map) {
    var t1, copyId, id, keys, t2;
    t1 = this._visited;
    copyId = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, map);
    if (!(copyId == null))
      return ["ref", copyId];
    id = this._nextFreeRefId;
    this._nextFreeRefId = id + 1;
    $.indexSet(this._visited, map, id);
    t1 = map.get$keys();
    keys = this._serializeList$1($.getInterceptor$JSArray(t1).toList$0(t1));
    t2 = map.get$values();
    return ["map", id, keys, this._serializeList$1($.getInterceptor$JSArray(t2).toList$0(t2))];
  },
  _serializeList$1: function(list) {
    var t1, len, result, i;
    if (typeof list !== "string" && (typeof list !== "object" || list === null || list.constructor !== Array && !list.is$JavaScriptIndexingBehavior()))
      return this._serializeList$1$bailout(1, list);
    t1 = $.getInterceptor$JSStringJSArray(list);
    len = list.length;
    result = $.List_List(len);
    $.setRuntimeTypeInfo(result, []);
    for (i = 0; i < len; ++i) {
      if (i >= list.length)
        throw $.ioore(i);
      t1 = this._dispatch$1(list[i]);
      if (i >= result.length)
        throw $.ioore(i);
      result[i] = t1;
    }
    return result;
  },
  _serializeList$1$bailout: function(state0, env0, env1, env2) {
    switch (state0) {
      case 1:
        list = env0;
        break;
      case 2:
        len = env2;
        t1 = env1;
        list = env0;
        break;
    }
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = $.getInterceptor$JSStringJSArray(list);
        len = t1.get$length(list);
      case 2:
        var list, t1, len, result, i, t2;
        state0 = 0;
        result = $.List_List(len);
        $.setRuntimeTypeInfo(result, []);
        for (i = 0; $.ltB(i, len); ++i) {
          t2 = this._dispatch$1(t1.operator$index$1(list, i));
          if (i >= result.length)
            throw $.ioore(i);
          result[i] = t2;
        }
        return result;
    }
  }
};

$$._Deserializer = {"": "Object;",
  deserialize$1: function(x) {
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return x;
    this._deserialized = $.HashMap_HashMap();
    return this._deserializeHelper$1(x);
  },
  _deserializeHelper$1: function(x) {
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return x;
    switch ($.getInterceptor$JSStringJSArray(x).operator$index$1(x, 0)) {
      case "ref":
        return this._deserializeRef$1(x);
      case "list":
        return this._deserializeList$1(x);
      case "map":
        return this._deserializeMap$1(x);
      case "sendport":
        return this.deserializeSendPort$1(x);
      default:
        return this.deserializeObject$1(x);
    }
  },
  _deserializeRef$1: function(x) {
    var id, t1;
    id = $.getInterceptor$JSStringJSArray(x).operator$index$1(x, 1);
    t1 = this._deserialized;
    return $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, id);
  },
  _deserializeList$1: function(x) {
    var t1, id, dartList, len, i;
    t1 = $.getInterceptor$JSStringJSArray(x);
    id = t1.operator$index$1(x, 1);
    dartList = t1.operator$index$1(x, 2);
    if (typeof dartList !== "object" || dartList === null || (dartList.constructor !== Array || !!dartList.immutable$list) && !dartList.is$JavaScriptIndexingBehavior())
      return this._deserializeList$1$bailout(1, dartList, id);
    $.indexSet(this._deserialized, id, dartList);
    len = dartList.length;
    for (i = 0; i < len; ++i) {
      if (i >= dartList.length)
        throw $.ioore(i);
      t1 = this._deserializeHelper$1(dartList[i]);
      if (i >= dartList.length)
        throw $.ioore(i);
      dartList[i] = t1;
    }
    return dartList;
  },
  _deserializeList$1$bailout: function(state0, env0, env1, env2) {
    switch (state0) {
      case 1:
        id = env1;
        dartList = env0;
        break;
      case 2:
        len = env2;
        t2 = env1;
        dartList = env0;
        break;
    }
    switch (state0) {
      case 0:
        t1 = $.getInterceptor$JSStringJSArray(x);
        id = t1.operator$index$1(x, 1);
        dartList = t1.operator$index$1(x, 2);
      case 1:
        state0 = 0;
        $.indexSet(this._deserialized, id, dartList);
        t2 = $.getInterceptor$JSStringJSArray(dartList);
        len = t2.get$length(dartList);
      case 2:
        var t1, id, dartList, t2, len, i;
        state0 = 0;
        for (i = 0; $.ltB(i, len); ++i)
          $.indexSet(dartList, i, this._deserializeHelper$1(t2.operator$index$1(dartList, i)));
        return dartList;
    }
  },
  _deserializeMap$1: function(x) {
    var result, t1, id, keys, values, t3, len, i, key;
    result = $.Map_Map();
    t1 = $.getInterceptor$JSStringJSArray(x);
    id = t1.operator$index$1(x, 1);
    $.indexSet(this._deserialized, id, result);
    keys = t1.operator$index$1(x, 2);
    if (typeof keys !== "string" && (typeof keys !== "object" || keys === null || keys.constructor !== Array && !keys.is$JavaScriptIndexingBehavior()))
      return this._deserializeMap$1$bailout(1, x, result, t1, keys);
    values = t1.operator$index$1(x, 3);
    if (typeof values !== "string" && (typeof values !== "object" || values === null || values.constructor !== Array && !values.is$JavaScriptIndexingBehavior()))
      return this._deserializeMap$1$bailout(2, values, result, keys);
    t3 = $.getInterceptor$JSStringJSArray(keys);
    len = keys.length;
    for (i = 0; i < len; ++i) {
      if (i >= keys.length)
        throw $.ioore(i);
      key = this._deserializeHelper$1(keys[i]);
      if (i >= values.length)
        throw $.ioore(i);
      $.indexSet(result, key, this._deserializeHelper$1(values[i]));
    }
    return result;
  },
  _deserializeMap$1$bailout: function(state0, env0, env1, env2, env3, env4) {
    switch (state0) {
      case 1:
        keys = env3;
        t1 = env2;
        result = env1;
        x = env0;
        break;
      case 2:
        keys = env2;
        result = env1;
        values = env0;
        break;
      case 3:
        keys = env4;
        result = env3;
        len = env2;
        t3 = env1;
        values = env0;
        break;
    }
    switch (state0) {
      case 0:
        result = $.Map_Map();
        t1 = $.getInterceptor$JSStringJSArray(x);
        id = t1.operator$index$1(x, 1);
        $.indexSet(this._deserialized, id, result);
        keys = t1.operator$index$1(x, 2);
      case 1:
        state0 = 0;
        values = t1.operator$index$1(x, 3);
      case 2:
        state0 = 0;
        t3 = $.getInterceptor$JSStringJSArray(keys);
        len = t3.get$length(keys);
      case 3:
        var result, t1, id, keys, x, values, t3, len, i;
        state0 = 0;
        for (t1 = $.getInterceptor$JSStringJSArray(values), i = 0; $.ltB(i, len); ++i)
          $.indexSet(result, this._deserializeHelper$1(t3.operator$index$1(keys, i)), this._deserializeHelper$1(t1.operator$index$1(values, i)));
        return result;
    }
  },
  deserializeObject$1: function(x) {
    throw $.$$throw("Unexpected serialized object");
  }
};

$$.TimerImpl = {"": "Object;_once,_handle",
  TimerImpl$2: function(milliseconds, callback) {
    if ($.hasTimer() && $._globalState().get$isWorker() !== true)
      this._handle = $.get$globalThis().setTimeout($.convertDartClosureToJS(new $.anon(this, callback), 0), milliseconds);
    else if (!$.eqB(milliseconds, 0))
      throw $.$$throw($.UnsupportedError$("Non DOM isolate with timer greater than 0."));
    else
      $._globalState().get$topEventLoop().enqueue$3($._globalState().get$currentContext(), new $.anon0(this, callback), "timer");
  }
};

$$.AsyncError = {"": "Object;error>,stackTrace>,cause>",
  _writeOn$1: function(buffer, exception) {
    var t1, message, t2;
    t1 = $.getInterceptor$JSArray(buffer);
    t1.add$1(buffer, "'");
    message = null;
    try {
      t2 = this.error;
      message = $.getInterceptor(t2).toString$0(t2);
    } catch (exception) {
      $.unwrapException(exception);
      message = $.Error_safeToString(this.error);
    }

    t1.add$1(buffer, message);
    t1.add$1(buffer, "'\n");
    t2 = this.stackTrace;
    if (!(t2 == null)) {
      t1.add$1(buffer, "Stack trace:\n");
      t1.add$1(buffer, $.getInterceptor(t2).toString$0(t2));
      t1.add$1(buffer, "\n");
    }
  },
  toString$0: function() {
    var buffer, t1, cause;
    buffer = $.StringBuffer_StringBuffer("");
    t1 = $.getInterceptor$JSArray(buffer);
    t1.add$1(buffer, "AsyncError: ");
    this._writeOn$1(buffer);
    cause = this.cause;
    for (; !(cause == null);) {
      t1.add$1(buffer, "Caused by: ");
      cause._writeOn$1(buffer);
      cause = cause.get$cause();
    }
    return t1.toString$0(buffer);
  },
  throwDelayed$0: function(exception) {
    var reportError = new $.AsyncError_throwDelayed_reportError(this);
    try {
      $.Timer_Timer(0, new $.AsyncError_throwDelayed_anon(this, reportError));
    } catch (exception) {
      $.unwrapException(exception);
      reportError.call$0();
    }

  },
  is$AsyncError: true
};

$$._CompleterImpl = {"": "Object;future>,_isComplete>",
  complete$1: function(value) {
    if (this._isComplete)
      throw $.$$throw($.StateError$("Future already completed"));
    this._isComplete = true;
    this.future._setValue$1(value);
  },
  completeError$2: function(error, stackTrace) {
    var t1 = {};
    if (this._isComplete)
      throw $.$$throw($.StateError$("Future already completed"));
    this._isComplete = true;
    t1.asyncError_0 = null;
    if (typeof error === "object" && error !== null && !!error.is$AsyncError)
      t1.asyncError_0 = error;
    else
      t1.asyncError_0 = $.AsyncError$(error, stackTrace);
    $.Timer_Timer(0, new $._CompleterImpl_completeError_anon(t1, this));
  },
  completeError$1: function(error) {
    return this.completeError$2(error, null);
  }
};

$$._FutureListenerWrapper = {"": "Object;future>,_nextListener=",
  _sendValue$1: function(value) {
    this.future._setValue$1(value);
  },
  _sendError$1: function(error) {
    this.future._setError$1(error);
  }
};

$$._FutureImpl = {"": "Object;_state,_resultOrListeners",
  get$_isComplete: function() {
    return !$.eqB(this._state, 0);
  },
  get$_hasValue: function() {
    return $.eq(this._state, 1);
  },
  get$_hasError: function() {
    return $.eq(this._state, 2);
  },
  then$2$onError: function(f, onError) {
    var t1;
    if (this.get$_isComplete() !== true) {
      if (onError == null) {
        t1 = $._ThenFuture$(f);
        t1._subscribeTo$1(this);
        return t1;
      }
      t1 = $._SubscribeFuture$(f, onError);
      t1._subscribeTo$1(this);
      return t1;
    }
    if (this.get$_hasError() === true) {
      if (!(onError == null))
        return this._handleError$2(onError, null);
      return $._FutureWrapper$(this);
    } else
      return this._handleValue$1(f);
  },
  then$1: function(f) {
    return this.then$2$onError(f, null);
  },
  catchError$2$test: function(f, test) {
    var t1;
    if (this.get$_hasValue() === true)
      return $._FutureWrapper$(this);
    if (this.get$_isComplete() !== true) {
      t1 = $._CatchErrorFuture$(f, test);
      t1._subscribeTo$1(this);
      return t1;
    } else
      return this._handleError$2(f, test);
  },
  catchError$1: function(f) {
    return this.catchError$2$test(f, null);
  },
  _handleValue$1: function(onValue) {
    var thenFuture = $._ThenFuture$(onValue);
    $.Timer_Timer(0, new $._FutureImpl__handleValue_anon(thenFuture, this._resultOrListeners));
    return thenFuture;
  },
  _handleError$2: function(onError, test) {
    var error, errorFuture;
    error = this._resultOrListeners;
    errorFuture = $._CatchErrorFuture$(onError, test);
    $.Timer_Timer(0, new $._FutureImpl__handleError_anon(error, errorFuture));
    return errorFuture;
  },
  _setValue$1: function(value) {
    var listeners, listeners0;
    if (!$.eqB(this._state, 0))
      throw $.$$throw($.StateError$("Future already completed"));
    listeners = this._removeListeners$0();
    this._state = 1;
    this._resultOrListeners = value;
    for (; !(listeners == null); listeners = listeners0) {
      listeners0 = listeners.get$_nextListener();
      listeners.set$_nextListener(null);
      listeners._sendValue$1(value);
    }
  },
  get$_setValue: function() {
    return new $.BoundClosure0(this, "_setValue$1");
  },
  _setError$1: function(error) {
    var listeners, listeners0;
    if (this.get$_isComplete() === true)
      throw $.$$throw($.StateError$("Future already completed"));
    listeners = this._removeListeners$0();
    this._state = 2;
    this._resultOrListeners = error;
    if (listeners == null) {
      error.throwDelayed$0();
      return;
    }
    for (; !(listeners == null); listeners = listeners0) {
      listeners0 = listeners.get$_nextListener();
      listeners.set$_nextListener(null);
      listeners._sendError$1(error);
    }
  },
  get$_setError: function() {
    return new $.BoundClosure0(this, "_setError$1");
  },
  _addListener$1: function(listener) {
    listener.set$_nextListener(this._resultOrListeners);
    this._resultOrListeners = listener;
  },
  _removeListeners$0: function() {
    var current, prev, next;
    current = this._resultOrListeners;
    this._resultOrListeners = null;
    for (prev = null; !(current == null); prev = current, current = next) {
      next = current.get$_nextListener();
      current.set$_nextListener(prev);
    }
    return prev;
  },
  _chain$1: function(future) {
    var t1, t2;
    if (this.get$_isComplete() !== true)
      this._addListener$1(future._asListener$0());
    else {
      t1 = this.get$_hasValue() === true;
      t2 = this._resultOrListeners;
      if (t1)
        future._setValue$1(t2);
      else
        future._setError$1(t2);
    }
  },
  _asListener$0: function() {
    return $._FutureListener__FutureListener$wrap(this);
  },
  _FutureImpl$immediate$1: function(value) {
    this._state = 1;
    this._resultOrListeners = value;
  },
  is$_FutureImpl: true,
  is$Future: true
};

$$._TransformFuture = {"": "_FutureImpl;_nextListener=",
  _subscribeTo$1: function(future) {
    future._addListener$1(this);
  },
  _setOrChainValue$1: function(result) {
    if (typeof result === "object" && result !== null && !!result.is$Future)
      if (!!result.is$_FutureImpl) {
        result._chain$1(this);
        return;
      } else {
        result.then$2$onError(this.get$_setValue(), this.get$_setError());
        return;
      }
    else
      this._setValue$1(result);
  }
};

$$._ThenFuture = {"": "_TransformFuture;_onValue,_nextListener,_state,_resultOrListeners",
  _onValue$1: function(arg0) {
    return this._onValue.call$1(arg0);
  },
  _sendValue$1: function(value, exception) {
    var result, t1, e, e0, s;
    result = null;
    try {
      result = this._onValue$1(value);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.is$AsyncError) {
        e = t1;
        this._setError$1(e);
        return;
      } else {
        e0 = t1;
        s = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$(e0, s));
        return;
      }
    }

    this._setOrChainValue$1(result);
  },
  _sendError$1: function(error) {
    this._setError$1(error);
  }
};

$$._CatchErrorFuture = {"": "_TransformFuture;_test,_onError,_nextListener,_state,_resultOrListeners",
  _test$1: function(arg0) {
    return this._test.call$1(arg0);
  },
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _sendValue$1: function(value) {
    this._setValue$1(value);
  },
  _sendError$1: function(error, exception, exception) {
    var matchesTest, t1, e, s, result, e0, e1, s0;
    if (!(this._test == null)) {
      matchesTest = null;
      try {
        matchesTest = this._test$1(error.get$error());
      } catch (exception) {
        t1 = $.unwrapException(exception);
        e = t1;
        s = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$withCause(e, s, error));
        return;
      }

      if (matchesTest !== true) {
        this._setError$1(error);
        return;
      }
    }
    result = null;
    try {
      result = this._onError$1(error);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.is$AsyncError) {
        e0 = t1;
        this._setError$1(e0);
        return;
      } else {
        e1 = t1;
        s0 = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$withCause(e1, s0, error));
        return;
      }
    }

    this._setOrChainValue$1(result);
  }
};

$$._SubscribeFuture = {"": "_ThenFuture;_onError,_onValue,_nextListener,_state,_resultOrListeners",
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _sendError$1: function(error, exception) {
    var result, t1, e, e0, s;
    result = null;
    try {
      result = this._onError$1(error);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.is$AsyncError) {
        e = t1;
        this._setError$1(e);
        return;
      } else {
        e0 = t1;
        s = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$withCause(e0, s, error));
        return;
      }
    }

    this._setOrChainValue$1(result);
  }
};

$$._FutureWrapper = {"": "Object;_future",
  then$2$onError: function(function$, onError) {
    return this._future.then$2$onError(function$, onError);
  },
  then$1: function(function$) {
    return this.then$2$onError(function$, null);
  },
  catchError$2$test: function(function$, test) {
    return this._future.catchError$2$test(function$, test);
  },
  catchError$1: function(function$) {
    return this.catchError$2$test(function$, null);
  },
  is$Future: true
};

$$.BodyElementEvents = {"": "ElementEvents;_ptr",
  get$blur: function() {
    return this.operator$index$1("blur");
  },
  blur$0: function() {
    return this.get$blur().call$0();
  },
  get$error: function() {
    return this.operator$index$1("error");
  },
  get$focus: function() {
    return this.operator$index$1("focus");
  },
  focus$0: function() {
    return this.get$focus().call$0();
  },
  get$hashChange: function() {
    return this.operator$index$1("hashchange");
  },
  get$message: function() {
    return this.operator$index$1("message");
  },
  get$popState: function() {
    return this.operator$index$1("popstate");
  }
};

$$.DocumentEvents = {"": "ElementEvents;_ptr"};

$$._FrozenCssClassSet = {"": "CssClassSet;",
  writeClasses$1: function(s) {
    throw $.$$throw($.UnsupportedError$("frozen class set cannot be modified"));
  },
  readClasses$0: function() {
    return $.Set_Set($.String);
  }
};

$$._ChildrenElementList = {"": "Object;_liblib3$_element,_childElements",
  toList$0: function() {
    var t1, t3, t4, output, len, i, t2;
    t1 = this._childElements;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
      return this.toList$0$bailout(1, t1);
    t3 = $.getInterceptor$JSStringJSArray(t1);
    t4 = t1.length;
    output = $.List_List$fixedLength(t4, null, $.Element);
    $.setRuntimeTypeInfo(output, [$.Element]);
    len = t1.length;
    i = 0;
    for (; i < len; ++i) {
      t2 = t1[i];
      if (i >= t4)
        throw $.ioore(i);
      output[i] = t2;
    }
    return output;
  },
  toList$0$bailout: function(state0, env0, env1, env2, env3) {
    switch (state0) {
      case 1:
        t1 = env0;
        break;
      case 2:
        t1 = env3;
        t3 = env2;
        len = env1;
        output = env0;
        break;
    }
    switch (state0) {
      case 0:
        t1 = this._childElements;
      case 1:
        state0 = 0;
        t3 = $.getInterceptor$JSStringJSArray(t1);
        output = $.List_List$fixedLength(t3.get$length(t1), null, $.Element);
        $.setRuntimeTypeInfo(output, [$.Element]);
        len = t3.get$length(t1);
      case 2:
        var t1, t3, output, len, i, t2;
        state0 = 0;
        i = 0;
        for (; $.ltB(i, len); ++i) {
          t2 = t3.operator$index$1(t1, i);
          if (i >= output.length)
            throw $.ioore(i);
          output[i] = t2;
        }
        return output;
    }
  },
  contains$1: function(element) {
    var t1 = this._childElements;
    return $.getInterceptor$JSStringJSArray(t1).contains$1(t1, element);
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this._childElements, t1 = $.getInterceptor$JSArray(t1).get$iterator(t1); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
  },
  every$1: function(f) {
    var t1;
    for (t1 = $.getInterceptor$JSArray(this).get$iterator(this); t1.moveNext$0() === true;)
      if (f.call$1(t1.get$current()) !== true)
        return false;
    return true;
  },
  join$1: function(separator) {
    return $.Collections_joinList(this, separator);
  },
  mappedBy$1: function(f) {
    return $.MappedList$(this, f, $.Element, null);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  get$isEmpty: function() {
    return this._liblib3$_element.firstElementChild == null;
  },
  get$length: function() {
    var t1 = this._childElements;
    return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
  },
  operator$index$1: function(index) {
    var t1 = this._childElements;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
      return this.operator$index$1$bailout3(1, t1, index);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  operator$index$1$bailout3: function(state0, t1, index) {
    return $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, index);
  },
  operator$indexSet$2: function(index, value) {
    var t1, t2;
    t1 = this._liblib3$_element;
    t2 = this._childElements;
    t1.$$dom_replaceChild$2(value, $.getInterceptor$JSStringJSArray(t2).operator$index$1(t2, index));
  },
  set$length: function(newLength) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  add$1: function(value) {
    this._liblib3$_element.$$dom_appendChild$1(value);
    return value;
  },
  addLast$1: function(value) {
    this._liblib3$_element.$$dom_appendChild$1(value);
    return value;
  },
  get$iterator: function() {
    var t1 = this.toList$0();
    return $.getInterceptor$JSArray(t1).get$iterator(t1);
  },
  addAll$1: function(iterable) {
    var t1, t2;
    for (t1 = $.getInterceptor$JSArray(iterable).get$iterator(iterable), t2 = this._liblib3$_element; t1.moveNext$0() === true;)
      t2.$$dom_appendChild$1(t1.get$current());
  },
  setRange$4: function(start, rangeLength, from, startFrom) {
    throw $.$$throw($.UnimplementedError$(null));
  },
  setRange$3: function(start, rangeLength, from) {
    return this.setRange$4(start, rangeLength, from, 0);
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnimplementedError$(null));
  },
  getRange$2: function(start, rangeLength) {
    return $._FrozenElementList$_wrap($.Lists_getRange(this, start, rangeLength, []));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  clear$0: function() {
    this._liblib3$_element.textContent = "";
  },
  removeLast$0: function() {
    var result = $.getInterceptor$JSArray(this).get$last(this);
    if (!(result == null))
      this._liblib3$_element.$$dom_removeChild$1(result);
    return result;
  },
  get$last: function() {
    var result = this._liblib3$_element.lastElementChild;
    if (result == null)
      throw $.$$throw($.StateError$("No elements"));
    return result;
  },
  is$List: function() {
    return true;
  },
  is$Collection: function() {
    return true;
  }
};

$$._FrozenElementList = {"": "Object;_nodeList",
  contains$1: function(element) {
    var t1;
    for (t1 = $.getInterceptor$JSArray(this).get$iterator(this); t1.moveNext$0() === true;)
      if ($.eqB(t1.get$current(), element))
        return true;
    return false;
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.getInterceptor$JSArray(this).get$iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
  },
  join$1: function(separator) {
    return $.Collections_joinList(this, separator);
  },
  mappedBy$1: function(f) {
    return $.MappedList$(this, f, $.Element, null);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  every$1: function(f) {
    var t1;
    for (t1 = $.getInterceptor$JSArray(this).get$iterator(this); t1.moveNext$0() === true;)
      if (f.call$1(t1.get$current()) !== true)
        return false;
    return true;
  },
  toList$0: function() {
    var t1 = $.List_List$from(this, $.Element);
    $.setRuntimeTypeInfo(t1, [$.Element]);
    return t1;
  },
  get$isEmpty: function() {
    var t1 = this._nodeList;
    return $.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1);
  },
  get$length: function() {
    var t1 = this._nodeList;
    return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
  },
  operator$index$1: function(index) {
    var t1 = this._nodeList;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
      return this.operator$index$1$bailout2(1, t1, index);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  operator$index$1$bailout2: function(state0, t1, index) {
    return $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, index);
  },
  operator$indexSet$2: function(index, value) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  set$length: function(newLength) {
    var t1 = this._nodeList;
    $.getInterceptor$JSArray(t1).set$length(t1, newLength);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  get$iterator: function() {
    return $._FrozenElementListIterator$(this);
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  setRange$4: function(start, rangeLength, from, startFrom) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  setRange$3: function(start, rangeLength, from) {
    return this.setRange$4(start, rangeLength, from, 0);
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  getRange$2: function(start, rangeLength) {
    var t1 = this._nodeList;
    return $._FrozenElementList$_wrap($.getInterceptor$JSArray(t1).getRange$2(t1, start, rangeLength));
  },
  indexOf$2: function(element, start) {
    var t1 = this._nodeList;
    return $.getInterceptor$JSStringJSArray(t1).indexOf$2(t1, element, start);
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$(""));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$(""));
  },
  get$last: function() {
    var t1 = this._nodeList;
    return $.getInterceptor$JSArray(t1).get$last(t1);
  },
  is$List: function() {
    return true;
  },
  is$Collection: function() {
    return true;
  }
};

$$._FrozenElementListIterator = {"": "Object;_liblib3$_list,_liblib3$_index,_current",
  moveNext$0: function() {
    var t1, nextIndex, t2, t3;
    t1 = this._liblib3$_index;
    if (typeof t1 !== "number")
      return this.moveNext$0$bailout2(1, t1);
    nextIndex = t1 + 1;
    t1 = this._liblib3$_list;
    t2 = $.getInterceptor$JSStringJSArray(t1);
    t3 = t2.get$length(t1);
    if (typeof t3 !== "number")
      return this.moveNext$0$bailout2(2, t1, t2, t3, nextIndex);
    if (nextIndex < t3) {
      this._current = t1.operator$index$1(nextIndex);
      this._liblib3$_index = nextIndex;
      return true;
    }
    this._liblib3$_index = t2.get$length(t1);
    this._current = null;
    return false;
  },
  moveNext$0$bailout2: function(state0, env0, env1, env2, env3) {
    switch (state0) {
      case 1:
        t1 = env0;
        break;
      case 2:
        nextIndex = env3;
        t3 = env2;
        t2 = env1;
        t1 = env0;
        break;
    }
    switch (state0) {
      case 0:
        t1 = this._liblib3$_index;
      case 1:
        state0 = 0;
        nextIndex = $.add(t1, 1);
        t1 = this._liblib3$_list;
        t2 = $.getInterceptor$JSStringJSArray(t1);
        t3 = t2.get$length(t1);
      case 2:
        var t1, nextIndex, t2, t3;
        state0 = 0;
        if ($.ltB(nextIndex, t3)) {
          this._current = t1.operator$index$1(nextIndex);
          this._liblib3$_index = nextIndex;
          return true;
        }
        this._liblib3$_index = t2.get$length(t1);
        this._current = null;
        return false;
    }
  },
  get$current: function() {
    return this._current;
  }
};

$$._ElementCssClassSet = {"": "CssClassSet;_liblib3$_element",
  readClasses$0: function() {
    var s, classname, t1, t2, t3, trimmed;
    s = $.Set_Set($.String);
    classname = this._liblib3$_element.className;
    for (t1 = $.getInterceptor$JSString(classname).split$1(classname, " "), t1 = $.getInterceptor$JSArray(t1).get$iterator(t1), t2 = $.getInterceptor$JSArray(s); t1.moveNext$0() === true;) {
      t3 = t1.get$current();
      trimmed = $.getInterceptor$JSString(t3).trim$0(t3);
      if ($.getInterceptor$JSStringJSArray(trimmed).get$isEmpty(trimmed) !== true)
        t2.add$1(s, trimmed);
    }
    return s;
  },
  writeClasses$1: function(s) {
    var t1;
    $.setRuntimeTypeInfo($.List_List$from(s), []);
    t1 = $.getInterceptor$JSArray(s).join$1(s, " ");
    this._liblib3$_element.className = t1;
  }
};

$$.ElementEvents = {"": "Events;_ptr",
  get$blur: function() {
    return this.operator$index$1("blur");
  },
  blur$0: function() {
    return this.get$blur().call$0();
  },
  get$change: function() {
    return this.operator$index$1("change");
  },
  get$click: function() {
    return this.operator$index$1("click");
  },
  click$0: function() {
    return this.get$click().call$0();
  },
  get$doubleClick: function() {
    return this.operator$index$1("dblclick");
  },
  get$error: function() {
    return this.operator$index$1("error");
  },
  get$focus: function() {
    return this.operator$index$1("focus");
  },
  focus$0: function() {
    return this.get$focus().call$0();
  },
  get$keyUp: function() {
    return this.operator$index$1("keyup");
  },
  get$reset: function() {
    return this.operator$index$1("reset");
  },
  reset$0: function() {
    return this.get$reset().call$0();
  },
  get$submit: function() {
    return this.operator$index$1("submit");
  }
};

$$.Events = {"": "Object;_ptr",
  operator$index$1: function(type) {
    return $.EventListenerList$(this._ptr, type);
  }
};

$$.EventListenerList = {"": "Object;_ptr,_type",
  add$2: function(listener, useCapture) {
    this._ptr.$$dom_addEventListener$3(this._type, listener, useCapture);
    return this;
  },
  add$1: function(listener) {
    return this.add$2(listener, false);
  },
  remove$2: function(listener, useCapture) {
    this._ptr.$$dom_removeEventListener$3(this._type, listener, useCapture);
    return this;
  },
  remove$1: function(listener) {
    return this.remove$2(listener, false);
  }
};

$$.FrameSetElementEvents = {"": "ElementEvents;_ptr",
  get$blur: function() {
    return this.operator$index$1("blur");
  },
  blur$0: function() {
    return this.get$blur().call$0();
  },
  get$error: function() {
    return this.operator$index$1("error");
  },
  get$focus: function() {
    return this.operator$index$1("focus");
  },
  focus$0: function() {
    return this.get$focus().call$0();
  },
  get$hashChange: function() {
    return this.operator$index$1("hashchange");
  },
  get$message: function() {
    return this.operator$index$1("message");
  },
  get$popState: function() {
    return this.operator$index$1("popstate");
  }
};

$$.InputElementEvents = {"": "ElementEvents;_ptr"};

$$.MediaElementEvents = {"": "ElementEvents;_ptr"};

$$._ChildNodeListLazy = {"": "Object;_this",
  get$last: function() {
    var result = this._this.lastChild;
    if (result == null)
      throw $.$$throw($.StateError$("No elements"));
    return result;
  },
  add$1: function(value) {
    this._this.$$dom_appendChild$1(value);
  },
  addLast$1: function(value) {
    this._this.$$dom_appendChild$1(value);
  },
  addAll$1: function(iterable) {
    var t1, t2;
    for (t1 = $.getInterceptor$JSArray(iterable).get$iterator(iterable), t2 = this._this; t1.moveNext$0() === true;)
      t2.$$dom_appendChild$1(t1.get$current());
  },
  removeLast$0: function() {
    var result = this.get$last();
    if (!(result == null))
      this._this.$$dom_removeChild$1(result);
    return result;
  },
  clear$0: function() {
    this._this.textContent = "";
  },
  operator$indexSet$2: function(index, value) {
    this._this.$$dom_replaceChild$2(value, this.operator$index$1(index));
  },
  get$iterator: function() {
    var t1 = this._this.childNodes;
    return $.getInterceptor$JSArray(t1).get$iterator(t1);
  },
  contains$1: function(element) {
    return $.Collections_contains(this, element);
  },
  forEach$1: function(f) {
    return $.Collections_forEach(this, f);
  },
  join$1: function(separator) {
    return $.Collections_joinList(this, separator);
  },
  mappedBy$1: function(f) {
    return $.MappedList$(this, f, $.Node, null);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f, $.Node);
  },
  every$1: function(f) {
    return $.Collections_every(this, f);
  },
  toList$0: function() {
    var t1 = $.List_List$from(this, $.Node);
    $.setRuntimeTypeInfo(t1, [$.Node]);
    return t1;
  },
  get$isEmpty: function() {
    return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  setRange$4: function(start, rangeLength, from, startFrom) {
    throw $.$$throw($.UnsupportedError$("Cannot setRange on immutable List."));
  },
  setRange$3: function(start, rangeLength, from) {
    return this.setRange$4(start, rangeLength, from, null);
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  get$length: function() {
    var t1 = this._this.childNodes;
    return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot set length on immutable List."));
  },
  operator$index$1: function(index) {
    var t1 = this._this.childNodes;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
      return this.operator$index$1$bailout0(1, index, t1);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  operator$index$1$bailout0: function(state0, index, t1) {
    return $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, index);
  },
  is$List: function() {
    return true;
  },
  is$Collection: function() {
    return true;
  }
};

$$.WebSocketEvents = {"": "Events;_ptr",
  get$close: function() {
    return this.operator$index$1("close");
  },
  close$0: function() {
    return this.get$close().call$0();
  },
  get$error: function() {
    return this.operator$index$1("error");
  },
  get$message: function() {
    return this.operator$index$1("message");
  },
  get$open: function() {
    return this.operator$index$1("open");
  }
};

$$.WindowEvents = {"": "Events;_ptr",
  get$blur: function() {
    return this.operator$index$1("blur");
  },
  blur$0: function() {
    return this.get$blur().call$0();
  },
  get$change: function() {
    return this.operator$index$1("change");
  },
  get$click: function() {
    return this.operator$index$1("click");
  },
  click$0: function() {
    return this.get$click().call$0();
  },
  get$doubleClick: function() {
    return this.operator$index$1("dblclick");
  },
  get$error: function() {
    return this.operator$index$1("error");
  },
  get$focus: function() {
    return this.operator$index$1("focus");
  },
  focus$0: function() {
    return this.get$focus().call$0();
  },
  get$hashChange: function() {
    return this.operator$index$1("hashchange");
  },
  get$keyUp: function() {
    return this.operator$index$1("keyup");
  },
  get$message: function() {
    return this.operator$index$1("message");
  },
  get$popState: function() {
    return this.operator$index$1("popstate");
  },
  get$reset: function() {
    return this.operator$index$1("reset");
  },
  reset$0: function() {
    return this.get$reset().call$0();
  },
  get$submit: function() {
    return this.operator$index$1("submit");
  }
};

$$._AttributeMap = {"": "Object;",
  clear$0: function() {
    for (var t1 = this.get$keys(), t1 = $.getInterceptor$JSArray(t1).get$iterator(t1); t1.moveNext$0() === true;)
      this.remove$1(t1.get$current());
  },
  forEach$1: function(f) {
    var t1, t2;
    for (t1 = this.get$keys(), t1 = $.getInterceptor$JSArray(t1).get$iterator(t1); t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      f.call$2(t2, this.operator$index$1(t2));
    }
  },
  get$keys: function() {
    var attributes, keys, t1, len, i;
    attributes = this._liblib3$_element.attributes;
    if (typeof attributes !== "string" && (typeof attributes !== "object" || attributes === null || attributes.constructor !== Array && !attributes.is$JavaScriptIndexingBehavior()))
      return this.get$keys$bailout(1, attributes);
    keys = $.List_List(0, $.String);
    $.setRuntimeTypeInfo(keys, [$.String]);
    t1 = $.getInterceptor$JSStringJSArray(attributes);
    len = attributes.length;
    i = 0;
    for (; i < len; ++i) {
      if (i >= attributes.length)
        throw $.ioore(i);
      if (this._matches$1(attributes[i]) === true) {
        if (i >= attributes.length)
          throw $.ioore(i);
        keys.push(attributes[i].get$$$dom_localName());
      }
    }
    return keys;
  },
  get$keys$bailout: function(state0, env0, env1, env2, env3) {
    switch (state0) {
      case 1:
        attributes = env0;
        break;
      case 2:
        len = env3;
        t1 = env2;
        attributes = env1;
        keys = env0;
        break;
    }
    switch (state0) {
      case 0:
        attributes = this._liblib3$_element.attributes;
      case 1:
        state0 = 0;
        keys = $.List_List(0, $.String);
        $.setRuntimeTypeInfo(keys, [$.String]);
        t1 = $.getInterceptor$JSStringJSArray(attributes);
        len = t1.get$length(attributes);
      case 2:
        var attributes, keys, t1, len, i;
        state0 = 0;
        i = 0;
        for (; $.ltB(i, len); ++i)
          if (this._matches$1(t1.operator$index$1(attributes, i)) === true)
            keys.push(t1.operator$index$1(attributes, i).get$$$dom_localName());
        return keys;
    }
  },
  get$values: function() {
    var attributes, values, t1, len, i;
    attributes = this._liblib3$_element.attributes;
    if (typeof attributes !== "string" && (typeof attributes !== "object" || attributes === null || attributes.constructor !== Array && !attributes.is$JavaScriptIndexingBehavior()))
      return this.get$values$bailout(1, attributes);
    values = $.List_List(0, $.String);
    $.setRuntimeTypeInfo(values, [$.String]);
    t1 = $.getInterceptor$JSStringJSArray(attributes);
    len = attributes.length;
    i = 0;
    for (; i < len; ++i) {
      if (i >= attributes.length)
        throw $.ioore(i);
      if (this._matches$1(attributes[i]) === true) {
        if (i >= attributes.length)
          throw $.ioore(i);
        values.push(attributes[i].get$value());
      }
    }
    return values;
  },
  get$values$bailout: function(state0, env0, env1, env2, env3) {
    switch (state0) {
      case 1:
        attributes = env0;
        break;
      case 2:
        len = env3;
        t1 = env2;
        attributes = env1;
        values = env0;
        break;
    }
    switch (state0) {
      case 0:
        attributes = this._liblib3$_element.attributes;
      case 1:
        state0 = 0;
        values = $.List_List(0, $.String);
        $.setRuntimeTypeInfo(values, [$.String]);
        t1 = $.getInterceptor$JSStringJSArray(attributes);
        len = t1.get$length(attributes);
      case 2:
        var attributes, values, t1, len, i;
        state0 = 0;
        i = 0;
        for (; $.ltB(i, len); ++i)
          if (this._matches$1(t1.operator$index$1(attributes, i)) === true)
            values.push(t1.operator$index$1(attributes, i).get$value());
        return values;
    }
  },
  get$isEmpty: function() {
    return $.eq(this.get$length(), 0);
  },
  is$Map: function() {
    return true;
  }
};

$$._ElementAttributeMap = {"": "_AttributeMap;_liblib3$_element",
  containsKey$1: function(key) {
    return this._liblib3$_element.$$dom_hasAttribute$1(key);
  },
  operator$index$1: function(key) {
    return this._liblib3$_element.$$dom_getAttribute$1(key);
  },
  operator$indexSet$2: function(key, value) {
    this._liblib3$_element.$$dom_setAttribute$2(key, $.S(value));
  },
  remove$1: function(key) {
    var t1, value;
    t1 = this._liblib3$_element;
    value = t1.$$dom_getAttribute$1(key);
    t1.$$dom_removeAttribute$1(key);
    return value;
  },
  get$length: function() {
    var t1 = this.get$keys();
    return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
  },
  _matches$1: function(node) {
    return node.get$$$dom_namespaceUri() == null;
  }
};

$$.CssClassSet = {"": "Object;",
  toString$0: function() {
    var t1 = $.List_List$from(this.readClasses$0());
    $.setRuntimeTypeInfo(t1, []);
    return $.Strings_join(t1, " ");
  },
  get$iterator: function() {
    var t1 = this.readClasses$0();
    return $.getInterceptor$JSArray(t1).get$iterator(t1);
  },
  forEach$1: function(f) {
    var t1 = this.readClasses$0();
    $.getInterceptor$JSArray(t1).forEach$1(t1, f);
  },
  join$1: function(separator) {
    var t1 = this.readClasses$0();
    return $.getInterceptor$JSArray(t1).join$1(t1, separator);
  },
  mappedBy$1: function(f) {
    var t1 = this.readClasses$0();
    return $.getInterceptor$JSArray(t1).mappedBy$1(t1, f);
  },
  where$1: function(f) {
    var t1 = this.readClasses$0();
    return $.getInterceptor$JSArray(t1).where$1(t1, f);
  },
  every$1: function(f) {
    var t1 = this.readClasses$0();
    return $.getInterceptor$JSArray(t1).every$1(t1, f);
  },
  get$isEmpty: function() {
    var t1 = this.readClasses$0();
    return $.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1);
  },
  get$length: function() {
    var t1 = this.readClasses$0();
    return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
  },
  contains$1: function(value) {
    var t1 = this.readClasses$0();
    return $.getInterceptor$JSStringJSArray(t1).contains$1(t1, value);
  },
  add$1: function(value) {
    this._modify$1(new $.CssClassSet_add_anon(value));
  },
  remove$1: function(value) {
    var s, result;
    s = this.readClasses$0();
    result = s.remove$1(value);
    this.writeClasses$1(s);
    return result;
  },
  addAll$1: function(iterable) {
    this._modify$1(new $.CssClassSet_addAll_anon(iterable));
  },
  removeAll$1: function(iterable) {
    this._modify$1(new $.CssClassSet_removeAll_anon(iterable));
  },
  get$last: function() {
    var t1 = this.readClasses$0();
    return $.getInterceptor$JSArray(t1).get$last(t1);
  },
  toList$0: function() {
    var t1 = this.readClasses$0();
    return $.getInterceptor$JSArray(t1).toList$0(t1);
  },
  clear$0: function() {
    this._modify$1(new $.CssClassSet_clear_anon());
  },
  _modify$1: function(f) {
    var s = this.readClasses$0();
    f.call$1(s);
    this.writeClasses$1(s);
  },
  is$Collection: function() {
    return true;
  }
};

$$._DOMWindowCrossFrame = {"": "Object;_window",
  get$location: function() {
    return $._LocationCrossFrame__createSafe(this._window.location);
  },
  get$parent: function() {
    return $._DOMWindowCrossFrame__createSafe(this._window.parent);
  },
  close$0: function() {
    return this._window.close();
  },
  get$close: function() {
    return new $.BoundClosure(this, "close$0");
  }
};

$$._LocationCrossFrame = {"": "Object;_location>"};

$$._LocationWrapper = {"": "Object;_ptr",
  get$hash: function() {
    return $._LocationWrapper__get(this._ptr, "hash");
  },
  get$host: function() {
    return $._LocationWrapper__get(this._ptr, "host");
  },
  toString$0: function() {
    return this._ptr.toString();
  },
  is$Location: function() {
    return true;
  }
};

$$.FixedSizeListIterator = {"": "Object;_array,_length,_position,_current",
  moveNext$0: function() {
    var t1, nextPosition;
    t1 = this._position;
    if (typeof t1 !== "number")
      return this.moveNext$0$bailout(1, t1);
    nextPosition = t1 + 1;
    t1 = this._length;
    if (typeof t1 !== "number")
      return this.moveNext$0$bailout(2, t1, nextPosition);
    if (nextPosition < t1) {
      t1 = this._array;
      if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
        return this.moveNext$0$bailout(3, nextPosition, t1);
      if (nextPosition !== (nextPosition | 0))
        throw $.iae(nextPosition);
      if (nextPosition < 0 || nextPosition >= t1.length)
        throw $.ioore(nextPosition);
      this._current = t1[nextPosition];
      this._position = nextPosition;
      return true;
    }
    this._current = null;
    this._position = t1;
    return false;
  },
  moveNext$0$bailout: function(state0, env0, env1) {
    switch (state0) {
      case 1:
        t1 = env0;
        break;
      case 2:
        nextPosition = env1;
        t1 = env0;
        break;
      case 3:
        t1 = env1;
        nextPosition = env0;
        break;
    }
    switch (state0) {
      case 0:
        t1 = this._position;
      case 1:
        state0 = 0;
        nextPosition = $.add(t1, 1);
        t1 = this._length;
      case 2:
        state0 = 0;
      case 3:
        var t1, nextPosition;
        if (state0 === 3 || state0 === 0 && $.ltB(nextPosition, t1))
          switch (state0) {
            case 0:
              t1 = this._array;
            case 3:
              state0 = 0;
              this._current = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, nextPosition);
              this._position = nextPosition;
              return true;
          }
        this._current = null;
        this._position = t1;
        return false;
    }
  },
  get$current: function() {
    return this._current;
  }
};

$$.FilteredElementList = {"": "Object;_node,_childNodes",
  get$_filtered: function() {
    var t1, t2;
    t1 = this._childNodes;
    t2 = $.List_List$from($.getInterceptor$JSArray(t1).where$1(t1, new $.FilteredElementList__filtered_anon()), $.Element);
    $.setRuntimeTypeInfo(t2, [$.Element]);
    return t2;
  },
  forEach$1: function(f) {
    var t1 = this.get$_filtered();
    $.getInterceptor$JSArray(t1).forEach$1(t1, f);
  },
  operator$indexSet$2: function(index, value) {
    this.operator$index$1(index).replaceWith$1(value);
  },
  set$length: function(newLength) {
    var len = $.getInterceptor$JSStringJSArray(this).get$length(this);
    if ($.geB(newLength, len))
      return;
    else if ($.ltB(newLength, 0))
      throw $.$$throw($.ArgumentError$("Invalid list length"));
    this.removeRange$2(newLength, $.sub(len, newLength));
  },
  join$1: function(separator) {
    var t1 = this.get$_filtered();
    return $.getInterceptor$JSArray(t1).join$1(t1, separator);
  },
  add$1: function(value) {
    var t1 = this._childNodes;
    $.getInterceptor$JSArray(t1).add$1(t1, value);
  },
  addAll$1: function(iterable) {
    var t1, t2, t3;
    for (t1 = $.getInterceptor$JSArray(iterable).get$iterator(iterable), t2 = this._childNodes, t3 = $.getInterceptor$JSArray(t2); t1.moveNext$0() === true;)
      t3.add$1(t2, t1.get$current());
  },
  addLast$1: function(value) {
    var t1 = this._childNodes;
    $.getInterceptor$JSArray(t1).add$1(t1, value);
  },
  contains$1: function(element) {
    var t1, t2;
    if (typeof element === "object" && element !== null && element.is$Element()) {
      t1 = this._childNodes;
      t2 = $.getInterceptor$JSStringJSArray(t1).contains$1(t1, element) === true;
      t1 = t2;
    } else
      t1 = false;
    return t1;
  },
  setRange$4: function(start, rangeLength, from, startFrom) {
    throw $.$$throw($.UnimplementedError$(null));
  },
  setRange$3: function(start, rangeLength, from) {
    return this.setRange$4(start, rangeLength, from, 0);
  },
  removeRange$2: function(start, rangeLength) {
    var t1 = this.get$_filtered();
    t1 = $.getInterceptor$JSArray(t1).getRange$2(t1, start, rangeLength);
    $.getInterceptor$JSArray(t1).forEach$1(t1, new $.FilteredElementList_removeRange_anon());
  },
  clear$0: function() {
    var t1 = this._childNodes;
    $.getInterceptor$JSArray(t1).clear$0(t1);
  },
  removeLast$0: function() {
    var result = $.getInterceptor$JSArray(this).get$last(this);
    if (!(result == null))
      result.remove$0();
    return result;
  },
  mappedBy$1: function(f) {
    var t1 = this.get$_filtered();
    return $.getInterceptor$JSArray(t1).mappedBy$1(t1, f);
  },
  where$1: function(f) {
    var t1 = this.get$_filtered();
    return $.getInterceptor$JSArray(t1).where$1(t1, f);
  },
  every$1: function(f) {
    var t1 = this.get$_filtered();
    return $.getInterceptor$JSArray(t1).every$1(t1, f);
  },
  toList$0: function() {
    var t1 = $.List_List$from(this, $.Element);
    $.setRuntimeTypeInfo(t1, [$.Element]);
    return t1;
  },
  get$isEmpty: function() {
    var t1 = this.get$_filtered();
    return $.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1);
  },
  get$length: function() {
    var t1 = this.get$_filtered();
    return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
  },
  operator$index$1: function(index) {
    var t1 = this.get$_filtered();
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
      return this.operator$index$1$bailout4(1, index, t1);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  operator$index$1$bailout4: function(state0, index, t1) {
    return $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, index);
  },
  get$iterator: function() {
    var t1 = this.get$_filtered();
    return $.getInterceptor$JSArray(t1).get$iterator(t1);
  },
  getRange$2: function(start, rangeLength) {
    var t1 = this.get$_filtered();
    return $.getInterceptor$JSArray(t1).getRange$2(t1, start, rangeLength);
  },
  indexOf$2: function(element, start) {
    var t1 = this.get$_filtered();
    return $.getInterceptor$JSStringJSArray(t1).indexOf$2(t1, element, start);
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = this.get$_filtered();
    return $.getInterceptor$JSArray(t1).get$last(t1);
  },
  is$List: function() {
    return true;
  },
  is$Collection: function() {
    return true;
  }
};

$$._Random = {"": "Object;",
  nextDouble$0: function() {
    return Math.random();
  }
};

$$._AttributeClassSet = {"": "CssClassSet;_liblib4$_element",
  readClasses$0: function() {
    var t1, classname, s, t2, t3, trimmed;
    t1 = this._liblib4$_element.get$attributes();
    classname = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, "class");
    s = $.Set_Set($.String);
    if (classname == null)
      return s;
    for (t1 = $.getInterceptor$JSString(classname).split$1(classname, " "), t1 = $.getInterceptor$JSArray(t1).get$iterator(t1), t2 = $.getInterceptor$JSArray(s); t1.moveNext$0() === true;) {
      t3 = t1.get$current();
      trimmed = $.getInterceptor$JSString(t3).trim$0(t3);
      if ($.getInterceptor$JSStringJSArray(trimmed).get$isEmpty(trimmed) !== true)
        t2.add$1(s, trimmed);
    }
    return s;
  },
  writeClasses$1: function(s) {
    var list = $.List_List$from(s);
    $.setRuntimeTypeInfo(list, []);
    $.indexSet(this._liblib4$_element.get$attributes(), "class", $.Strings_join(list, " "));
  }
};

$$.WebComponent = {"": "Object;",
  createShadowRoot$0: function() {
    if ($._realShadowRoot() === true)
      return this._liblib2$_element.createShadowRoot$0();
    if (this._shadowRoots == null)
      this._shadowRoots = [];
    var t1 = this._shadowRoots;
    $.getInterceptor$JSArray(t1).add$1(t1, $.Element_Element$html("<div class=\"shadowroot\"></div>"));
    t1 = this._shadowRoots;
    return $.getInterceptor$JSArray(t1).get$last(t1);
  },
  created$0: function() {
  },
  inserted$0: function() {
  },
  removed$0: function() {
  },
  composeChildren$0: function() {
    var t1, treeStack, tree, pool, shadowInsertionPoints, shadowInsertionTrees, tree0, point, i, t2, t3;
    if ($._realShadowRoot() === true)
      return;
    t1 = this._shadowRoots;
    if ($.eqB($.getInterceptor$JSStringJSArray(t1).get$length(t1), 0))
      throw $.$$throw($.StateError$("Distribution algorithm requires at least one shadow root and can only be run once."));
    treeStack = this._shadowRoots;
    t1 = $.getInterceptor$JSArray(treeStack);
    tree = t1.removeLast$0(treeStack);
    pool = $.List_List$from(this.get$nodes());
    $.setRuntimeTypeInfo(pool, []);
    shadowInsertionPoints = [];
    shadowInsertionTrees = [];
    for (tree0 = tree; true;) {
      pool = this._distributeNodes$2(tree0, pool);
      point = tree0.query$1("shadow");
      if (!(point == null))
        if ($.gtB(t1.get$length(treeStack), 0)) {
          tree0 = t1.removeLast$0(treeStack);
          shadowInsertionPoints.push(point);
          shadowInsertionTrees.push(tree0);
        } else {
          $.WebComponent__distribute(point, pool);
          break;
        }
      else
        break;
    }
    for (i = 0; i < shadowInsertionPoints.length; ++i) {
      point = shadowInsertionPoints[i];
      if (i >= shadowInsertionTrees.length)
        throw $.ioore(i);
      t1 = $.List_List$from(shadowInsertionTrees[i].get$nodes());
      $.setRuntimeTypeInfo(t1, []);
      $.WebComponent__distribute(point, t1);
    }
    t1 = this.get$nodes();
    $.getInterceptor$JSArray(t1).clear$0(t1);
    t1 = this.get$nodes();
    t2 = $.getInterceptor$JSArray(t1);
    t3 = $.List_List$from(tree.get$nodes());
    $.setRuntimeTypeInfo(t3, []);
    t2.addAll$1(t1, t3);
  },
  _distributeNodes$2: function(tree, pool) {
    var t1, t2, t3, select, matching, notMatching, t4;
    if (typeof pool !== "object" || pool === null || pool.constructor !== Array || !!pool.fixed$length)
      return this._distributeNodes$2$bailout(1, tree, pool);
    for (t1 = tree.queryAll$1("content"), t1 = $.getInterceptor$JSArray(t1).get$iterator(t1); t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      if (!$.WebComponent__isActive(t2))
        continue;
      t3 = t2.get$attributes();
      select = $.getInterceptor$JSStringJSArray(t3).operator$index$1(t3, "select");
      if (typeof select !== "string")
        return this._distributeNodes$2$bailout(2, t1, pool, select, t2);
      if (select === "")
        select = "*";
      matching = [];
      notMatching = [];
      for (t3 = $.CONSTANT0.get$iterator(pool); t3.moveNext$0() === true;) {
        t4 = t3.get$current();
        ($.WebComponent__matches(t4, select) === true ? matching : notMatching).push(t4);
      }
      if (matching.length === 0) {
        matching = t2.get$nodes();
        if (typeof matching !== "object" || matching === null || matching.constructor !== Array || !!matching.fixed$length)
          return this._distributeNodes$2$bailout(3, matching, t1, notMatching, t2);
      }
      $.WebComponent__distribute(t2, matching);
      pool = notMatching;
    }
    return pool;
  },
  _distributeNodes$2$bailout: function(state0, env0, env1, env2, env3) {
    switch (state0) {
      case 1:
        pool = env1;
        tree = env0;
        break;
      case 2:
        t2 = env3;
        select = env2;
        pool = env1;
        t1 = env0;
        break;
      case 3:
        t2 = env3;
        notMatching = env2;
        t1 = env1;
        matching = env0;
        break;
    }
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = tree.queryAll$1("content");
        t1 = $.getInterceptor$JSArray(t1).get$iterator(t1);
      default:
        var pool, tree, t1, t2, t3, select, matching, notMatching, t4;
        L0:
          while (true)
            switch (state0) {
              case 0:
                if (!(t1.moveNext$0() === true))
                  break L0;
              default:
                c$0: {
                  switch (state0) {
                    case 0:
                      t2 = t1.get$current();
                      if (!$.WebComponent__isActive(t2))
                        break c$0;
                      t3 = t2.get$attributes();
                      select = $.getInterceptor$JSStringJSArray(t3).operator$index$1(t3, "select");
                    case 2:
                      state0 = 0;
                      if (select == null || $.eqB(select, ""))
                        select = "*";
                      matching = [];
                      notMatching = [];
                      for (t3 = $.getInterceptor$JSArray(pool).get$iterator(pool); t3.moveNext$0() === true;) {
                        t4 = t3.get$current();
                        ($.WebComponent__matches(t4, select) === true ? matching : notMatching).push(t4);
                      }
                    case 3:
                      if (state0 === 3 || state0 === 0 && matching.length === 0)
                        switch (state0) {
                          case 0:
                            matching = t2.get$nodes();
                          case 3:
                            state0 = 0;
                        }
                      $.WebComponent__distribute(t2, matching);
                      pool = notMatching;
                  }
                }
            }
        return pool;
    }
  },
  get$nodes: function() {
    return this._liblib2$_element.get$nodes();
  },
  replaceWith$1: function(otherNode) {
    this._liblib2$_element.replaceWith$1(otherNode);
  },
  remove$0: function() {
    return this._liblib2$_element.remove$0();
  },
  get$nextNode: function() {
    return this._liblib2$_element.get$nextNode();
  },
  set$text: function(v) {
    this._liblib2$_element.set$text(v);
  },
  contains$1: function(other) {
    var t1 = this._liblib2$_element;
    return $.getInterceptor$JSStringJSArray(t1).contains$1(t1, other);
  },
  insertBefore$2: function(newChild, refChild) {
    return this._liblib2$_element.insertBefore$2(newChild, refChild);
  },
  get$attributes: function() {
    return this._liblib2$_element.get$attributes();
  },
  get$children: function() {
    return this._liblib2$_element.get$children();
  },
  get$classes: function() {
    return this._liblib2$_element.get$classes();
  },
  get$parent: function() {
    return this._liblib2$_element.get$parent();
  },
  get$parentNode: function() {
    return this._liblib2$_element.get$parentNode();
  },
  get$on: function() {
    return this._liblib2$_element.get$on();
  },
  get$id: function() {
    return this._liblib2$_element.get$id();
  },
  set$innerHtml: function(v) {
    this._liblib2$_element.set$innerHtml(v);
  },
  click$0: function() {
    this._liblib2$_element.click$0();
  },
  get$click: function() {
    return new $.BoundClosure(this, "click$0");
  },
  get$tagName: function() {
    return this._liblib2$_element.get$tagName();
  },
  blur$0: function() {
    this._liblib2$_element.blur$0();
  },
  get$blur: function() {
    return new $.BoundClosure(this, "blur$0");
  },
  focus$0: function() {
    this._liblib2$_element.focus$0();
  },
  matches$1: function(selectors) {
    return this._liblib2$_element.matches$1(selectors);
  },
  query$1: function(selectors) {
    return this._liblib2$_element.query$1(selectors);
  },
  queryAll$1: function(selectors) {
    return this._liblib2$_element.queryAll$1(selectors);
  },
  get$$$dom_children: function() {
    return this._liblib2$_element.get$$$dom_children();
  },
  get$$$dom_className: function() {
    return this._liblib2$_element.get$$$dom_className();
  },
  set$$$dom_className: function(value) {
    this._liblib2$_element.set$$$dom_className(value);
  },
  get$$$dom_firstElementChild: function() {
    return this._liblib2$_element.get$$$dom_firstElementChild();
  },
  get$$$dom_lastElementChild: function() {
    return this._liblib2$_element.get$$$dom_lastElementChild();
  },
  $$dom_getAttribute$1: function(name$) {
    return this._liblib2$_element.$$dom_getAttribute$1(name$);
  },
  $$dom_hasAttribute$1: function(name$) {
    return this._liblib2$_element.$$dom_hasAttribute$1(name$);
  },
  $$dom_querySelector$1: function(selectors) {
    return this._liblib2$_element.$$dom_querySelector$1(selectors);
  },
  $$dom_querySelectorAll$1: function(selectors) {
    return this._liblib2$_element.$$dom_querySelectorAll$1(selectors);
  },
  $$dom_removeAttribute$1: function(name$) {
    return this._liblib2$_element.$$dom_removeAttribute$1(name$);
  },
  $$dom_setAttribute$2: function(name$, value) {
    return this._liblib2$_element.$$dom_setAttribute$2(name$, value);
  },
  get$$$dom_attributes: function() {
    return this._liblib2$_element.get$$$dom_attributes();
  },
  get$$$dom_childNodes: function() {
    return this._liblib2$_element.get$$$dom_childNodes();
  },
  get$$$dom_localName: function() {
    return this._liblib2$_element.get$$$dom_localName();
  },
  get$$$dom_namespaceUri: function() {
    return this._liblib2$_element.get$$$dom_namespaceUri();
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    this._liblib2$_element.$$dom_addEventListener$3(type, listener, useCapture);
  },
  $$dom_appendChild$1: function(newChild) {
    return this._liblib2$_element.$$dom_appendChild$1(newChild);
  },
  $$dom_removeChild$1: function(oldChild) {
    return this._liblib2$_element.$$dom_removeChild$1(oldChild);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    this._liblib2$_element.$$dom_removeEventListener$3(type, listener, useCapture);
  },
  $$dom_replaceChild$2: function(newChild, oldChild) {
    return this._liblib2$_element.$$dom_replaceChild$2(newChild, oldChild);
  },
  get$xtag: function() {
    return this._liblib2$_element.get$xtag();
  },
  set$xtag: function(value) {
    this._liblib2$_element.set$xtag(value);
  },
  WebComponent$forElement$1: function(element) {
    if (element == null || !(this._liblib2$_element.get$xtag() == null))
      throw $.$$throw($.ArgumentError$("element must be provided and not have its xtag property set"));
    this._liblib2$_element.set$xtag(this);
  },
  is$Element: function() {
    return true;
  }
};

$$.WatchEvent = {"": "Object;oldValue>,newValue>"};

$$._Watcher = {"": "Object;debugName,_getter>,_callback,_lastValue",
  _getter$0: function() {
    return this._getter.call$0();
  },
  _callback$1: function(arg0) {
    return this._callback.call$1(arg0);
  },
  toString$0: function() {
    var t1 = this.debugName;
    return t1 == null ? "<unnamed>" : t1;
  },
  compareAndNotify$0: function() {
    var currentValue, oldValue;
    currentValue = this._safeRead$0();
    if (this._compare$1(currentValue) === true) {
      oldValue = this._lastValue;
      this._update$1(currentValue);
      this._callback$1($.WatchEvent$(oldValue, currentValue));
      return true;
    }
    return false;
  },
  _compare$1: function(currentValue) {
    return !$.eqB(this._lastValue, currentValue);
  },
  _update$1: function(currentValue) {
    this._lastValue = currentValue;
  },
  _safeRead$0: function(exception) {
    var t1, e, trace;
    try {
      t1 = this._getter$0();
      return t1;
    } catch (exception) {
      t1 = $.unwrapException(exception);
      e = t1;
      trace = $.getTraceFromException(exception);
      $.print("error: evaluating " + $.S(this) + " watcher threw an exception (" + $.S(e) + ", " + $.S(trace) + ")");
    }

    return this._lastValue;
  },
  _Watcher$3: function(_getter, _callback, debugName) {
    this._lastValue = this._getter$0();
  }
};

$$._ListWatcher = {"": "_Watcher;debugName,_getter,_callback,_lastValue",
  _compare$1: function(currentValue) {
    var t1, i;
    if (typeof currentValue !== "string" && (typeof currentValue !== "object" || currentValue === null || currentValue.constructor !== Array && !currentValue.is$JavaScriptIndexingBehavior()))
      return this._compare$1$bailout(1, currentValue);
    t1 = this._lastValue;
    if (!$.eqB($.getInterceptor$JSStringJSArray(t1).get$length(t1), currentValue.length))
      return true;
    for (i = 0; t1 = this._lastValue, $.ltB(i, $.getInterceptor$JSStringJSArray(t1).get$length(t1)); ++i) {
      t1 = this._lastValue;
      t1 = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, i);
      if (i >= currentValue.length)
        throw $.ioore(i);
      if (!$.eqB(t1, currentValue[i]))
        return true;
    }
    return false;
  },
  _compare$1$bailout: function(state0, currentValue) {
    var t1, t2, i;
    t1 = this._lastValue;
    t1 = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
    t2 = $.getInterceptor$JSStringJSArray(currentValue);
    if (!$.eqB(t1, t2.get$length(currentValue)))
      return true;
    for (i = 0; t1 = this._lastValue, $.ltB(i, $.getInterceptor$JSStringJSArray(t1).get$length(t1)); ++i) {
      t1 = this._lastValue;
      if (!$.eqB($.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, i), t2.operator$index$1(currentValue, i)))
        return true;
    }
    return false;
  },
  _update$1: function(currentValue) {
    var t1 = $.List_List$from(currentValue, $.getRuntimeTypeInfo(this)[0]);
    $.setRuntimeTypeInfo(t1, [$.getRuntimeTypeInfo(this)[0]]);
    this._lastValue = t1;
  },
  _ListWatcher$3: function(getter, callback, debugName) {
    this._update$1(this._safeRead$0());
  }
};

$$.TemplateItem = {"": "Object;"};

$$.Listener = {"": "TemplateItem;target,listener",
  create$0: function() {
  },
  insert$0: function() {
    var t1 = this.target;
    $.getInterceptor$JSArray(t1).add$1(t1, this.listener);
  },
  remove$0: function() {
    this.target.remove$1(this.listener);
  }
};

$$.Binding = {"": "TemplateItem;exp,action,stopper",
  stopper$0: function() {
    return this.stopper.call$0();
  },
  create$0: function() {
  },
  insert$0: function() {
    if (!(this.stopper == null))
      throw $.$$throw($.StateError$("binding already attached"));
    this.stopper = $.watchAndInvoke(this.exp, this.action, null);
  },
  remove$0: function() {
    this.stopper$0();
    this.stopper = null;
  }
};

$$.ClassAttrBinding = {"": "TemplateItem;elem,exp,stopper",
  stopper$0: function() {
    return this.stopper.call$0();
  },
  create$0: function() {
  },
  insert$0: function() {
    if (!(this.stopper == null))
      throw $.$$throw($.StateError$("class binding already attached"));
    this.stopper = $.bindCssClasses(this.elem, this.exp);
  },
  remove$0: function() {
    this.stopper$0();
    this.stopper = null;
  }
};

$$.DomPropertyBinding = {"": "TemplateItem;setter,getter,isUrl>,stopper",
  setter$1: function(arg0) {
    return this.setter.call$1(arg0);
  },
  stopper$0: function() {
    return this.stopper.call$0();
  },
  create$0: function() {
  },
  insert$0: function() {
    if (!(this.stopper == null))
      throw $.$$throw($.StateError$("data binding already attached."));
    this.stopper = $.watchAndInvoke(this.getter, new $.DomPropertyBinding_insert_anon(this), null);
  },
  remove$0: function() {
    this.stopper$0();
    this.stopper = null;
  }
};

$$.ComponentItem = {"": "TemplateItem;elem",
  get$_xtag: function() {
    var t1 = this.elem;
    if (t1.get$xtag() == null)
      throw $.$$throw($.StateError$("element doesn't have an associated component"));
    return t1.get$xtag();
  },
  create$0: function() {
    var t1 = this.get$_xtag();
    t1.created_autogenerated$0();
    t1.created$0();
    t1.composeChildren$0();
  },
  insert$0: function() {
    var t1 = this.get$_xtag();
    t1.inserted$0();
    t1.inserted_autogenerated$0();
  },
  remove$0: function() {
    var t1 = this.get$_xtag();
    t1.removed_autogenerated$0();
    t1.removed$0();
  }
};

$$.Template = {"": "TemplateItem;node>,children>,nodes>",
  listen$2: function(target, listener) {
    var t1 = this.children;
    $.getInterceptor$JSArray(t1).add$1(t1, $.Listener$(target, new $.Template_listen_anon(listener)));
  },
  contentBind$1: function(exp) {
    var t1, t2;
    t1 = {};
    t1.bindNode_0 = $.Text_Text("");
    t2 = this.children;
    $.getInterceptor$JSArray(t2).add$1(t2, $.Binding$(new $.Template_contentBind_anon(exp), new $.Template_contentBind_anon0(t1, exp)));
    return t1.bindNode_0;
  },
  bindClass$2: function(elem, exp) {
    var t1 = this.children;
    $.getInterceptor$JSArray(t1).add$1(t1, $.ClassAttrBinding$(elem, exp));
  },
  oneWayBind$3: function(exp, setter, isUrl) {
    var t1 = this.children;
    $.getInterceptor$JSArray(t1).add$1(t1, $.DomPropertyBinding$(exp, setter, isUrl));
  },
  oneWayBind$2: function(exp, setter) {
    return this.oneWayBind$3(exp, setter, false);
  },
  conditional$3: function(template, exp, bodySetup) {
    var t1 = this.children;
    $.getInterceptor$JSArray(t1).add$1(t1, $.ConditionalTemplate$(template, exp, bodySetup));
  },
  loop$4$isTemplateElement: function(template, exp, iterSetup, isTemplateElement) {
    var t1, t2;
    t1 = this.children;
    t2 = $.getInterceptor$JSArray(t1);
    t2.add$1(t1, isTemplateElement === true ? $.LoopTemplate$(template, exp, iterSetup) : $.LoopTemplateInAttribute$(template, exp, iterSetup));
  },
  loop$3: function(template, exp, iterSetup) {
    return this.loop$4$isTemplateElement(template, exp, iterSetup, true);
  },
  component$1: function(elem) {
    var t1 = this.children;
    $.getInterceptor$JSArray(t1).add$1(t1, $.ComponentItem$(elem));
  },
  add$1: function(n) {
    return this.nodes.push(n);
  },
  addAll$1: function(list) {
    return $.CONSTANT0.addAll$1(this.nodes, list);
  },
  create$0: function() {
    return this._visitChildren$1(new $.Template_create_anon());
  },
  insert$0: function() {
    return this._visitChildren$1(new $.Template_insert_anon());
  },
  remove$0: function() {
    this._visitChildren$2$reverseOrder(new $.Template_remove_anon(), true);
    var t1 = this.children;
    $.getInterceptor$JSArray(t1).clear$0(t1);
  },
  _visitChildren$2$reverseOrder: function(onTemplateItem, reverseOrder) {
    var t1, t3, len, t2, i;
    t1 = this.children;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
      return this._visitChildren$2$reverseOrder$bailout(1, onTemplateItem, reverseOrder, t1);
    t3 = $.getInterceptor$JSStringJSArray(t1);
    len = t1.length;
    for (t2 = reverseOrder === true, i = 0; i < len; ++i) {
      t3 = t2 ? len - i - 1 : i;
      if (t3 < 0 || t3 >= t1.length)
        throw $.ioore(t3);
      onTemplateItem.call$1(t1[t3]);
    }
  },
  _visitChildren$2$reverseOrder$bailout: function(state0, env0, env1, env2, env3, env4) {
    switch (state0) {
      case 1:
        t1 = env2;
        reverseOrder = env1;
        onTemplateItem = env0;
        break;
      case 2:
        t1 = env4;
        len = env3;
        t3 = env2;
        reverseOrder = env1;
        onTemplateItem = env0;
        break;
    }
    switch (state0) {
      case 0:
        t1 = this.children;
      case 1:
        state0 = 0;
        t3 = $.getInterceptor$JSStringJSArray(t1);
        len = t3.get$length(t1);
      case 2:
        var t1, reverseOrder, onTemplateItem, t3, len, t2, i;
        state0 = 0;
        for (t2 = reverseOrder === true, i = 0; $.ltB(i, len); ++i)
          onTemplateItem.call$1(t3.operator$index$1(t1, t2 ? $.sub($.sub(len, i), 1) : i));
    }
  },
  _visitChildren$1: function(onTemplateItem) {
    return this._visitChildren$2$reverseOrder(onTemplateItem, false);
  }
};

$$.PlaceholderTemplate = {"": "Template;",
  stopper$0: function() {
    return this.stopper.call$0();
  },
  stopper$0: function() {
    return this.stopper.call$0();
  },
  create$0: function() {
  },
  insert$0: function() {
    var t1, t2, parent$, reference;
    $.Template.prototype.create$0.call(this);
    t1 = this.nodes;
    if (t1.length > 0) {
      t2 = this.node;
      parent$ = t2.get$parentNode();
      reference = t2.get$nextNode();
      for (t1 = $.CONSTANT0.get$iterator(t1); t1.moveNext$0() === true;)
        parent$.insertBefore$2(t1.get$current(), reference);
    }
    $.Template.prototype.insert$0.call(this);
  },
  remove$0: function() {
    var parent$, t1;
    $.Template.prototype.remove$0.call(this);
    parent$ = this.node.get$parentNode();
    if (!(parent$ == null))
      for (t1 = $.CONSTANT0.get$iterator(this.nodes); t1.moveNext$0() === true;)
        parent$.$$dom_removeChild$1(t1.get$current());
    $.CONSTANT0.clear$0(this.nodes);
  }
};

$$.ConditionalTemplate = {"": "PlaceholderTemplate;isVisible=,bodySetup,exp,stopper,node,children,nodes",
  isVisible$1: function(arg0) {
    return this.isVisible.call$1(arg0);
  },
  bodySetup$1: function(arg0) {
    return this.bodySetup.call$1(arg0);
  },
  insert$0: function() {
    this.stopper = $.watchAndInvoke(this.exp, new $.ConditionalTemplate_insert_anon(this), null);
  },
  remove$0: function() {
    $.PlaceholderTemplate.prototype.remove$0.call(this);
    this.stopper$0();
    this.stopper = null;
  }
};

$$.LoopTemplate = {"": "PlaceholderTemplate;iterSetup,exp,stopper,node,children,nodes",
  iterSetup$2: function(arg0, arg1) {
    return this.iterSetup.call$2(arg0, arg1);
  },
  insert$0: function() {
    this.stopper = $.watchAndInvoke(this.exp, new $.LoopTemplate_insert_anon(this), null);
  },
  remove$0: function() {
    $.PlaceholderTemplate.prototype.remove$0.call(this);
    this.stopper$0();
    this.stopper = null;
  }
};

$$.LoopTemplateInAttribute = {"": "Template;iterSetup,exp,stopper,node,children,nodes",
  iterSetup$2: function(arg0, arg1) {
    return this.iterSetup.call$2(arg0, arg1);
  },
  stopper$0: function() {
    return this.stopper.call$0();
  },
  create$0: function() {
  },
  insert$0: function() {
    this.stopper = $.watchAndInvoke(this.exp, new $.LoopTemplateInAttribute_insert_anon(this), null);
  },
  remove$0: function() {
    $.Template.prototype.remove$0.call(this);
    var t1 = this.node.get$nodes();
    $.getInterceptor$JSArray(t1).clear$0(t1);
    $.CONSTANT0.clear$0(this.nodes);
    this.stopper$0();
    this.stopper = null;
  }
};

$$.Uri = {"": "Object;scheme,userInfo,domain,port,path,query,fragment",
  query$1: function(arg0) {
    return this.query.call$1(arg0);
  },
  toString$0: function() {
    var sb, t1, t2;
    sb = $.StringBuffer_StringBuffer("");
    t1 = this.scheme;
    $.Uri__addIfNonEmpty(sb, t1, t1, ":");
    t2 = this.userInfo;
    if (!$.eqB(t2, "") || !$.eqB(this.domain, "") || !$.eqB(this.port, 0) || $.eqB(t1, "file")) {
      t1 = $.getInterceptor$JSArray(sb);
      t1.add$1(sb, "//");
      $.Uri__addIfNonEmpty(sb, t2, t2, "@");
      t2 = this.domain;
      t1.add$1(sb, t2 == null ? "null" : t2);
      t2 = this.port;
      if (!$.eqB(t2, 0)) {
        t1.add$1(sb, ":");
        t1.add$1(sb, $.getInterceptor(t2).toString$0(t2));
      }
    }
    t1 = $.getInterceptor$JSArray(sb);
    t2 = this.path;
    t1.add$1(sb, t2 == null ? "null" : t2);
    t2 = this.query;
    $.Uri__addIfNonEmpty(sb, t2, "?", t2);
    t2 = this.fragment;
    $.Uri__addIfNonEmpty(sb, t2, "#", t2);
    return t1.toString$0(sb);
  },
  operator$eq$1: function(other) {
    if (!(typeof other === "object" && other !== null && !!other.is$Uri))
      return false;
    return $.eqB(this.scheme, other.scheme) && $.eqB(this.userInfo, other.userInfo) && $.eqB(this.domain, other.domain) && $.eqB(this.port, other.port) && $.eqB(this.path, other.path) && $.eqB(this.query, other.query) && $.eqB(this.fragment, other.fragment);
  },
  get$hashCode: function() {
    var t1 = new $.Uri_hashCode_combine();
    return t1.call$2(this.scheme, t1.call$2(this.userInfo, t1.call$2(this.domain, t1.call$2(this.port, t1.call$2(this.path, t1.call$2(this.query, t1.call$2(this.fragment, 1)))))));
  },
  is$Uri: true
};

$$.ViewModel = {"": "Object;showIncomplete<,showDone<",
  isVisible$1: function(todo) {
    var t1;
    if (!(todo == null))
      if (!(this.showIncomplete === true && todo.get$done() !== true))
        t1 = this.showDone === true && todo.get$done() === true;
      else
        t1 = true;
    else
      t1 = false;
    return t1;
  },
  get$isVisible: function() {
    return new $.BoundClosure0(this, "isVisible$1");
  }
};

$$.AppModel = {"": "Object;todos>",
  resetTodos$1: function(value) {
    this.todos = value;
    $.dispatch();
  },
  removeTodo$1: function(todo) {
    var t1, index;
    t1 = this.todos;
    index = $.getInterceptor$JSStringJSArray(t1).indexOf$1(t1, todo);
    if (!$.eqB(index, -1)) {
      t1 = this.todos;
      $.getInterceptor$JSArray(t1).removeRange$2(t1, index, 1);
    }
  },
  get$allChecked: function() {
    var t1, t2;
    t1 = this.todos;
    if ($.gtB($.getInterceptor$JSStringJSArray(t1).get$length(t1), 0)) {
      t1 = this.todos;
      t2 = $.getInterceptor$JSArray(t1).every$1(t1, new $.AppModel_allChecked_anon()) === true;
      t1 = t2;
    } else
      t1 = false;
    return t1;
  },
  set$allChecked: function(value) {
    var t1 = this.todos;
    return $.getInterceptor$JSArray(t1).forEach$1(t1, new $.AppModel_allChecked_anon0(value));
  },
  get$doneCount: function() {
    var t1, t2;
    t1 = {};
    t1.res_0 = 0;
    t2 = this.todos;
    $.getInterceptor$JSArray(t2).forEach$1(t2, new $.AppModel_doneCount_anon(t1));
    return t1.res_0;
  },
  get$remaining: function() {
    var t1 = this.todos;
    return $.sub($.getInterceptor$JSStringJSArray(t1).get$length(t1), this.get$doneCount());
  },
  clearDone$0: function() {
    var t1 = this.todos;
    t1 = $.getInterceptor$JSArray(t1).where$1(t1, new $.AppModel_clearDone_anon());
    this.todos = $.getInterceptor$JSArray(t1).toList$0(t1);
  }
};

$$.Todo = {"": "PersistentObject;notFetched,map,_dirtyFields,_compoundProperties,saveOnUpdate",
  get$task: function() {
    return this.getProperty$1("task");
  },
  set$task: function(value) {
    return this.setProperty$2("task", value);
  },
  get$done: function() {
    return this.getProperty$1("done");
  },
  set$done: function(value) {
    return this.setProperty$2("done", value);
  },
  toString$0: function() {
    var t1 = $.S(this.get$task()) + " ";
    return t1 + (this.get$done() === true ? "(done)" : "(not done)");
  },
  Todo$1: function(newTask) {
    this.set$done(false);
    this.set$task(newTask);
    this.saveOnUpdate = true;
  }
};

$$.BsonObject = {"": "Object;",
  get$value: function() {
    return;
  }
};

$$.ObjectId = {"": "BsonObject;id=",
  createId$2: function(seconds, clientMode) {
    var t1 = new $.ObjectId_createId_getOctet();
    if (clientMode === true)
      return $.BsonBinary$fromHexString($.S(t1.call$1(seconds)) + $.S(t1.call$1($.add($.get$Statics_MachineId(), $.get$Statics_Pid()))) + $.S(t1.call$1($.Statics_nextIncrement())));
    else {
      t1 = $.BsonBinary$(12);
      t1.writeInt$2$forceBigEndian(seconds, true);
      t1.writeInt$2$numOfBytes($.get$Statics_MachineId(), 3);
      t1.writeInt$2$numOfBytes($.get$Statics_Pid(), 2);
      t1.writeInt$3$forceBigEndian$numOfBytes($.Statics_nextIncrement(), true, 3);
      return t1;
    }
  },
  get$hashCode: function() {
    var t1 = this.id.get$hexString();
    return $.getInterceptor(t1).get$hashCode(t1);
  },
  operator$eq$1: function(other) {
    return typeof other === "object" && other !== null && !!other.is$ObjectId && $.eqB(this.id.get$hexString(), other.toHexString$0());
  },
  toString$0: function() {
    return "ObjectId(" + $.S(this.id.get$hexString()) + ")";
  },
  toHexString$0: function() {
    return this.id.get$hexString();
  },
  get$value: function() {
    return this;
  },
  toJson$0: function() {
    return "{\"$oid\":\"" + $.S(this.id.get$hexString()) + "\"}";
  },
  ObjectId$1$clientMode: function(clientMode) {
    this.id = this.createId$2($.Timestamp$(null, 0).seconds, clientMode);
  },
  is$ObjectId: true
};

$$.Timestamp = {"": "BsonObject;seconds,increment",
  toString$0: function() {
    return "Timestamp(seconds: " + $.S(this.seconds) + ", increment: " + $.S(this.increment) + ")";
  },
  Timestamp$2: function(seconds, increment) {
    var t1;
    if (this.seconds == null) {
      t1 = $.tdiv($.Date_Date$now().get$millisecondsSinceEpoch(), 1000);
      this.seconds = $.getInterceptor$JSNumber(t1).toInt$0(t1);
    }
    if (this.increment == null)
      this.increment = $.Statics_nextIncrement();
  }
};

$$.BsonBinary = {"": "BsonObject;byteArray,byteList>,offset>,subType,_hexString",
  get$hexString: function() {
    if (this._hexString == null)
      this.makeHexString$0();
    return this._hexString;
  },
  makeHexString$0: function() {
    var stringBuffer, t1, t2, t3;
    stringBuffer = $.StringBuffer_StringBuffer("");
    for (t1 = this.byteList, t1 = $.getInterceptor$JSArray(t1).get$iterator(t1), t2 = $.getInterceptor$JSArray(stringBuffer); t1.moveNext$0() === true;) {
      t3 = t1.get$current();
      if ($.ltB(t3, 16))
        t2.add$1(stringBuffer, "0");
      t2.add$1(stringBuffer, $.getInterceptor$JSNumber(t3).toRadixString$1(t3, 16));
    }
    t1 = $.getInterceptor(stringBuffer).toString$0(stringBuffer);
    this._hexString = $.getInterceptor$JSString(t1).toLowerCase$0(t1);
  },
  setIntExtended$2: function(value, numOfBytes) {
    var byteListTmp, byteArrayTmp, t1;
    byteListTmp = $.BsonPlatform_platform.makeUint8List$1(8);
    byteArrayTmp = $.BsonPlatform_platform.makeByteArray$1(byteListTmp);
    if ($.eqB(numOfBytes, 3))
      byteArrayTmp.setInt32$2(0, value);
    else if ($.gtB(numOfBytes, 4) && $.ltB(numOfBytes, 8))
      byteArrayTmp.setInt64$2(0, value);
    else
      throw $.$$throw($.Exception_Exception("Unsupported num of bits: " + $.S($.mul(numOfBytes, 8))));
    t1 = this.byteList;
    $.getInterceptor$JSArray(t1).setRange$3(t1, this.offset, numOfBytes, byteListTmp);
  },
  reverse$1: function(numOfBytes) {
    var t1, t2, i;
    if (typeof numOfBytes !== "number")
      return this.reverse$1$bailout(1, numOfBytes);
    t1 = new $.BsonBinary_reverse_swap(this);
    for (t2 = numOfBytes - 1, i = 0; i <= $.mod(t2, 2); ++i)
      t1.call$2(i, t2 - i);
  },
  reverse$1$bailout: function(state0, numOfBytes) {
    var t1, i;
    t1 = new $.BsonBinary_reverse_swap(this);
    for (i = 0; $.leB(i, $.mod($.sub(numOfBytes, 1), 2)); ++i)
      t1.call$2(i, $.sub($.sub(numOfBytes, 1), i));
  },
  encodeInt$5: function(position, value, numOfBytes, forceBigEndian, signed) {
    var bits, max;
    bits = $.shl(numOfBytes, 3);
    max = $.Statics_MaxBits(bits);
    if ($.geB(value, max) || $.ltB(value, $.neg($.div(max, 2))))
      throw $.$$throw($.Exception_Exception("encodeInt::overflow"));
    switch (bits) {
      case 32:
        this.byteArray.setInt32$2(position, value);
        break;
      case 16:
        this.byteArray.setInt16$2(position, value);
        break;
      case 8:
        this.byteArray.setInt8$2(position, value);
        break;
      case 24:
        this.setIntExtended$2(value, numOfBytes);
        break;
      default:
        throw $.$$throw($.Exception_Exception("Unsupported num of bits: " + $.S(bits)));
    }
    if (forceBigEndian === true)
      this.reverse$1(numOfBytes);
  },
  writeInt$4$forceBigEndian$numOfBytes$signed: function(value, forceBigEndian, numOfBytes, signed) {
    this.encodeInt$5(this.offset, value, numOfBytes, forceBigEndian, signed);
    this.offset = $.add(this.offset, numOfBytes);
  },
  writeInt$2$forceBigEndian: function(value, forceBigEndian) {
    return this.writeInt$4$forceBigEndian$numOfBytes$signed(value, forceBigEndian, 4, false);
  },
  writeInt$2$numOfBytes: function(value, numOfBytes) {
    return this.writeInt$4$forceBigEndian$numOfBytes$signed(value, false, numOfBytes, false);
  },
  writeInt$3$forceBigEndian$numOfBytes: function(value, forceBigEndian, numOfBytes) {
    return this.writeInt$4$forceBigEndian$numOfBytes$signed(value, forceBigEndian, numOfBytes, false);
  },
  get$value: function() {
    return this;
  },
  toString$0: function() {
    return "BsonBinary(" + $.S(this.get$hexString()) + ")";
  },
  BsonBinary$1: function(length$) {
    this.byteArray = $.makeByteArray(this.byteList);
  }
};

$$.BsonString = {"": "BsonObject;data>,_utfData",
  get$value: function() {
    return this.data;
  }
};

$$.BsonCode = {"": "BsonString;data,_utfData",
  get$value: function() {
    return this;
  },
  toString$0: function() {
    return "BsonCode('" + $.S(this.data) + "')";
  }
};

$$.BsonCString = {"": "BsonString;useKeyCash,data,_utfData"};

$$.DbRef = {"": "BsonObject;collection,id=,bsonCollection",
  get$value: function() {
    return this;
  },
  toString$0: function() {
    return "BsonDbPointer(collection: " + $.S(this.collection) + ", id: " + $.S(this.id) + ")";
  },
  get$hashCode: function() {
    return $.CONSTANT1.get$hashCode($.S(this.collection) + "." + $.S(this.id.toHexString$0()));
  },
  operator$eq$1: function(other) {
    var t1;
    if (typeof other === "object" && other !== null && !!other.is$DbRef)
      t1 = $.eqB(this.collection, other.collection) && $.eqB(this.id.toHexString$0(), other.id.toHexString$0());
    else
      t1 = false;
    return t1;
  },
  DbRef$2: function(collection, id) {
    this.bsonCollection = $.BsonString$(this.collection);
  },
  is$DbRef: true
};

$$.BsonRegexp = {"": "BsonObject;pattern>,options,bsonPattern,bsonOptions,multiLine,caseInsensitive,verbose,dotAll,extended",
  get$value: function() {
    return this;
  },
  createOptionsString$0: function() {
    if (!$.eqB(this.options, ""))
      return;
    var buffer = $.StringBuffer_StringBuffer("");
    if ($.eqB(this.caseInsensitive, true))
      $.getInterceptor$JSArray(buffer).add$1(buffer, "i");
    if ($.eqB(this.multiLine, true))
      $.getInterceptor$JSArray(buffer).add$1(buffer, "m");
    if ($.eqB(this.dotAll, true))
      $.getInterceptor$JSArray(buffer).add$1(buffer, "s");
    if ($.eqB(this.extended, true))
      $.getInterceptor$JSArray(buffer).add$1(buffer, "x");
    this.options = $.getInterceptor(buffer).toString$0(buffer);
  },
  toString$0: function() {
    return "BsonRegexp('" + $.S(this.pattern) + "',options:'" + $.S(this.options) + "')";
  },
  toJson$0: function() {
    return $.makeLiteralMap(["$regex", this.pattern, "$oid", this.options]);
  },
  BsonRegexp$6$caseInsensitive$dotAll$extended$multiLine$options: function(pattern, caseInsensitive, dotAll, extended, multiLine, options) {
    this.createOptionsString$0();
    this.bsonPattern = $.BsonCString$(this.pattern, false);
    this.bsonOptions = $.BsonCString$(this.options, false);
  },
  is$BsonRegexp: true
};

$$.ObjectoryMessage = {"": "Object;command,content",
  toString$0: function() {
    return "ObjectoryMessage(command: " + $.S(this.command) + ", content: " + $.S(this.content) + ")";
  },
  ObjectoryMessage$fromList$1: function(jdata) {
    var t1 = $.getInterceptor$JSStringJSArray(jdata);
    this.command = t1.operator$index$1(jdata, 0);
    this.content = t1.operator$index$1(jdata, 1);
  }
};

$$.ObjectoryWebsocketBrowserImpl = {"": "Objectory;webSocket,isConnected<,awaitedRequests>,requestId,uri,registerClassesCallback,dropCollectionsOnStartup,cache,factories",
  open$0: function() {
    return this.setupWebsocket$1(this.uri);
  },
  get$open: function() {
    return new $.BoundClosure(this, "open$0");
  },
  setupWebsocket$1: function(uri) {
    var completer, t1;
    completer = $.Completer_Completer();
    this.webSocket = $.WebSocket_WebSocket("ws://" + $.S(uri) + "/ws");
    t1 = this.webSocket.get$on().get$open();
    $.getInterceptor$JSArray(t1).add$1(t1, new $.ObjectoryWebsocketBrowserImpl_setupWebsocket_anon(this, completer));
    t1 = this.webSocket.get$on().get$close();
    $.getInterceptor$JSArray(t1).add$1(t1, new $.ObjectoryWebsocketBrowserImpl_setupWebsocket_anon0(this));
    t1 = this.webSocket.get$on().get$message();
    $.getInterceptor$JSArray(t1).add$1(t1, new $.ObjectoryWebsocketBrowserImpl_setupWebsocket_anon1(this));
    return completer.get$future();
  },
  _postMessage$2: function(command, content$) {
    var completer;
    this.requestId = this.requestId + 1;
    $.indexSet(command, "requestId", this.requestId);
    this.webSocket.send$1($.JSON_EXT_stringify([command, content$]));
    completer = $.Completer_Completer();
    $.indexSet(this.awaitedRequests, this.requestId, completer);
    return completer.get$future();
  },
  generateId$0: function() {
    return $.ObjectId$(true);
  },
  update$1: function(persistentObject) {
    return this._postMessage$2($.makeLiteralMap(["command", "update", "collection", persistentObject.get$dbType()]), persistentObject.get$map());
  },
  insert$1: function(persistentObject) {
    return this._postMessage$2($.makeLiteralMap(["command", "insert", "collection", persistentObject.get$dbType()]), persistentObject.get$map());
  },
  remove$1: function(persistentObject) {
    return this._postMessage$2($.makeLiteralMap(["command", "remove", "collection", persistentObject.get$dbType()]), persistentObject.get$map());
  },
  find$1: function(selector) {
    var completer, result;
    completer = $.Completer_Completer();
    result = $.List_List(0, $.PersistentObject);
    $.setRuntimeTypeInfo(result, [$.PersistentObject]);
    this._postMessage$2($.makeLiteralMap(["command", "find", "collection", selector.get$className()]), selector.get$map()).then$1(new $.ObjectoryWebsocketBrowserImpl_find_anon(selector, completer, result));
    return completer.get$future();
  },
  close$0: function() {
    this.webSocket.close$0();
  },
  get$close: function() {
    return new $.BoundClosure(this, "close$0");
  },
  dropCollections$0: function() {
    var t1 = this.getCollections$0();
    return $.Future_wait($.getInterceptor$JSArray(t1).mappedBy$1(t1, new $.ObjectoryWebsocketBrowserImpl_dropCollections_anon(this)));
  }
};

$$.BasePersistentObject = {"": "Object;map=",
  setMap$1: function(newValue) {
    this._compoundProperties = $.Map_Map($.String, null);
    this.map = newValue;
    this._initMap$0();
    this.init$0();
    this._dirtyFields = $.Set_Set($.String);
  },
  _initMap$0: function() {
  },
  setDirty$1: function(fieldName) {
    var t1 = this._dirtyFields;
    if (t1 == null)
      return;
    $.getInterceptor$JSArray(t1).add$1(t1, fieldName);
  },
  onValueChanging$2: function(fieldName, newValue) {
    this.setDirty$1(fieldName);
  },
  setProperty$2: function(property, value) {
    this.onValueChanging$2(property, value);
    $.indexSet(this.map, property, value);
  },
  getProperty$1: function(property) {
    var t1 = this.map;
    return $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, property);
  },
  toString$0: function() {
    return $.S(this.get$dbType()) + "(" + $.S(this.map) + ")";
  },
  init$0: function() {
  },
  get$dbType: function() {
    var t1 = $.getInterceptor(this).get$runtimeType(this);
    return $.getInterceptor(t1).toString$0(t1);
  },
  BasePersistentObject$0: function() {
    this.map = $.LinkedHashMap_LinkedHashMap();
    this.setMap$1(this.map);
  }
};

$$.PersistentObject = {"": "BasePersistentObject;",
  get$id: function() {
    var t1 = this.map;
    return $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, "_id");
  },
  set$id: function(value) {
    $.indexSet(this.map, "_id", value);
    return value;
  },
  _initMap$0: function() {
    $.indexSet(this.map, "_id", null);
    $.BasePersistentObject.prototype._initMap$0.call(this);
  },
  remove$0: function() {
    $.objectory0().remove$1(this);
  },
  save$0: function() {
    $.objectory0().save$1(this);
  },
  setProperty$2: function(property, value) {
    $.BasePersistentObject.prototype.setProperty$2.call(this, property, value);
    if (this.saveOnUpdate === true)
      this.save$0();
  },
  is$PersistentObject: true
};

$$.ObjectoryQueryBuilder = {"": "Object;map=,className>",
  toString$0: function() {
    return "ObjectoryQueryBuilder(" + this.className + " " + $.S(this.map) + ")";
  },
  id$1: function(value) {
    $.indexSet(this.map, "_id", value);
    return this;
  },
  get$id: function() {
    return new $.BoundClosure0(this, "id$1");
  },
  where$1: function(javaScriptCode) {
    $.indexSet(this.map, "$where", $.BsonCode$(javaScriptCode));
    return this;
  },
  ObjectoryQueryBuilder$1: function(className) {
    this.map = $.LinkedHashMap_LinkedHashMap();
  }
};

$$.Objectory = {"": "Object;dropCollectionsOnStartup>",
  registerClassesCallback$0: function() {
    return this.registerClassesCallback.call$0();
  },
  addToCache$1: function(obj) {
    var t1, t2;
    t1 = this.cache;
    t2 = obj.get$id();
    $.indexSet(t1, $.getInterceptor(t2).toString$0(t2), obj);
  },
  newInstance$1: function(className) {
    var t1;
    if (this.factories.containsKey$1(className) === true) {
      t1 = this.factories;
      return $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, className).call$0();
    }
    throw $.$$throw("Class " + $.S(className) + " have not been registered in Objectory");
  },
  map2Object$2: function(className, map) {
    var id, t1, t3, res, result;
    if (map == null)
      map = $.LinkedHashMap_LinkedHashMap();
    if (map.containsKey$1("_id") === true) {
      id = $.getInterceptor$JSStringJSArray(map).operator$index$1(map, "_id");
      if (!(id == null)) {
        t1 = this.cache;
        if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
          return this.map2Object$2$bailout(1, t1, className, id, map);
        t3 = id.toHexString$0();
        if (t3 !== (t3 | 0))
          throw $.iae(t3);
        if (t3 < 0 || t3 >= t1.length)
          throw $.ioore(t3);
        res = t1[t3];
        if (!(res == null)) {
          $.print("Object from cache:  " + $.S(res));
          return res;
        }
      }
    }
    result = this.newInstance$1(className);
    result.set$map(map);
    if (typeof result === "object" && result !== null && !!result.is$PersistentObject)
      result.set$id($.getInterceptor$JSStringJSArray(map).operator$index$1(map, "_id"));
    if (typeof result === "object" && result !== null && !!result.is$PersistentObject)
      if (!(result.get$id() == null))
        $.objectory0().addToCache$1(result);
    return result;
  },
  map2Object$2$bailout: function(state0, env0, env1, env2, env3) {
    switch (state0) {
      case 1:
        map = env3;
        id = env2;
        className = env1;
        t1 = env0;
        break;
    }
    switch (state0) {
      case 0:
        if (map == null)
          map = $.LinkedHashMap_LinkedHashMap();
      case 1:
        var map, id, t1, className, res, result;
        if (state0 === 1 || state0 === 0 && map.containsKey$1("_id") === true)
          switch (state0) {
            case 0:
              id = $.getInterceptor$JSStringJSArray(map).operator$index$1(map, "_id");
            case 1:
              if (state0 === 1 || state0 === 0 && !(id == null))
                switch (state0) {
                  case 0:
                    t1 = this.cache;
                  case 1:
                    state0 = 0;
                    res = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, id.toHexString$0());
                    if (!(res == null)) {
                      $.print("Object from cache:  " + $.S(res));
                      return res;
                    }
                }
          }
        result = this.newInstance$1(className);
        result.set$map(map);
        if (typeof result === "object" && result !== null && !!result.is$PersistentObject)
          result.set$id($.getInterceptor$JSStringJSArray(map).operator$index$1(map, "_id"));
        if (typeof result === "object" && result !== null && !!result.is$PersistentObject)
          if (!(result.get$id() == null))
            $.objectory0().addToCache$1(result);
        return result;
    }
  },
  getCollections$0: function() {
    var result, t1;
    result = $.List_List(0, $.String);
    $.setRuntimeTypeInfo(result, [$.String]);
    t1 = this.factories;
    $.getInterceptor$JSArray(t1).forEach$1(t1, new $.Objectory_getCollections_anon(result));
    return result;
  },
  save$1: function(persistentObject) {
    if (!(persistentObject.get$id() == null))
      return this.update$1(persistentObject);
    else {
      persistentObject.set$id(this.generateId$0());
      $.indexSet(persistentObject.get$map(), "_id", persistentObject.get$id());
      $.objectory0().addToCache$1(persistentObject);
      return this.insert$1(persistentObject);
    }
  },
  generateId$0: function() {
    return $.ObjectId$(false);
  },
  registerClass$2: function(className, factory) {
    $.indexSet(this.factories, className, factory);
  },
  dropCollections$0: function() {
    throw $.$$throw("Must be implemented");
  },
  open$0: function() {
    throw $.$$throw("Must be implemented");
  },
  get$open: function() {
    return new $.BoundClosure(this, "open$0");
  },
  find$1: function(selector) {
    throw $.$$throw("Must be implemented");
  },
  insert$1: function(persistentObject) {
    throw $.$$throw("Must be implemented");
  },
  update$1: function(persistentObject) {
    throw $.$$throw("Must be implemented");
  },
  remove$1: function(persistentObject) {
    throw $.$$throw("Must be implemented");
  },
  close$0: function() {
    throw $.$$throw("Must be implemented");
  },
  get$close: function() {
    return new $.BoundClosure(this, "close$0");
  },
  initDomainModel$0: function() {
    var res = $.Completer_Completer();
    this.registerClassesCallback$0();
    this.open$0().then$1(new $.Objectory_initDomainModel_anon(this, res));
    return res.get$future();
  },
  Objectory$3: function(uri, registerClassesCallback, dropCollectionsOnStartup) {
    this.factories = $.Map_Map($.String, $.FactoryMethod);
    this.cache = $.Map_Map($.String, $.BasePersistentObject);
  }
};

$$.JsonUnsupportedObjectError = {"": "Object;unsupportedObject,cause>",
  toString$0: function() {
    if (!(this.cause == null))
      return "Calling toJson method on object failed.";
    else
      return "Object toJson method returns non-serializable value.";
  }
};

$$._JsonParser = {"": "Object;json,length>,position",
  parseToplevel$0: function() {
    var result = this.parseValue$0();
    if (!(this.token$0() == null))
      this.error$1("Junk at the end of JSON input");
    return result;
  },
  parseValue$0: function() {
    var tok = this.token$0();
    if (tok == null)
      this.error$1("Nothing to parse");
    switch (tok) {
      case 34:
        return this.parseString$0();
      case 45:
        return this.parseNumber$0();
      case 110:
        return this.expectKeyword$2("null", null);
      case 102:
        return this.expectKeyword$2("false", false);
      case 116:
        return this.expectKeyword$2("true", true);
      case 123:
        return this.parseObject$0();
      case 91:
        return this.parseList$0();
      default:
        this.error$1("Unexpected token");
        return;
    }
  },
  expectKeyword$2: function(word, value) {
    var i;
    for (i = 0; i < word.length; ++i) {
      if (!$.eqB(this.char$0(), $.CONSTANT1.charCodeAt$1(word, i)))
        this.error$1("Expected keyword '" + word + "'");
      this.position = $.add(this.position, 1);
    }
    return value;
  },
  parseBsonExtensionValue$1: function(key) {
    var collection, t1, oidKey, t3, pattern, optkey;
    if (typeof key !== "string")
      return this.parseBsonExtensionValue$1$bailout(1, key);
    if (key === "$date")
      return $.Date_Date$fromMillisecondsSinceEpoch(this.parseNumber$0(), false);
    if (key === "$oid")
      return $.ObjectId_ObjectId$fromHexString(this.parseString$0());
    if (key === "$ref") {
      collection = this.parseString$0();
      t1 = this.position;
      if (typeof t1 !== "number")
        return this.parseBsonExtensionValue$1$bailout(2, collection, t1);
      this.position = t1 + 1;
      oidKey = this.parseString$0();
      if (typeof oidKey !== "string")
        return this.parseBsonExtensionValue$1$bailout(3, collection, oidKey);
      if (oidKey === "$oid") {
        t1 = this.token$0();
        if (typeof t1 !== "number")
          return this.parseBsonExtensionValue$1$bailout(4, collection, t1);
        t3 = !(t1 === 58);
        t1 = t3;
      } else
        t1 = true;
      if (t1)
        this.error$1("Expected '$oid:' when parsing DbRef");
      t1 = this.position;
      if (typeof t1 !== "number")
        return this.parseBsonExtensionValue$1$bailout(5, collection, t1);
      this.position = t1 + 1;
      return $.DbRef$(collection, $.ObjectId_ObjectId$fromHexString(this.parseString$0()));
    }
    if (key === "$regex") {
      pattern = this.parseString$0();
      t1 = this.position;
      if (typeof t1 !== "number")
        return this.parseBsonExtensionValue$1$bailout(6, t1, pattern);
      this.position = t1 + 1;
      optkey = this.parseString$0();
      if (typeof optkey !== "string")
        return this.parseBsonExtensionValue$1$bailout(7, optkey, pattern);
      if (optkey === "$options") {
        t1 = this.token$0();
        if (typeof t1 !== "number")
          return this.parseBsonExtensionValue$1$bailout(8, pattern, t1);
        t3 = !(t1 === 58);
        t1 = t3;
      } else
        t1 = true;
      if (t1)
        this.error$1("Expected '$options:' when parsing BsonRegexp");
      t1 = this.position;
      if (typeof t1 !== "number")
        return this.parseBsonExtensionValue$1$bailout(9, pattern, t1);
      this.position = t1 + 1;
      return $.BsonRegexp$(pattern, false, false, false, false, this.parseString$0());
    }
  },
  parseBsonExtensionValue$1$bailout: function(state0, env0, env1) {
    switch (state0) {
      case 1:
        key = env0;
        break;
      case 2:
        t1 = env1;
        collection = env0;
        break;
      case 3:
        oidKey = env1;
        collection = env0;
        break;
      case 4:
        t1 = env1;
        collection = env0;
        break;
      case 5:
        t1 = env1;
        collection = env0;
        break;
      case 6:
        pattern = env1;
        t1 = env0;
        break;
      case 7:
        pattern = env1;
        optkey = env0;
        break;
      case 8:
        t1 = env1;
        pattern = env0;
        break;
      case 9:
        t1 = env1;
        pattern = env0;
        break;
    }
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        if ($.eqB(key, "$date"))
          return $.Date_Date$fromMillisecondsSinceEpoch(this.parseNumber$0(), false);
        if ($.eqB(key, "$oid"))
          return $.ObjectId_ObjectId$fromHexString(this.parseString$0());
      default:
        if (state0 === 5 || state0 === 4 || state0 === 3 || state0 === 2 || state0 === 0 && $.eqB(key, "$ref"))
          switch (state0) {
            case 0:
              collection = this.parseString$0();
              t1 = this.position;
            case 2:
              state0 = 0;
              this.position = $.add(t1, 1);
              oidKey = this.parseString$0();
            case 3:
              state0 = 0;
            case 4:
              if (state0 === 4 || state0 === 0 && $.eqB(oidKey, "$oid"))
                switch (state0) {
                  case 0:
                    t1 = this.token$0();
                  case 4:
                    state0 = 0;
                    t3 = !$.eqB(t1, 58);
                    t1 = t3;
                }
              else
                t1 = true;
              if (t1)
                this.error$1("Expected '$oid:' when parsing DbRef");
              t1 = this.position;
            case 5:
              state0 = 0;
              this.position = $.add(t1, 1);
              return $.DbRef$(collection, $.ObjectId_ObjectId$fromHexString(this.parseString$0()));
          }
      case 6:
      case 7:
      case 8:
      case 9:
        var key, collection, t1, oidKey, t3, pattern, optkey;
        if (state0 === 9 || state0 === 8 || state0 === 7 || state0 === 6 || state0 === 0 && $.eqB(key, "$regex"))
          switch (state0) {
            case 0:
              pattern = this.parseString$0();
              t1 = this.position;
            case 6:
              state0 = 0;
              this.position = $.add(t1, 1);
              optkey = this.parseString$0();
            case 7:
              state0 = 0;
            case 8:
              if (state0 === 8 || state0 === 0 && $.eqB(optkey, "$options"))
                switch (state0) {
                  case 0:
                    t1 = this.token$0();
                  case 8:
                    state0 = 0;
                    t3 = !$.eqB(t1, 58);
                    t1 = t3;
                }
              else
                t1 = true;
              if (t1)
                this.error$1("Expected '$options:' when parsing BsonRegexp");
              t1 = this.position;
            case 9:
              state0 = 0;
              this.position = $.add(t1, 1);
              return $.BsonRegexp$(pattern, false, false, false, false, this.parseString$0());
          }
    }
  },
  parseObject$0: function() {
    var object, key, extObject, t1;
    object = $.makeLiteralMap([]);
    if (typeof object !== "object" || object === null || (object.constructor !== Array || !!object.immutable$list) && !object.is$JavaScriptIndexingBehavior())
      return this.parseObject$0$bailout(1, object);
    this.position = $.add(this.position, 1);
    if (!$.eqB(this.token$0(), 125)) {
      for (; true;) {
        key = this.parseString$0();
        if (!$.eqB(this.token$0(), 58))
          this.error$1("Expected ':' when parsing object");
        this.position = $.add(this.position, 1);
        if ($.eqB($.getInterceptor$JSString(key).charCodeAt$1(key, 0), 36)) {
          extObject = this.parseBsonExtensionValue$1(key);
          if (!(extObject == null)) {
            object = extObject;
            break;
          }
        }
        t1 = this.parseValue$0();
        if (key !== (key | 0))
          throw $.iae(key);
        if (key < 0 || key >= object.length)
          throw $.ioore(key);
        object[key] = t1;
        if (!$.eqB(this.token$0(), 44))
          break;
        this.position = $.add(this.position, 1);
      }
      if (!$.eqB(this.token$0(), 125))
        this.error$1("Expected '}' at end of object");
    }
    this.position = $.add(this.position, 1);
    return object;
  },
  parseObject$0$bailout: function(state0, object) {
    var key, extObject;
    this.position = $.add(this.position, 1);
    if (!$.eqB(this.token$0(), 125)) {
      for (; true;) {
        key = this.parseString$0();
        if (!$.eqB(this.token$0(), 58))
          this.error$1("Expected ':' when parsing object");
        this.position = $.add(this.position, 1);
        if ($.eqB($.getInterceptor$JSString(key).charCodeAt$1(key, 0), 36)) {
          extObject = this.parseBsonExtensionValue$1(key);
          if (!(extObject == null)) {
            object = extObject;
            break;
          }
        }
        $.indexSet(object, key, this.parseValue$0());
        if (!$.eqB(this.token$0(), 44))
          break;
        this.position = $.add(this.position, 1);
      }
      if (!$.eqB(this.token$0(), 125))
        this.error$1("Expected '}' at end of object");
    }
    this.position = $.add(this.position, 1);
    return object;
  },
  parseList$0: function() {
    var list = [];
    this.position = $.add(this.position, 1);
    if (!$.eqB(this.token$0(), 93)) {
      for (; true;) {
        list.push(this.parseValue$0());
        if (!$.eqB(this.token$0(), 44))
          break;
        this.position = $.add(this.position, 1);
      }
      if (!$.eqB(this.token$0(), 93))
        this.error$1("Expected ']' at end of list");
    }
    this.position = $.add(this.position, 1);
    return list;
  },
  parseString$0: function(exception) {
    var charCodes, t1, t2, t3, c, codeString;
    if (!$.eqB(this.token$0(), 34))
      this.error$1("Expected string literal");
    this.position = $.add(this.position, 1);
    charCodes = $.List_List(0, $.$int);
    $.setRuntimeTypeInfo(charCodes, [$.$int]);
    for (t1 = this.length, t2 = this.json, t3 = $.getInterceptor$JSString(t2); true;) {
      c = this.char$0();
      if ($.eqB(c, 34)) {
        this.position = $.add(this.position, 1);
        break;
      }
      if ($.eqB(c, 92)) {
        this.position = $.add(this.position, 1);
        if ($.eqB(this.position, t1))
          this.error$1("\\ at the end of input");
        switch (this.char$0()) {
          case 34:
            c = 34;
            break;
          case 92:
            c = 92;
            break;
          case 47:
            c = 47;
            break;
          case 98:
            c = 8;
            break;
          case 110:
            c = 10;
            break;
          case 114:
            c = 13;
            break;
          case 102:
            c = 12;
            break;
          case 116:
            c = 9;
            break;
          case 117:
            if ($.gtB($.add(this.position, 5), t1))
              this.error$1("Invalid unicode esacape sequence");
            codeString = t3.substring$2(t2, $.add(this.position, 1), $.add(this.position, 5));
            try {
              c = $.int_parse("0x" + $.S(codeString), null, null);
            } catch (exception) {
              $.unwrapException(exception);
              this.error$1("Invalid unicode esacape sequence");
            }

            this.position = $.add(this.position, 4);
            break;
          default:
            this.error$1("Invalid esacape sequence in string literal");
            break;
        }
      }
      charCodes.push(c);
      this.position = $.add(this.position, 1);
    }
    return $.String_String$fromCharCodes(charCodes);
  },
  parseNumber$0: function() {
    var startPos, chr, isInt, t1, number;
    if (!$.eqB(this.token$0(), 45))
      this.error$1("Expected number literal");
    startPos = this.position;
    chr = this.char$0();
    if ($.eqB(chr, 45))
      chr = this.nextChar$0();
    if ($.eqB(chr, 48))
      chr = this.nextChar$0();
    else if ($.geB(chr, 48) && $.leB(chr, 57)) {
      chr = this.nextChar$0();
      if (typeof chr !== "number")
        return this.parseNumber$0$bailout(1, startPos, chr);
      while (true) {
        if (!($.geB(chr, 48) && $.leB(chr, 57)))
          break;
        chr = this.nextChar$0();
      }
    } else
      this.error$1("Expected digit when parsing number");
    if ($.eqB(chr, 46)) {
      chr = this.nextChar$0();
      if ($.geB(chr, 48) && $.leB(chr, 57)) {
        chr = this.nextChar$0();
        if (typeof chr !== "number")
          return this.parseNumber$0$bailout(2, startPos, chr);
        while (true) {
          if (!($.geB(chr, 48) && $.leB(chr, 57)))
            break;
          chr = this.nextChar$0();
        }
        isInt = false;
      } else {
        this.error$1("Expected digit following comma");
        isInt = true;
      }
    } else
      isInt = true;
    if ($.eqB(chr, 101) || $.eqB(chr, 69)) {
      chr = this.nextChar$0();
      if ($.eqB(chr, 45) || $.eqB(chr, 43))
        chr = this.nextChar$0();
      if ($.geB(chr, 48) && $.leB(chr, 57)) {
        chr = this.nextChar$0();
        if (typeof chr !== "number")
          return this.parseNumber$0$bailout(3, chr, startPos);
        while (true) {
          if (!($.geB(chr, 48) && $.leB(chr, 57)))
            break;
          chr = this.nextChar$0();
        }
        isInt = false;
      } else
        this.error$1("Expected digit following 'e' or 'E'");
    }
    t1 = this.json;
    number = $.getInterceptor$JSString(t1).substring$2(t1, startPos, this.position);
    if (isInt)
      return $.int_parse(number, null, null);
    else
      return $.double_parse(number, null);
  },
  parseNumber$0$bailout: function(state0, env0, env1) {
    switch (state0) {
      case 1:
        chr = env1;
        startPos = env0;
        break;
      case 2:
        chr = env1;
        startPos = env0;
        break;
      case 3:
        startPos = env1;
        chr = env0;
        break;
    }
    switch (state0) {
      case 0:
        if (!$.eqB(this.token$0(), 45))
          this.error$1("Expected number literal");
        startPos = this.position;
        chr = this.char$0();
        if ($.eqB(chr, 45))
          chr = this.nextChar$0();
      case 1:
        if (state0 === 0 && $.eqB(chr, 48))
          chr = this.nextChar$0();
        else
          switch (state0) {
            case 0:
            case 1:
              if (state0 === 1 || state0 === 0 && $.geB(chr, 48) && $.leB(chr, 57))
                switch (state0) {
                  case 0:
                    chr = this.nextChar$0();
                  case 1:
                    state0 = 0;
                    while (true) {
                      if (!($.geB(chr, 48) && $.leB(chr, 57)))
                        break;
                      chr = this.nextChar$0();
                    }
                }
              else
                this.error$1("Expected digit when parsing number");
          }
      case 2:
        if (state0 === 2 || state0 === 0 && $.eqB(chr, 46))
          switch (state0) {
            case 0:
              chr = this.nextChar$0();
            case 2:
              if (state0 === 2 || state0 === 0 && $.geB(chr, 48) && $.leB(chr, 57))
                switch (state0) {
                  case 0:
                    chr = this.nextChar$0();
                  case 2:
                    state0 = 0;
                    while (true) {
                      if (!($.geB(chr, 48) && $.leB(chr, 57)))
                        break;
                      chr = this.nextChar$0();
                    }
                    isInt = false;
                }
              else {
                this.error$1("Expected digit following comma");
                isInt = true;
              }
          }
        else
          isInt = true;
      case 3:
        var startPos, chr, isInt, t1, number;
        if (state0 === 3 || state0 === 0 && ($.eqB(chr, 101) || $.eqB(chr, 69)))
          switch (state0) {
            case 0:
              chr = this.nextChar$0();
              if ($.eqB(chr, 45) || $.eqB(chr, 43))
                chr = this.nextChar$0();
            case 3:
              if (state0 === 3 || state0 === 0 && $.geB(chr, 48) && $.leB(chr, 57))
                switch (state0) {
                  case 0:
                    chr = this.nextChar$0();
                  case 3:
                    state0 = 0;
                    while (true) {
                      if (!($.geB(chr, 48) && $.leB(chr, 57)))
                        break;
                      chr = this.nextChar$0();
                    }
                    isInt = false;
                }
              else
                this.error$1("Expected digit following 'e' or 'E'");
          }
        t1 = this.json;
        number = $.getInterceptor$JSString(t1).substring$2(t1, startPos, this.position);
        if (isInt)
          return $.int_parse(number, null, null);
        else
          return $.double_parse(number, null);
    }
  },
  char$0: function() {
    var t1, t3;
    t1 = this.position;
    if (typeof t1 !== "number")
      return this.char$0$bailout(1, t1);
    t3 = this.length;
    if (typeof t3 !== "number")
      return this.char$0$bailout(2, t1, t3);
    if (t1 >= t3)
      this.error$1("Unexpected end of JSON stream");
    t1 = this.json;
    return $.getInterceptor$JSString(t1).charCodeAt$1(t1, this.position);
  },
  char$0$bailout: function(state0, env0, env1) {
    switch (state0) {
      case 1:
        t1 = env0;
        break;
      case 2:
        t3 = env1;
        t1 = env0;
        break;
    }
    switch (state0) {
      case 0:
        t1 = this.position;
      case 1:
        state0 = 0;
        t3 = this.length;
      case 2:
        var t1, t3;
        state0 = 0;
        if ($.geB(t1, t3))
          this.error$1("Unexpected end of JSON stream");
        t1 = this.json;
        return $.getInterceptor$JSString(t1).charCodeAt$1(t1, this.position);
    }
  },
  nextChar$0: function() {
    var t1, t3, t2;
    t1 = this.position;
    if (typeof t1 !== "number")
      return this.nextChar$0$bailout(1, t1);
    this.position = t1 + 1;
    t1 = this.position;
    if (typeof t1 !== "number")
      return this.nextChar$0$bailout(2, t1);
    t3 = this.length;
    if (typeof t3 !== "number")
      return this.nextChar$0$bailout(3, t1, t3);
    if (t1 >= t3)
      return 0;
    t2 = this.json;
    return $.getInterceptor$JSString(t2).charCodeAt$1(t2, t1);
  },
  nextChar$0$bailout: function(state0, env0, env1) {
    switch (state0) {
      case 1:
        t1 = env0;
        break;
      case 2:
        t1 = env0;
        break;
      case 3:
        t3 = env1;
        t1 = env0;
        break;
    }
    switch (state0) {
      case 0:
        t1 = this.position;
      case 1:
        state0 = 0;
        this.position = $.add(t1, 1);
        t1 = this.position;
      case 2:
        state0 = 0;
        t3 = this.length;
      case 3:
        var t1, t3;
        state0 = 0;
        if ($.geB(t1, t3))
          return 0;
        t1 = this.json;
        return $.getInterceptor$JSString(t1).charCodeAt$1(t1, this.position);
    }
  },
  token$0: function() {
    var t1, t2, t3, t4, char$, token;
    t1 = this.json;
    t2 = $.getInterceptor$JSString(t1);
    t3 = this.length;
    if (typeof t3 !== "number")
      return this.token$0$bailout(1, t2, t3, t1);
    for (; true;) {
      t4 = this.position;
      if (typeof t4 !== "number")
        return this.token$0$bailout(2, t4, t2, t3, t1);
      if (t4 >= t3)
        return;
      char$ = t2.charCodeAt$1(t1, t4);
      t4 = $._JsonParser_tokens;
      if (typeof t4 !== "string" && (typeof t4 !== "object" || t4 === null || t4.constructor !== Array && !t4.is$JavaScriptIndexingBehavior()))
        return this.token$0$bailout(3, t2, t3, char$, t4, t1);
      if (char$ !== (char$ | 0))
        throw $.iae(char$);
      if (char$ < 0 || char$ >= t4.length)
        throw $.ioore(char$);
      token = t4[char$];
      if (typeof token !== "number")
        return this.token$0$bailout(4, t2, t3, t1, token);
      if (token === 32) {
        t4 = this.position;
        if (typeof t4 !== "number")
          return this.token$0$bailout(5, t2, t3, t1, t4);
        this.position = t4 + 1;
        continue;
      }
      return token;
    }
  },
  token$0$bailout: function(state0, env0, env1, env2, env3, env4) {
    switch (state0) {
      case 1:
        t1 = env2;
        t3 = env1;
        t2 = env0;
        break;
      case 2:
        t1 = env3;
        t3 = env2;
        t2 = env1;
        t4 = env0;
        break;
      case 3:
        t1 = env4;
        t4 = env3;
        char$ = env2;
        t3 = env1;
        t2 = env0;
        break;
      case 4:
        token = env3;
        t1 = env2;
        t3 = env1;
        t2 = env0;
        break;
      case 5:
        t4 = env3;
        t1 = env2;
        t3 = env1;
        t2 = env0;
        break;
    }
    switch (state0) {
      case 0:
        t1 = this.json;
        t2 = $.getInterceptor$JSString(t1);
        t3 = this.length;
      case 1:
        state0 = 0;
      default:
        var t1, t2, t3, t4, char$, token;
        L0:
          while (true)
            switch (state0) {
              case 0:
                if (!true)
                  break L0;
              default:
                c$0: {
                  switch (state0) {
                    case 0:
                      t4 = this.position;
                    case 2:
                      state0 = 0;
                      if ($.geB(t4, t3))
                        return;
                      char$ = t2.charCodeAt$1(t1, this.position);
                      t4 = $._JsonParser_tokens;
                    case 3:
                      state0 = 0;
                      token = $.getInterceptor$JSStringJSArray(t4).operator$index$1(t4, char$);
                    case 4:
                      state0 = 0;
                    case 5:
                      if (state0 === 5 || state0 === 0 && $.eqB(token, 32))
                        switch (state0) {
                          case 0:
                            t4 = this.position;
                          case 5:
                            state0 = 0;
                            this.position = $.add(t4, 1);
                            break c$0;
                        }
                      if (token == null)
                        return 0;
                      return token;
                  }
                }
            }
    }
  },
  error$1: function(message) {
    throw $.$$throw(message);
  },
  get$error: function() {
    return new $.BoundClosure0(this, "error$1");
  },
  _JsonParser$1: function(json) {
    var t1;
    if (!($._JsonParser_tokens == null))
      return;
    t1 = $.List_List(126, $.$int);
    $.setRuntimeTypeInfo(t1, [$.$int]);
    $._JsonParser_tokens = t1;
    $.indexSet($._JsonParser_tokens, 9, 32);
    $.indexSet($._JsonParser_tokens, 10, 32);
    $.indexSet($._JsonParser_tokens, 13, 32);
    $.indexSet($._JsonParser_tokens, 32, 32);
    $.indexSet($._JsonParser_tokens, 48, 45);
    $.indexSet($._JsonParser_tokens, 49, 45);
    $.indexSet($._JsonParser_tokens, 50, 45);
    $.indexSet($._JsonParser_tokens, 51, 45);
    $.indexSet($._JsonParser_tokens, 52, 45);
    $.indexSet($._JsonParser_tokens, 53, 45);
    $.indexSet($._JsonParser_tokens, 54, 45);
    $.indexSet($._JsonParser_tokens, 55, 45);
    $.indexSet($._JsonParser_tokens, 56, 45);
    $.indexSet($._JsonParser_tokens, 57, 45);
    $.indexSet($._JsonParser_tokens, 45, 45);
    $.indexSet($._JsonParser_tokens, 123, 123);
    $.indexSet($._JsonParser_tokens, 125, 125);
    $.indexSet($._JsonParser_tokens, 91, 91);
    $.indexSet($._JsonParser_tokens, 93, 93);
    $.indexSet($._JsonParser_tokens, 34, 34);
    $.indexSet($._JsonParser_tokens, 58, 58);
    $.indexSet($._JsonParser_tokens, 44, 44);
    $.indexSet($._JsonParser_tokens, 110, 110);
    $.indexSet($._JsonParser_tokens, 116, 116);
    $.indexSet($._JsonParser_tokens, 102, 102);
  }
};

$$._JsonStringifier = {"": "Object;sb>,seen",
  checkCycle$1: function(object) {
    var t1, i;
    for (t1 = this.seen, i = 0; i < t1.length; ++i)
      if ($.eqB(t1[i], object))
        throw $.$$throw("Cyclic structure");
    t1.push(object);
  },
  stringifyValue$1: function(object, exception) {
    var customJson, t1, e;
    if (this.stringifyJsonValue$1(object) !== true) {
      this.checkCycle$1(object);
      try {
        customJson = object.toJson$0();
        if (this.stringifyJsonValue$1(customJson) !== true)
          throw $.$$throw($.JsonUnsupportedObjectError$(object));
        t1 = this.seen;
        if (0 >= t1.length)
          throw $.ioore(0);
        t1.pop();
      } catch (exception) {
        t1 = $.unwrapException(exception);
        e = t1;
        throw $.$$throw($.JsonUnsupportedObjectError$withCause(object, e));
      }

    }
  },
  stringifyJsonValue$1: function(object) {
    var t1, t2, t3, i;
    t1 = {};
    if (typeof object !== "boolean")
      return this.stringifyJsonValue$1$bailout(1, object, t1);
    if (typeof object === "number") {
      t1 = this.sb;
      $.getInterceptor$JSArray(t1).add$1(t1, $.CONSTANT4.toString$0(object));
      return true;
    } else if (object) {
      t1 = this.sb;
      $.getInterceptor$JSArray(t1).add$1(t1, "true");
      return true;
    } else if (!object) {
      t1 = this.sb;
      $.getInterceptor$JSArray(t1).add$1(t1, "false");
      return true;
    } else if (typeof object === "string") {
      t1 = this.sb;
      t2 = $.getInterceptor$JSArray(t1);
      t2.add$1(t1, "\"");
      $._JsonStringifier_escape(t1, object);
      t2.add$1(t1, "\"");
      return true;
    } else if (typeof object === "object" && object !== null && !!object.is$Date)
      return this.stringifyJsonValue$1($.makeLiteralMap(["$date", object.get$millisecondsSinceEpoch()]));
    else if (typeof object === "object" && object !== null && !!object.is$ObjectId)
      return this.stringifyJsonValue$1($.makeLiteralMap(["$oid", object.toHexString$0()]));
    else if (typeof object === "object" && object !== null && !!object.is$DbRef)
      return this.stringifyJsonValue$1($.makeLiteralMap(["$ref", object.collection, "$oid", object.id.toHexString$0()]));
    else if (typeof object === "object" && object !== null && !!object.is$BsonRegexp)
      return this.stringifyJsonValue$1($.makeLiteralMap(["$regex", object.pattern, "$options", object.options]));
    else if (typeof object === "object" && object !== null && (object.constructor === Array || object.is$List())) {
      if (typeof object !== "object" || object === null || object.constructor !== Array && !object.is$JavaScriptIndexingBehavior())
        return this.stringifyJsonValue$1$bailout(2, object);
      this.checkCycle$1(object);
      t2 = this.sb;
      t3 = $.getInterceptor$JSArray(t2);
      t3.add$1(t2, "[");
      t1 = object.length;
      if (t1 > 0) {
        this.stringifyValue$1(object[0]);
        i = 1;
        while (true) {
          t1 = object.length;
          if (!(i < t1))
            break;
          t3.add$1(t2, ",");
          if (i >= object.length)
            throw $.ioore(i);
          this.stringifyValue$1(object[i]);
          ++i;
        }
      }
      t3.add$1(t2, "]");
      t1 = this.seen;
      if (0 >= t1.length)
        throw $.ioore(0);
      t1.pop();
      return true;
    } else if (typeof object === "object" && object !== null && object.is$Map()) {
      this.checkCycle$1(object);
      t2 = this.sb;
      t3 = $.getInterceptor$JSArray(t2);
      t3.add$1(t2, "{");
      t1.first_0 = true;
      object.forEach$1(new $._JsonStringifier_stringifyJsonValue_anon(t1, this));
      t3.add$1(t2, "}");
      t2 = this.seen;
      if (0 >= t2.length)
        throw $.ioore(0);
      t2.pop();
      return true;
    } else
      return false;
  },
  stringifyJsonValue$1$bailout: function(state0, env0, env1, env2, env3, env4, env5) {
    switch (state0) {
      case 1:
        t1 = env1;
        object = env0;
        break;
      case 2:
        object = env0;
        break;
      case 3:
        t3 = env4;
        t4 = env3;
        t2 = env2;
        t1 = env1;
        object = env0;
        break;
      case 4:
        t4 = env5;
        t2 = env4;
        t1 = env3;
        i = env2;
        t3 = env1;
        object = env0;
        break;
    }
    switch (state0) {
      case 0:
        t1 = {};
      case 1:
        state0 = 0;
      default:
        var t1, object, t2, t3, t4, i;
        if (state0 === 0 && typeof object === "number") {
          t1 = this.sb;
          $.getInterceptor$JSArray(t1).add$1(t1, $.CONSTANT4.toString$0(object));
          return true;
        } else
          switch (state0) {
            case 0:
            default:
              if (state0 === 0 && $.eqB(object, true)) {
                t1 = this.sb;
                $.getInterceptor$JSArray(t1).add$1(t1, "true");
                return true;
              } else
                switch (state0) {
                  case 0:
                  default:
                    if (state0 === 0 && $.eqB(object, false)) {
                      t1 = this.sb;
                      $.getInterceptor$JSArray(t1).add$1(t1, "false");
                      return true;
                    } else
                      switch (state0) {
                        case 0:
                        default:
                          if (state0 === 0 && object == null) {
                            t1 = this.sb;
                            $.getInterceptor$JSArray(t1).add$1(t1, "null");
                            return true;
                          } else
                            switch (state0) {
                              case 0:
                              default:
                                if (state0 === 0 && typeof object === "string") {
                                  t1 = this.sb;
                                  t2 = $.getInterceptor$JSArray(t1);
                                  t2.add$1(t1, "\"");
                                  $._JsonStringifier_escape(t1, object);
                                  t2.add$1(t1, "\"");
                                  return true;
                                } else
                                  switch (state0) {
                                    case 0:
                                    default:
                                      if (state0 === 0 && typeof object === "object" && object !== null && !!object.is$Date)
                                        return this.stringifyJsonValue$1($.makeLiteralMap(["$date", object.get$millisecondsSinceEpoch()]));
                                      else
                                        switch (state0) {
                                          case 0:
                                          default:
                                            if (state0 === 0 && typeof object === "object" && object !== null && !!object.is$ObjectId)
                                              return this.stringifyJsonValue$1($.makeLiteralMap(["$oid", object.toHexString$0()]));
                                            else
                                              switch (state0) {
                                                case 0:
                                                default:
                                                  if (state0 === 0 && typeof object === "object" && object !== null && !!object.is$DbRef)
                                                    return this.stringifyJsonValue$1($.makeLiteralMap(["$ref", object.collection, "$oid", object.id.toHexString$0()]));
                                                  else
                                                    switch (state0) {
                                                      case 0:
                                                      default:
                                                        if (state0 === 0 && typeof object === "object" && object !== null && !!object.is$BsonRegexp)
                                                          return this.stringifyJsonValue$1($.makeLiteralMap(["$regex", object.pattern, "$options", object.options]));
                                                        else
                                                          switch (state0) {
                                                            case 0:
                                                            default:
                                                              if (state0 === 4 || state0 === 3 || state0 === 2 || state0 === 0 && typeof object === "object" && object !== null && (object.constructor === Array || object.is$List()))
                                                                switch (state0) {
                                                                  case 0:
                                                                  case 2:
                                                                    state0 = 0;
                                                                    this.checkCycle$1(object);
                                                                    t2 = this.sb;
                                                                    t3 = $.getInterceptor$JSArray(t2);
                                                                    t3.add$1(t2, "[");
                                                                    t1 = $.getInterceptor$JSStringJSArray(object);
                                                                    t4 = t1.get$length(object);
                                                                  case 3:
                                                                    state0 = 0;
                                                                  case 4:
                                                                    if (state0 === 4 || state0 === 0 && $.gtB(t4, 0))
                                                                      switch (state0) {
                                                                        case 0:
                                                                          this.stringifyValue$1(t1.operator$index$1(object, 0));
                                                                          i = 1;
                                                                        case 4:
                                                                          L0:
                                                                            while (true)
                                                                              switch (state0) {
                                                                                case 0:
                                                                                  t4 = t1.get$length(object);
                                                                                case 4:
                                                                                  state0 = 0;
                                                                                  if (!$.ltB(i, t4))
                                                                                    break L0;
                                                                                  t3.add$1(t2, ",");
                                                                                  this.stringifyValue$1(t1.operator$index$1(object, i));
                                                                                  ++i;
                                                                              }
                                                                      }
                                                                    t3.add$1(t2, "]");
                                                                    t1 = this.seen;
                                                                    if (0 >= t1.length)
                                                                      throw $.ioore(0);
                                                                    t1.pop();
                                                                    return true;
                                                                }
                                                              else if (typeof object === "object" && object !== null && object.is$Map()) {
                                                                this.checkCycle$1(object);
                                                                t2 = this.sb;
                                                                t3 = $.getInterceptor$JSArray(t2);
                                                                t3.add$1(t2, "{");
                                                                t1.first_0 = true;
                                                                object.forEach$1(new $._JsonStringifier_stringifyJsonValue_anon(t1, this));
                                                                t3.add$1(t2, "}");
                                                                t2 = this.seen;
                                                                if (0 >= t2.length)
                                                                  throw $.ioore(0);
                                                                t2.pop();
                                                                return true;
                                                              } else
                                                                return false;
                                                          }
                                                    }
                                              }
                                        }
                                  }
                            }
                      }
                }
          }
    }
  }
};

$$.TodoRow = {"": "WebComponent;_liblib5$_root,__e10,__e11,__e9>,_liblib5$__t,__label>,todo=,_liblib2$_element,_shadowRoots",
  created_autogenerated$0: function() {
    this._liblib5$_root = this.createShadowRoot$0();
    this._liblib5$__t = $.Template$(this._liblib5$_root);
    var t1 = this._liblib5$_root;
    if (typeof t1 === "object" && t1 !== null && t1.is$ShadowRoot())
      this._liblib5$_root.set$applyAuthorStyles(true);
    this._liblib5$_root.set$innerHtml("    <div class=\"todo-item  \" id=\"__e-11\">\n    <input class=\"toggle\" type=\"checkbox\" id=\"__e-9\">\n    <x-editable-label id=\"label\"></x-editable-label>\n    <button class=\"destroy\" id=\"__e-10\"></button>\n    </div>\n    ");
    this.__e11 = this._liblib5$_root.query$1("#__e-11");
    this.__e9 = this.__e11.query$1("#__e-9");
    this._liblib5$__t.listen$2(this.__e9.get$on().get$change(), new $.TodoRow_created_autogenerated_anon(this));
    this._liblib5$__t.oneWayBind$3(new $.TodoRow_created_autogenerated_anon0(this), new $.TodoRow_created_autogenerated_anon1(this), false);
    this.__label = this.__e11.query$1("#label");
    this._liblib5$__t.oneWayBind$3(new $.TodoRow_created_autogenerated_anon2(this), new $.TodoRow_created_autogenerated_anon3(this), false);
    this._liblib5$__t.oneWayBind$2(new $.TodoRow_created_autogenerated_anon4(this), new $.TodoRow_created_autogenerated_anon5(this));
    $.EditableLabel$forElement(this.__label);
    this._liblib5$__t.component$1(this.__label);
    this.__e10 = this.__e11.query$1("#__e-10");
    this._liblib5$__t.listen$2(this.__e10.get$on().get$click(), new $.TodoRow_created_autogenerated_anon6(this));
    this._liblib5$__t.bindClass$2(this.__e11, new $.TodoRow_created_autogenerated_anon7(this));
    this._liblib5$__t.bindClass$2(this.__e11, new $.TodoRow_created_autogenerated_anon8(this));
    this._liblib5$__t.create$0();
  },
  inserted_autogenerated$0: function() {
    this._liblib5$__t.insert$0();
  },
  removed_autogenerated$0: function() {
    this._liblib5$__t.remove$0();
    this.__label = null;
    this._liblib5$__t = null;
    this.__e9 = null;
    this.__e11 = null;
    this.__e10 = null;
  },
  composeChildren$0: function() {
    $.WebComponent.prototype.composeChildren$0.call(this);
    var t1 = this._liblib5$_root;
    if (!(typeof t1 === "object" && t1 !== null && t1.is$ShadowRoot()))
      this._liblib5$_root = this;
  },
  get$editing: function() {
    return this._liblib5$_root.query$1("#label").get$xtag().get$editing();
  },
  get$_completedClass: function() {
    return this.todo.get$done() === true ? "completed" : "";
  },
  get$_editingClass: function() {
    return this.get$editing() === true ? "editing" : "";
  }
};

$$.EditableLabel = {"": "WebComponent;_liblib6$_root,__e14,__e16,_liblib6$__t,editing=,value=,_liblib2$_element,_shadowRoots",
  created_autogenerated$0: function() {
    this._liblib6$_root = this.createShadowRoot$0();
    this._liblib6$__t = $.Template$(this._liblib6$_root);
    var t1 = this._liblib6$_root;
    if (typeof t1 === "object" && t1 !== null && t1.is$ShadowRoot())
      this._liblib6$_root.set$applyAuthorStyles(true);
    this._liblib6$_root.set$innerHtml("    <template id=\"__e-14\" style=\"display:none\"></template>\n    <template id=\"__e-16\" style=\"display:none\"></template>\n    ");
    this.__e14 = this._liblib6$_root.query$1("#__e-14");
    this._liblib6$__t.conditional$3(this.__e14, new $.EditableLabel_created_autogenerated_anon(this), new $.EditableLabel_created_autogenerated_anon0(this));
    this.__e16 = this._liblib6$_root.query$1("#__e-16");
    this._liblib6$__t.conditional$3(this.__e16, new $.EditableLabel_created_autogenerated_anon1(this), new $.EditableLabel_created_autogenerated_anon2(this));
    this._liblib6$__t.create$0();
  },
  inserted_autogenerated$0: function() {
    this._liblib6$__t.insert$0();
  },
  removed_autogenerated$0: function() {
    this._liblib6$__t.remove$0();
    this._liblib6$__t = null;
    this.__e16 = null;
    this.__e14 = null;
  },
  composeChildren$0: function() {
    $.WebComponent.prototype.composeChildren$0.call(this);
    var t1 = this._liblib6$_root;
    if (!(typeof t1 === "object" && t1 !== null && t1.is$ShadowRoot()))
      this._liblib6$_root = this;
  },
  get$_editBox: function() {
    return this._liblib6$_root.query$1("#edit");
  },
  created$0: function() {
    $.WebComponent.prototype.created$0.call(this);
    this.editing = false;
    this.value = "";
  },
  edit$0: function() {
    this.editing = true;
    $.dispatch();
    this.get$_editBox().focus$0();
    this.get$_editBox().set$value("");
    var t1 = this.value;
    this.get$_editBox().set$value(t1);
  },
  update$1: function(e) {
    e.preventDefault$0();
    if (this.editing !== true)
      return;
    this.value = this.get$_editBox().get$value();
    this.editing = false;
  }
};

$$.RouterOptions = {"": "WebComponent;_root,__t,_stopWatcher,_liblib2$_element,_shadowRoots",
  created_autogenerated$0: function() {
    this._root = this.createShadowRoot$0();
    this.__t = $.Template$(this._root);
    var t1 = this._root;
    if (typeof t1 === "object" && t1 !== null && t1.is$ShadowRoot())
      this._root.set$applyAuthorStyles(true);
    this._root.set$innerHtml("<content></content>");
    this.__t.create$0();
  },
  inserted_autogenerated$0: function() {
    this.__t.insert$0();
  },
  removed_autogenerated$0: function() {
    this.__t.remove$0();
    this.__t = null;
  },
  composeChildren$0: function() {
    $.WebComponent.prototype.composeChildren$0.call(this);
    var t1 = this._root;
    if (!(typeof t1 === "object" && t1 !== null && t1.is$ShadowRoot()))
      this._root = this;
  },
  _stopWatcher$0: function() {
    return this._stopWatcher.call$0();
  },
  inserted$0: function() {
    $.WebComponent.prototype.inserted$0.call(this);
    var anchors = this.queryAll$1("a");
    this._stopWatcher = $.watchAndInvoke(new $.RouterOptions_inserted_anon(), new $.RouterOptions_inserted_anon0(anchors), null);
  },
  removed$0: function() {
    this._stopWatcher$0();
    $.WebComponent.prototype.removed$0.call(this);
  }
};

$$.init_autogenerated_anon = {"": "Closure;",
  call$1: function($$event) {
    $.addTodo($$event);
  },
  is$Function: true
};

$$.init_autogenerated_anon0 = {"": "Closure;",
  call$1: function($$event) {
    $.addTodo($$event);
  },
  is$Function: true
};

$$.init_autogenerated_anon1 = {"": "Closure;box_1",
  call$1: function($$event) {
    var t1 = this.box_1.__toggleAll_1.get$checked();
    $.app().set$allChecked(t1);
  },
  is$Function: true
};

$$.init_autogenerated_anon2 = {"": "Closure;",
  call$0: function() {
    return $.app().get$allChecked();
  },
  is$Function: true
};

$$.init_autogenerated_anon3 = {"": "Closure;box_1",
  call$1: function(e) {
    this.box_1.__toggleAll_1.set$checked(e);
  },
  is$Function: true
};

$$.init_autogenerated_anon4 = {"": "Closure;",
  call$0: function() {
    return $.app().get$todos();
  },
  is$Function: true
};

$$.init_autogenerated_anon5 = {"": "Closure;",
  call$2: function(x, __t) {
    var __e2 = $.Element_Element$html("<template style=\"display:none\"></template>");
    __t.conditional$3(__e2, new $.init_autogenerated__anon2(x), new $.init_autogenerated__anon3(x));
    $.getInterceptor$JSArray(__t).addAll$1(__t, [$.Text_Text("\n          "), __e2, $.Text_Text("\n        ")]);
  },
  is$Function: true
};

$$.init_autogenerated__anon2 = {"": "Closure;x_2",
  call$0: function() {
    return $.get$viewModel().isVisible$1(this.x_2);
  },
  is$Function: true
};

$$.init_autogenerated__anon3 = {"": "Closure;x_3",
  call$1: function(__t) {
    var t1 = {};
    t1.__e1_0 = null;
    t1.__e1_0 = $.Element_Element$tag("x-todo-row");
    __t.oneWayBind$3(new $.init_autogenerated___anon1(this.x_3), new $.init_autogenerated___anon2(t1), false);
    $.TodoRow$forElement(t1.__e1_0);
    __t.component$1(t1.__e1_0);
    $.getInterceptor$JSArray(__t).addAll$1(__t, [$.Text_Text("\n            "), t1.__e1_0, $.Text_Text("\n          ")]);
  },
  is$Function: true
};

$$.init_autogenerated___anon1 = {"": "Closure;x_4",
  call$0: function() {
    return this.x_4;
  },
  is$Function: true
};

$$.init_autogenerated___anon2 = {"": "Closure;box_0",
  call$1: function(e) {
    this.box_0.__e1_0.get$xtag().set$todo(e);
  },
  is$Function: true
};

$$.init_autogenerated_anon6 = {"": "Closure;",
  call$0: function() {
    var t1 = $.app().get$todos();
    return $.gt($.getInterceptor$JSStringJSArray(t1).get$length(t1), 0);
  },
  is$Function: true
};

$$.init_autogenerated_anon7 = {"": "Closure;",
  call$1: function(__t) {
    var __footer, __e5, __binding4, t1, __filters;
    __footer = $.Element_Element$html("<footer id=\"footer\">\n        <span id=\"todo-count\"><strong id=\"__e-5\"></strong></span>\n        <x-router-options id=\"filters\">\n          <li> <a href=\"#/\">All</a> </li>\n          <li> <a href=\"#/active\">Active</a> </li>\n          <li> <a href=\"#/completed\">Completed</a> </li>\n        </x-router-options>\n        <template id=\"__e-7\" style=\"display:none\"></template>\n      </footer>");
    __e5 = __footer.query$1("#todo-count").query$1("#__e-5");
    __binding4 = __t.contentBind$1(new $.init_autogenerated__anon());
    t1 = __e5.get$nodes();
    $.getInterceptor$JSArray(t1).add$1(t1, __binding4);
    __filters = __footer.query$1("#filters");
    $.RouterOptions$forElement(__filters);
    __t.component$1(__filters);
    __t.conditional$3(__footer.query$1("#__e-7"), new $.init_autogenerated__anon0(), new $.init_autogenerated__anon1());
    $.getInterceptor$JSArray(__t).addAll$1(__t, [$.Text_Text("\n      "), __footer, $.Text_Text("\n    ")]);
  },
  is$Function: true
};

$$.init_autogenerated__anon = {"": "Closure;",
  call$0: function() {
    return $.app().get$remaining();
  },
  is$Function: true
};

$$.init_autogenerated__anon0 = {"": "Closure;",
  call$0: function() {
    return $.gt($.app().get$doneCount(), 0);
  },
  is$Function: true
};

$$.init_autogenerated__anon1 = {"": "Closure;",
  call$1: function(__t) {
    var __clearCompleted, __binding6, t1;
    __clearCompleted = $.Element_Element$html("<button id=\"clear-completed\"></button>");
    __binding6 = __t.contentBind$1(new $.init_autogenerated___anon());
    t1 = __clearCompleted.get$nodes();
    $.getInterceptor$JSArray(t1).addAll$1(t1, [$.Text_Text("\n            Clear completed ("), __binding6, $.Text_Text(")\n          ")]);
    __t.listen$2(__clearCompleted.get$on().get$click(), new $.init_autogenerated___anon0());
    $.getInterceptor$JSArray(__t).addAll$1(__t, [$.Text_Text("\n          "), __clearCompleted, $.Text_Text("\n        ")]);
  },
  is$Function: true
};

$$.init_autogenerated___anon = {"": "Closure;",
  call$0: function() {
    return $.app().get$doneCount();
  },
  is$Function: true
};

$$.init_autogenerated___anon0 = {"": "Closure;",
  call$1: function($$event) {
    $.app().clearDone$0();
  },
  is$Function: true
};

$$.main_updateFilters = {"": "Closure;",
  call$1: function(e) {
    var t1 = !$.eqB($.window().get$location().get$hash(), "#/completed");
    $.get$viewModel().set$showIncomplete(t1);
    t1 = !$.eqB($.window().get$location().get$hash(), "#/active");
    $.get$viewModel().set$showDone(t1);
    $.dispatch();
  },
  is$Function: true
};

$$.Maps__emitMap_anon = {"": "Closure;box_0,result_1,visiting_2",
  call$2: function(k, v) {
    var t1, t2;
    t1 = this.box_0;
    if (t1.first_0 !== true) {
      t2 = this.result_1;
      $.getInterceptor$JSArray(t2).add$1(t2, ", ");
    }
    t1.first_0 = false;
    t1 = this.result_1;
    t2 = this.visiting_2;
    $.Collections__emitObject(k, t1, t2);
    $.getInterceptor$JSArray(t1).add$1(t1, ": ");
    $.Collections__emitObject(v, t1, t2);
  },
  is$Function: true
};

$$._LinkedHashMapImpl_forEach_anon = {"": "Closure;f_0",
  call$1: function(entry) {
    this.f_0.call$2(entry.get$key(), entry.get$value());
  },
  is$Function: true
};

$$.Template_remove_anon = {"": "Closure;",
  call$1: function(t) {
    return t.remove$0();
  },
  is$Function: true
};

$$.NoSuchMethodError_toString_anon = {"": "Closure;box_0",
  call$2: function(key, value) {
    var t1, t2;
    t1 = this.box_0;
    if ($.gtB(t1.i_1, 0)) {
      t2 = t1.sb_0;
      $.getInterceptor$JSArray(t2).add$1(t2, ", ");
    }
    t2 = t1.sb_0;
    $.getInterceptor$JSArray(t2).add$1(t2, key);
    t2 = t1.sb_0;
    $.getInterceptor$JSArray(t2).add$1(t2, ": ");
    t2 = t1.sb_0;
    $.getInterceptor$JSArray(t2).add$1(t2, $.Error_safeToString(value));
    t1.i_1 = $.add(t1.i_1, 1);
  },
  is$Function: true
};

$$.Template_insert_anon = {"": "Closure;",
  call$1: function(t) {
    return t.insert$0();
  },
  is$Function: true
};

$$.Template_create_anon = {"": "Closure;",
  call$1: function(t) {
    return t.create$0();
  },
  is$Function: true
};

$$.ConditionalTemplate_insert_anon = {"": "Closure;this_0",
  call$1: function(e) {
    var t1, t2;
    t1 = this.this_0;
    t2 = t1.get$isVisible() === true;
    if (!t2 && e.get$newValue() === true) {
      t1.bodySetup$1(t1);
      $.PlaceholderTemplate.prototype.insert$0.call(t1);
      t1.set$isVisible(true);
    } else if (t2 && e.get$newValue() !== true) {
      $.PlaceholderTemplate.prototype.remove$0.call(t1);
      t1.set$isVisible(false);
    }
  },
  is$Function: true
};

$$.watch_anon = {"": "Closure;",
  call$0: function() {
  },
  is$Function: true
};

$$.watch_anon0 = {"": "Closure;target_0",
  call$0: function() {
    return this.target_0;
  },
  is$Function: true
};

$$.watch_anon1 = {"": "Closure;watcher_1",
  call$0: function() {
    return $._unregister(this.watcher_1);
  },
  is$Function: true
};

$$.LoopTemplateInAttribute_insert_anon = {"": "Closure;this_0",
  call$1: function(e) {
    var t1, t2;
    t1 = this.this_0;
    $.Template.prototype.remove$0.call(t1);
    t2 = t1.get$node().get$nodes();
    $.getInterceptor$JSArray(t2).clear$0(t2);
    t2 = t1.get$nodes();
    $.getInterceptor$JSArray(t2).clear$0(t2);
    for (t2 = e.get$newValue(), t2 = $.getInterceptor$JSArray(t2).get$iterator(t2); t2.moveNext$0() === true;)
      t1.iterSetup$2(t2.get$current(), t1);
    $.Template.prototype.create$0.call(t1);
    t2 = t1.get$node().get$nodes();
    $.getInterceptor$JSArray(t2).addAll$1(t2, t1.get$nodes());
    $.Template.prototype.insert$0.call(t1);
  },
  is$Function: true
};

$$.LoopTemplate_insert_anon = {"": "Closure;this_0",
  call$1: function(e) {
    var t1, t2;
    t1 = this.this_0;
    $.PlaceholderTemplate.prototype.remove$0.call(t1);
    for (t2 = e.get$newValue(), t2 = $.getInterceptor$JSArray(t2).get$iterator(t2); t2.moveNext$0() === true;)
      t1.iterSetup$2(t2.get$current(), t1);
    $.PlaceholderTemplate.prototype.insert$0.call(t1);
  },
  is$Function: true
};

$$.DomPropertyBinding_insert_anon = {"": "Closure;this_0",
  call$1: function(e) {
    var t1, t2, t3;
    t1 = this.this_0;
    t2 = t1.get$isUrl() === true;
    t3 = e.get$newValue();
    t1.setter$1(t2 ? $.sanitizeUri(t3) : t3);
  },
  is$Function: true
};

$$.Uri_hashCode_combine = {"": "Closure;",
  call$2: function(part, current) {
    return $.and($.add($.mul(current, 31), $.getInterceptor(part).get$hashCode(part)), 1073741823);
  },
  is$Function: true
};

$$.Template_listen_anon = {"": "Closure;listener_0",
  call$1: function(e) {
    this.listener_0.call$1(e);
    $.dispatch();
  },
  is$Function: true
};

$$.invokeClosure_anon = {"": "Closure;closure_0",
  call$0: function() {
    return this.closure_0.call$0();
  },
  is$Function: true
};

$$.invokeClosure_anon0 = {"": "Closure;closure_1,arg1_2",
  call$0: function() {
    return this.closure_1.call$1(this.arg1_2);
  },
  is$Function: true
};

$$.invokeClosure_anon1 = {"": "Closure;closure_3,arg1_4,arg2_5",
  call$0: function() {
    return this.closure_3.call$2(this.arg1_4, this.arg2_5);
  },
  is$Function: true
};

$$.RouterOptions_inserted_anon = {"": "Closure;",
  call$0: function() {
    return $.window().get$location().get$hash();
  },
  is$Function: true
};

$$.RouterOptions_inserted_anon0 = {"": "Closure;anchors_0",
  call$1: function(e) {
    var hash, t1, t2;
    hash = e.get$newValue();
    if (typeof hash !== "string")
      return this.call$1$bailout(1, hash);
    if (hash === "")
      hash = "#/";
    for (t1 = this.anchors_0, t1 = $.getInterceptor$JSArray(t1).get$iterator(t1); t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      $.updateCssClass(t2, $.eq(t2.get$hash(), hash), "selected");
    }
  },
  call$1$bailout: function(state0, hash) {
    var t1, t2;
    if ($.eqB(hash, ""))
      hash = "#/";
    for (t1 = this.anchors_0, t1 = $.getInterceptor$JSArray(t1).get$iterator(t1); t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      $.updateCssClass(t2, $.eq(t2.get$hash(), hash), "selected");
    }
  },
  is$Function: true
};

$$.updateCssClass_anon = {"": "Closure;",
  call$1: function(e) {
    return !(e == null) && !$.eqB(e, "");
  },
  is$Function: true
};

$$.updateCssClass_anon0 = {"": "Closure;",
  call$1: function(e) {
    return !(e == null) && !$.eqB(e, "");
  },
  is$Function: true
};

$$.CssClassSet_clear_anon = {"": "Closure;",
  call$1: function(s) {
    return $.getInterceptor$JSArray(s).clear$0(s);
  },
  is$Function: true
};

$$._HashSetImpl_forEach_anon = {"": "Closure;f_0",
  call$2: function(key, value) {
    this.f_0.call$1(key);
  },
  is$Function: true
};

$$.CssClassSet_removeAll_anon = {"": "Closure;iterable_0",
  call$1: function(s) {
    return s.removeAll$1(this.iterable_0);
  },
  is$Function: true
};

$$.CssClassSet_addAll_anon = {"": "Closure;iterable_0",
  call$1: function(s) {
    return $.getInterceptor$JSArray(s).addAll$1(s, this.iterable_0);
  },
  is$Function: true
};

$$.CssClassSet_add_anon = {"": "Closure;value_0",
  call$1: function(s) {
    return $.getInterceptor$JSArray(s).add$1(s, this.value_0);
  },
  is$Function: true
};

$$.ConstantMap_forEach_anon = {"": "Closure;this_0,f_1",
  call$1: function(key) {
    var t1, t2;
    t1 = this.f_1;
    t2 = this.this_0;
    return t1.call$2(key, $.getInterceptor$JSStringJSArray(t2).operator$index$1(t2, key));
  },
  is$Function: true
};

$$.FilteredElementList__filtered_anon = {"": "Closure;",
  call$1: function(n) {
    return typeof n === "object" && n !== null && n.is$Element();
  },
  is$Function: true
};

$$.FilteredElementList_removeRange_anon = {"": "Closure;",
  call$1: function(el) {
    return el.remove$0();
  },
  is$Function: true
};

$$.Template_contentBind_anon = {"": "Closure;exp_1",
  call$0: function() {
    return $.S(this.exp_1.call$0());
  },
  is$Function: true
};

$$.Template_contentBind_anon0 = {"": "Closure;box_0,exp_2",
  call$1: function(e) {
    var t1, t2;
    t1 = this.exp_2.call$0();
    t2 = this.box_0;
    t2.bindNode_0 = $.updateBinding(t1, t2.bindNode_0, e.get$newValue());
  },
  is$Function: true
};

$$.app_anon = {"": "Closure;",
  call$0: function() {
    return $.objectory0().registerClass$2("Todo", new $.app__anon0());
  },
  is$Function: true
};

$$.app__anon0 = {"": "Closure;",
  call$0: function() {
    return $.Todo$("");
  },
  is$Function: true
};

$$.app_anon0 = {"": "Closure;",
  call$1: function(_) {
    $.objectory0().find$1($.$$Todo()).then$1(new $.app__anon());
  },
  is$Function: true
};

$$.app__anon = {"": "Closure;",
  call$1: function(todos) {
    $.app().resetTodos$1(todos);
  },
  is$Function: true
};

$$.Objectory_initDomainModel_anon = {"": "Closure;this_0,res_1",
  call$1: function(_) {
    var t1, t2;
    t1 = this.this_0.get$dropCollectionsOnStartup() === true;
    t2 = this.res_1;
    if (t1)
      $.objectory0().dropCollections$0().then$1(new $.Objectory_initDomainModel__anon(t2));
    else
      t2.complete$1(true);
  },
  is$Function: true
};

$$.Objectory_initDomainModel__anon = {"": "Closure;res_2",
  call$1: function(_) {
    return this.res_2.complete$1(true);
  },
  is$Function: true
};

$$.ObjectoryWebsocketBrowserImpl_setupWebsocket_anon = {"": "Closure;this_0,completer_1",
  call$1: function(e) {
    this.this_0.set$isConnected(true);
    this.completer_1.complete$1(true);
  },
  is$Function: true
};

$$.ObjectoryWebsocketBrowserImpl_setupWebsocket_anon0 = {"": "Closure;this_2",
  call$1: function(e) {
    this.this_2.set$isConnected(false);
  },
  is$Function: true
};

$$.ObjectoryWebsocketBrowserImpl_setupWebsocket_anon1 = {"": "Closure;this_3",
  call$1: function(m) {
    var message, t1, receivedRequestId, completer;
    message = $.ObjectoryMessage$fromList($.JSON_EXT_parse(m.get$data()));
    t1 = message.command;
    receivedRequestId = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, "requestId");
    if (receivedRequestId == null)
      return;
    t1 = this.this_3.get$awaitedRequests();
    completer = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, receivedRequestId);
    if (!(completer == null))
      completer.complete$1(message.content);
  },
  is$Function: true
};

$$._FutureImpl__handleValue_anon = {"": "Closure;thenFuture_0,value_1",
  call$1: function(_) {
    this.thenFuture_0._sendValue$1(this.value_1);
  },
  is$Function: true
};

$$.anon = {"": "Closure;this_0,callback_1",
  call$0: function() {
    return this.callback_1.call$1(this.this_0);
  },
  is$Function: true
};

$$.anon0 = {"": "Closure;this_2,callback_3",
  call$0: function() {
    this.callback_3.call$1(this.this_2);
  },
  is$Function: true
};

$$.AsyncError_throwDelayed_reportError = {"": "Closure;this_0",
  call$0: function() {
    var t1 = this.this_0;
    $.print("Uncaught Error: " + $.S(t1.get$error()));
    t1 = t1.get$stackTrace();
    if (!(t1 == null))
      $.print("Stack Trace:\n" + $.S(t1) + "\n");
  },
  is$Function: true
};

$$.AsyncError_throwDelayed_anon = {"": "Closure;this_1,reportError_2",
  call$1: function(_) {
    this.reportError_2.call$0();
    throw $.$$throw(this.this_1.get$error());
  },
  is$Function: true
};

$$._FutureImpl__handleError_anon = {"": "Closure;error_0,errorFuture_1",
  call$1: function(_) {
    this.errorFuture_1._sendError$1(this.error_0);
  },
  is$Function: true
};

$$.convertNativeToDart_AcceptStructuredClone_findSlot = {"": "Closure;values_0,copies_1",
  call$1: function(value) {
    var t1, t3, length$, i, t2;
    t1 = this.values_0;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
      return this.call$1$bailout1(1, value, t1);
    t3 = $.getInterceptor$JSStringJSArray(t1);
    length$ = t1.length;
    for (i = 0; i < length$; ++i) {
      t2 = t1[i];
      if (t2 == null ? value == null : t2 === value)
        return i;
    }
    t3.add$1(t1, value);
    t1 = this.copies_1;
    $.getInterceptor$JSArray(t1).add$1(t1, null);
    return length$;
  },
  call$1$bailout1: function(state0, env0, env1, env2, env3) {
    switch (state0) {
      case 1:
        t1 = env1;
        value = env0;
        break;
      case 2:
        length$ = env3;
        t3 = env2;
        t1 = env1;
        value = env0;
        break;
    }
    switch (state0) {
      case 0:
        t1 = this.values_0;
      case 1:
        state0 = 0;
        t3 = $.getInterceptor$JSStringJSArray(t1);
        length$ = t3.get$length(t1);
      case 2:
        var t1, value, t3, length$, i, t2;
        state0 = 0;
        for (i = 0; $.ltB(i, length$); ++i) {
          t2 = t3.operator$index$1(t1, i);
          if (t2 == null ? value == null : t2 === value)
            return i;
        }
        $.getInterceptor$JSArray(t1).add$1(t1, value);
        t1 = this.copies_1;
        $.getInterceptor$JSArray(t1).add$1(t1, null);
        return length$;
    }
  },
  is$Function: true
};

$$.convertNativeToDart_AcceptStructuredClone_readSlot = {"": "Closure;copies_2",
  call$1: function(i) {
    var t1 = this.copies_2;
    return $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, i);
  },
  is$Function: true
};

$$.convertNativeToDart_AcceptStructuredClone_writeSlot = {"": "Closure;copies_3",
  call$2: function(i, x) {
    $.indexSet(this.copies_3, i, x);
  },
  is$Function: true
};

$$.convertNativeToDart_AcceptStructuredClone_walk = {"": "Closure;mustCopy_4,findSlot_5,readSlot_6,writeSlot_7",
  call$1: function(e) {
    var slot, copy, t1, t2, t3, length$, i;
    if (typeof e !== "object" || e === null || (e.constructor !== Array || !!e.immutable$list) && !e.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout0(1, e);
    if (e instanceof Date)
      throw $.$$throw($.UnimplementedError$("structured clone of Date"));
    if (e instanceof RegExp)
      throw $.$$throw($.UnimplementedError$("structured clone of RegExp"));
    if (Object.getPrototypeOf(e) === Object.prototype) {
      slot = this.findSlot_5.call$1(e);
      copy = this.readSlot_6.call$1(slot);
      if (!(copy == null))
        return copy;
      copy = $.makeLiteralMap([]);
      if (typeof copy !== "object" || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
        return this.call$1$bailout0(2, e, copy, slot);
      this.writeSlot_7.call$2(slot, copy);
      for (t1 = $.CONSTANT0.get$iterator(Object.keys(e)); t1.moveNext$0() === true;) {
        t2 = t1.get$current();
        t3 = this.call$1(e[t2]);
        if (t2 !== (t2 | 0))
          throw $.iae(t2);
        if (t2 < 0 || t2 >= copy.length)
          throw $.ioore(t2);
        copy[t2] = t3;
      }
      return copy;
    }
    if (e instanceof Array) {
      slot = this.findSlot_5.call$1(e);
      copy = this.readSlot_6.call$1(slot);
      if (!(copy == null))
        return copy;
      length$ = e.length;
      if (this.mustCopy_4 === true)
        copy = new Array(length$);
      else
        copy = e;
      if (typeof copy !== "object" || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
        return this.call$1$bailout0(4, e, $.CONSTANT0, length$, copy, slot);
      this.writeSlot_7.call$2(slot, copy);
      for (i = 0; i < length$; ++i) {
        if (i >= e.length)
          throw $.ioore(i);
        t1 = this.call$1(e[i]);
        if (i >= copy.length)
          throw $.ioore(i);
        copy[i] = t1;
      }
      return copy;
    }
    return e;
  },
  call$1$bailout0: function(state0, env0, env1, env2, env3, env4) {
    switch (state0) {
      case 1:
        e = env0;
        break;
      case 2:
        slot = env2;
        copy = env1;
        e = env0;
        break;
      case 3:
        slot = env3;
        length$ = env2;
        t1 = env1;
        e = env0;
        break;
      case 4:
        slot = env4;
        copy = env3;
        length$ = env2;
        t1 = env1;
        e = env0;
        break;
    }
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        if (e == null)
          return e;
        if (typeof e === "boolean")
          return e;
        if (typeof e === "number")
          return e;
        if (typeof e === "string")
          return e;
        if (e instanceof Date)
          throw $.$$throw($.UnimplementedError$("structured clone of Date"));
        if (e instanceof RegExp)
          throw $.$$throw($.UnimplementedError$("structured clone of RegExp"));
      case 2:
        if (state0 === 2 || state0 === 0 && Object.getPrototypeOf(e) === Object.prototype)
          switch (state0) {
            case 0:
              slot = this.findSlot_5.call$1(e);
              copy = this.readSlot_6.call$1(slot);
              if (!(copy == null))
                return copy;
              copy = $.makeLiteralMap([]);
            case 2:
              state0 = 0;
              this.writeSlot_7.call$2(slot, copy);
              for (t1 = $.CONSTANT0.get$iterator(Object.keys(e)); t1.moveNext$0() === true;) {
                t2 = t1.get$current();
                $.indexSet(copy, t2, this.call$1(e[t2]));
              }
              return copy;
          }
      default:
        var e, slot, copy, t1, t2, length$, i;
        if (state0 === 4 || state0 === 3 || state0 === 0 && e instanceof Array)
          switch (state0) {
            case 0:
              slot = this.findSlot_5.call$1(e);
              copy = this.readSlot_6.call$1(slot);
              if (!(copy == null))
                return copy;
              t1 = $.getInterceptor$JSStringJSArray(e);
              length$ = t1.get$length(e);
            case 3:
              state0 = 0;
              copy = this.mustCopy_4 === true ? new Array(length$) : e;
            case 4:
              state0 = 0;
              this.writeSlot_7.call$2(slot, copy);
              for (i = 0; $.ltB(i, length$); ++i)
                $.indexSet(copy, i, this.call$1(t1.operator$index$1(e, i)));
              return copy;
          }
        return e;
    }
  },
  is$Function: true
};

$$._DateImpl_toString_fourDigits = {"": "Closure;",
  call$1: function(n) {
    var absN, sign;
    absN = $.getInterceptor$JSNumber(n).abs$0(n);
    sign = $.ltB(n, 0) ? "-" : "";
    if ($.geB(absN, 1000))
      return $.S(n);
    if ($.geB(absN, 100))
      return sign + "0" + $.S(absN);
    if ($.geB(absN, 10))
      return sign + "00" + $.S(absN);
    return sign + "000" + $.S(absN);
  },
  is$Function: true
};

$$._DateImpl_toString_threeDigits = {"": "Closure;",
  call$1: function(n) {
    if ($.geB(n, 100))
      return $.S(n);
    if ($.geB(n, 10))
      return "0" + $.S(n);
    return "00" + $.S(n);
  },
  is$Function: true
};

$$._DateImpl_toString_twoDigits = {"": "Closure;",
  call$1: function(n) {
    if ($.geB(n, 10))
      return $.S(n);
    return "0" + $.S(n);
  },
  is$Function: true
};

$$.ObjectoryWebsocketBrowserImpl_dropCollections_anon = {"": "Closure;this_0",
  call$1: function(collection) {
    return this.this_0._postMessage$2($.makeLiteralMap(["command", "dropCollection", "collection", collection]), $.makeLiteralMap([]));
  },
  is$Function: true
};

$$._FutureImpl__FutureImpl$wait_anon = {"": "Closure;box_0,completer_1,values_2,pos_3",
  call$1: function(value) {
    var t1, t2, remaining;
    t1 = this.values_2;
    $.indexSet(t1, this.pos_3, value);
    t2 = this.box_0;
    remaining = $.sub(t2.remaining_0, 1);
    t2.remaining_0 = remaining;
    if ($.eqB(remaining, 0))
      this.completer_1.complete$1(t1);
  },
  is$Function: true
};

$$._FutureImpl__FutureImpl$wait_anon0 = {"": "Closure;box_0,completer_4",
  call$1: function(error) {
    var t1 = this.box_0;
    if (t1.completed_1 !== true)
      this.completer_4.completeError$2(error.get$error(), error.get$stackTrace());
    t1.completed_1 = true;
  },
  is$Function: true
};

$$._CompleterImpl_completeError_anon = {"": "Closure;box_0,this_1",
  call$1: function(_) {
    this.this_1.get$future()._setError$1(this.box_0.asyncError_0);
  },
  is$Function: true
};

$$.Objectory_getCollections_anon = {"": "Closure;result_0",
  call$2: function(key, value) {
    var obj, t1;
    obj = value.call$0();
    if (typeof obj === "object" && obj !== null && !!obj.is$PersistentObject) {
      t1 = this.result_0;
      $.getInterceptor$JSArray(t1).add$1(t1, key);
    }
  },
  is$Function: true
};

$$._JsonStringifier_stringifyJsonValue_anon = {"": "Closure;box_0,this_1",
  call$2: function(key, value) {
    var t1, t2, t3;
    t1 = this.box_0;
    t2 = t1.first_0 !== true;
    t3 = this.this_1;
    if (t2) {
      t2 = t3.get$sb();
      $.getInterceptor$JSArray(t2).add$1(t2, ",\"");
    } else {
      t2 = t3.get$sb();
      $.getInterceptor$JSArray(t2).add$1(t2, "\"");
    }
    t2 = this.this_1;
    $._JsonStringifier_escape(t2.get$sb(), key);
    t3 = t2.get$sb();
    $.getInterceptor$JSArray(t3).add$1(t3, "\":");
    t2.stringifyValue$1(value);
    t1.first_0 = false;
  },
  is$Function: true
};

$$.AppModel_clearDone_anon = {"": "Closure;",
  call$1: function(t) {
    return t.get$done() !== true;
  },
  is$Function: true
};

$$.ObjectoryWebsocketBrowserImpl_find_anon = {"": "Closure;selector_0,completer_1,result_2",
  call$1: function(list) {
    var t1, t2, t3, t4, t5;
    for (t1 = $.getInterceptor$JSArray(list).get$iterator(list), t2 = this.selector_0, t3 = this.result_2, t4 = $.getInterceptor$JSArray(t3); t1.moveNext$0() === true;) {
      t5 = t1.get$current();
      t4.add$1(t3, $.objectory0().map2Object$2(t2.get$className(), t5));
    }
    this.completer_1.complete$1(t3);
  },
  is$Function: true
};

$$.ObjectId_createId_getOctet = {"": "Closure;",
  call$1: function(value) {
    var res, res0;
    res = $.getInterceptor$JSNumber(value).toRadixString$1(value, 16);
    if (typeof res !== "string")
      return this.call$1$bailout2(1, res);
    for (; res.length < 8; res = res0)
      res0 = "0" + res;
    return res;
  },
  call$1$bailout2: function(state0, res) {
    var res0;
    for (; $.ltB($.getInterceptor$JSStringJSArray(res).get$length(res), 8); res = res0)
      res0 = "0" + $.S(res);
    return res;
  },
  is$Function: true
};

$$.BsonBinary_reverse_swap = {"": "Closure;this_0",
  call$2: function(x, y) {
    var t1, t2, t, t3, t4;
    t1 = this.this_0;
    t2 = t1.get$byteList();
    t = $.getInterceptor$JSStringJSArray(t2).operator$index$1(t2, $.add(x, t1.get$offset()));
    t2 = t1.get$byteList();
    t3 = $.add(x, t1.get$offset());
    t4 = t1.get$byteList();
    $.indexSet(t2, t3, $.getInterceptor$JSStringJSArray(t4).operator$index$1(t4, $.add(y, t1.get$offset())));
    $.indexSet(t1.get$byteList(), $.add(y, t1.get$offset()), t);
  },
  is$Function: true
};

$$.AppModel_doneCount_anon = {"": "Closure;box_0",
  call$1: function(t) {
    var t1;
    if (t.get$done() === true) {
      t1 = this.box_0;
      t1.res_0 = $.add(t1.res_0, 1);
    }
  },
  is$Function: true
};

$$.TodoRow_created_autogenerated_anon = {"": "Closure;this_0",
  call$1: function($$event) {
    var t1, t2;
    t1 = this.this_0;
    t2 = t1.get$__e9().get$checked();
    t1.get$todo().set$done(t2);
  },
  is$Function: true
};

$$.TodoRow_created_autogenerated_anon0 = {"": "Closure;this_1",
  call$0: function() {
    return this.this_1.get$todo().get$done();
  },
  is$Function: true
};

$$.TodoRow_created_autogenerated_anon1 = {"": "Closure;this_2",
  call$1: function(e) {
    this.this_2.get$__e9().set$checked(e);
  },
  is$Function: true
};

$$.TodoRow_created_autogenerated_anon2 = {"": "Closure;this_3",
  call$0: function() {
    return this.this_3.get$todo().get$task();
  },
  is$Function: true
};

$$.TodoRow_created_autogenerated_anon3 = {"": "Closure;this_4",
  call$1: function(e) {
    this.this_4.get$__label().get$xtag().set$value(e);
  },
  is$Function: true
};

$$.TodoRow_created_autogenerated_anon4 = {"": "Closure;this_5",
  call$0: function() {
    return this.this_5.get$__label().get$xtag().get$value();
  },
  is$Function: true
};

$$.TodoRow_created_autogenerated_anon5 = {"": "Closure;this_6",
  call$1: function(__e) {
    this.this_6.get$todo().set$task(__e);
  },
  is$Function: true
};

$$.TodoRow_created_autogenerated_anon6 = {"": "Closure;this_7",
  call$1: function($$event) {
    $.app().removeTodo$1(this.this_7.get$todo());
  },
  is$Function: true
};

$$.TodoRow_created_autogenerated_anon7 = {"": "Closure;this_8",
  call$0: function() {
    return this.this_8.get$_editingClass();
  },
  is$Function: true
};

$$.TodoRow_created_autogenerated_anon8 = {"": "Closure;this_9",
  call$0: function() {
    return this.this_9.get$_completedClass();
  },
  is$Function: true
};

$$.bindCssClasses_anon = {"": "Closure;elem_0",
  call$1: function(e) {
    var t1 = this.elem_0;
    $.updateCssClass(t1, false, e.get$oldValue());
    $.updateCssClass(t1, true, e.get$newValue());
  },
  is$Function: true
};

$$.EditableLabel_created_autogenerated_anon = {"": "Closure;this_0",
  call$0: function() {
    return this.this_0.get$editing() !== true;
  },
  is$Function: true
};

$$.EditableLabel_created_autogenerated_anon0 = {"": "Closure;this_1",
  call$1: function(__t) {
    var __e13, t1, __binding12, t2;
    __e13 = $.Element_Element$html("<label class=\"edit-label\"></label>");
    t1 = this.this_1;
    __binding12 = __t.contentBind$1(new $.EditableLabel_created_autogenerated__anon3(t1));
    t2 = __e13.get$nodes();
    $.getInterceptor$JSArray(t2).add$1(t2, __binding12);
    __t.listen$2(__e13.get$on().get$doubleClick(), new $.EditableLabel_created_autogenerated__anon4(t1));
    $.getInterceptor$JSArray(__t).addAll$1(__t, [$.Text_Text("\n      "), __e13, $.Text_Text("\n    ")]);
  },
  is$Function: true
};

$$.EditableLabel_created_autogenerated__anon3 = {"": "Closure;this_2",
  call$0: function() {
    return this.this_2.get$value();
  },
  is$Function: true
};

$$.EditableLabel_created_autogenerated__anon4 = {"": "Closure;this_3",
  call$1: function($$event) {
    this.this_3.edit$0();
  },
  is$Function: true
};

$$.EditableLabel_created_autogenerated_anon1 = {"": "Closure;this_4",
  call$0: function() {
    return this.this_4.get$editing();
  },
  is$Function: true
};

$$.EditableLabel_created_autogenerated_anon2 = {"": "Closure;this_5",
  call$1: function(__t) {
    var __e15, __edit, t1, t2;
    __e15 = $.Element_Element$html("<form>\n        <input id=\"edit\" class=\"edit \">\n      </form>");
    __edit = __e15.query$1("#edit");
    t1 = __edit.get$on().get$blur();
    t2 = this.this_5;
    __t.listen$2(t1, new $.EditableLabel_created_autogenerated__anon(t2));
    __t.listen$2(__edit.get$on().get$keyUp(), new $.EditableLabel_created_autogenerated__anon0(t2));
    __t.bindClass$2(__edit, new $.EditableLabel_created_autogenerated__anon1(t2));
    __t.listen$2(__e15.get$on().get$submit(), new $.EditableLabel_created_autogenerated__anon2(t2));
    $.getInterceptor$JSArray(__t).addAll$1(__t, [$.Text_Text("\n      "), __e15, $.Text_Text("\n    ")]);
  },
  is$Function: true
};

$$.EditableLabel_created_autogenerated__anon = {"": "Closure;this_6",
  call$1: function($$event) {
    this.this_6.update$1($$event);
  },
  is$Function: true
};

$$.EditableLabel_created_autogenerated__anon0 = {"": "Closure;this_7",
  call$1: function($$event) {
    if ($.eqB($$event.get$keyCode(), 27))
      this.this_7.set$editing(false);
  },
  is$Function: true
};

$$.EditableLabel_created_autogenerated__anon1 = {"": "Closure;this_8",
  call$0: function() {
    return this.this_8.get$editing() === true ? "editing" : "";
  },
  is$Function: true
};

$$.EditableLabel_created_autogenerated__anon2 = {"": "Closure;this_9",
  call$1: function($$event) {
    this.this_9.update$1($$event);
  },
  is$Function: true
};

$$.AppModel_allChecked_anon = {"": "Closure;",
  call$1: function(t) {
    return t.get$done();
  },
  is$Function: true
};

$$.AppModel_allChecked_anon0 = {"": "Closure;value_0",
  call$1: function(t) {
    t.set$done(this.value_0);
  },
  is$Function: true
};

$$.IsolateNatives__processWorkerMessage_function = {"": "Closure;entryPoint_0,replyTo_1",
  call$0: function() {
    $.IsolateNatives__startIsolate(this.entryPoint_0, this.replyTo_1);
  },
  is$Function: true
};

$$._BaseSendPort_call_anon = {"": "Closure;completer_0,port_1",
  call$2: function(value, ignoreReplyTo) {
    var t1, t2;
    this.port_1.close$0();
    t1 = typeof value === "object" && value !== null && !!value.is$Exception;
    t2 = this.completer_0;
    if (t1)
      t2.completeError$1(value);
    else
      t2.complete$1(value);
  },
  is$Function: true
};

$$._WorkerSendPort_send_anon = {"": "Closure;this_0,message_1,replyTo_2",
  call$0: function() {
    var t1, t2, workerMessage, t3;
    t1 = this.this_0;
    t2 = this.replyTo_2;
    t1._checkReplyTo$1(t2);
    workerMessage = $._serializeMessage($.makeLiteralMap(["command", "message", "port", t1, "msg", this.message_1, "replyTo", t2]));
    t2 = $._globalState().get$isWorker() === true;
    t3 = $._globalState;
    if (t2)
      t3().get$mainManager().postMessage$1(workerMessage);
    else {
      t2 = t3().get$managers();
      $.getInterceptor$JSStringJSArray(t2).operator$index$1(t2, t1.get$_workerId()).postMessage$1(workerMessage);
    }
  },
  is$Function: true
};

$$._waitForPendingPorts_anon = {"": "Closure;callback_0",
  call$1: function(_) {
    return this.callback_0.call$0();
  },
  is$Function: true
};

$$._PendingSendPortFinder_visitMap_anon = {"": "Closure;this_0",
  call$1: function(e) {
    return this.this_0._dispatch$1(e);
  },
  is$Function: true
};

$$.Storage_values_anon = {"": "Closure;values_0",
  call$2: function(k, v) {
    var t1 = this.values_0;
    return $.getInterceptor$JSArray(t1).add$1(t1, v);
  },
  is$Function: true
};

$$._LinkedHashMapImpl_values_anon = {"": "Closure;",
  call$1: function(entry) {
    return entry.get$value();
  },
  is$Function: true
};

$$.ConstantMap_values_anon = {"": "Closure;this_0",
  call$1: function(key) {
    var t1 = this.this_0;
    return $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, key);
  },
  is$Function: true
};

$$._PendingSendPortFinder_visitList_anon = {"": "Closure;this_0",
  call$1: function(e) {
    return this.this_0._dispatch$1(e);
  },
  is$Function: true
};

$$._NativeJsSendPort_send_anon = {"": "Closure;this_1,message_2,replyTo_3",
  call$0: function() {
    var t1, t2, t3, t4, isolate, shouldSerialize, msg;
    t1 = {};
    t2 = this.this_1;
    t3 = this.replyTo_3;
    t2._checkReplyTo$1(t3);
    t4 = $._globalState().get$isolates();
    isolate = $.getInterceptor$JSStringJSArray(t4).operator$index$1(t4, t2.get$_isolateId());
    if (isolate == null)
      return;
    if (t2.get$_receivePort().get$_liblib7$_callback() == null)
      return;
    shouldSerialize = !($._globalState().get$currentContext() == null) && !$.eqB($._globalState().get$currentContext().get$id(), t2.get$_isolateId());
    msg = this.message_2;
    t1.msg_0 = msg;
    t1.reply_1 = t3;
    if (shouldSerialize) {
      t1.msg_0 = $._serializeMessage(t1.msg_0);
      t1.reply_1 = $._serializeMessage(t1.reply_1);
    }
    $._globalState().get$topEventLoop().enqueue$3(isolate, new $._NativeJsSendPort_send__anon(t1, t2, shouldSerialize), "receive " + $.S(msg));
  },
  is$Function: true
};

$$._NativeJsSendPort_send__anon = {"": "Closure;box_0,this_4,shouldSerialize_5",
  call$0: function() {
    var t1, t2;
    t1 = this.this_4;
    if (!(t1.get$_receivePort().get$_liblib7$_callback() == null)) {
      if (this.shouldSerialize_5 === true) {
        t2 = this.box_0;
        t2.msg_0 = $._deserializeMessage(t2.msg_0);
        t2.reply_1 = $._deserializeMessage(t2.reply_1);
      }
      t1 = t1.get$_receivePort();
      t2 = this.box_0;
      t1._liblib7$_callback$2(t2.msg_0, t2.reply_1);
    }
  },
  is$Function: true
};

$$.Storage_keys_anon = {"": "Closure;keys_0",
  call$2: function(k, v) {
    var t1 = this.keys_0;
    return $.getInterceptor$JSArray(t1).add$1(t1, k);
  },
  is$Function: true
};

$$._LinkedHashMapImpl_keys_anon = {"": "Closure;",
  call$1: function(entry) {
    return entry.get$key();
  },
  is$Function: true
};

$$._Copier_visitMap_anon = {"": "Closure;box_0,this_1",
  call$2: function(key, val) {
    var t1, t2;
    t1 = this.box_0.copy_0;
    t2 = this.this_1;
    $.indexSet(t1, t2._dispatch$1(key), t2._dispatch$1(val));
  },
  is$Function: true
};

$$._EventLoop__runHelper_next = {"": "Closure;this_0",
  call$0: function() {
    if (this.this_0.runIteration$0() !== true)
      return;
    $.Timer_Timer(0, new $._EventLoop__runHelper_next_anon(this));
  },
  is$Function: true
};

$$._EventLoop__runHelper_next_anon = {"": "Closure;next_1",
  call$1: function(_) {
    return this.next_1.call$0();
  },
  is$Function: true
};

$$.BoundClosure = {"": "Closure;self,target",
  call$0: function() {
    return this.self[this.target]();
  }
};
$$.BoundClosure0 = {"": "Closure;self,target",
  call$1: function(p0) {
    return this.self[this.target](p0);
  }
};
$$.BoundClosure1 = {"": "Closure;self,target",
  call$2: function(p0, p1) {
    return this.self[this.target](p0, p1);
  },
  call$0: function() {
    return this.call$2(null, null);
  },
  call$1: function(code) {
    return this.call$2(code, null);
  }
};
$$.BoundClosure2 = {"": "Closure;self,target",
  call$3: function(p0, p1, p2) {
    return this.self[this.target](p0, p1, p2);
  },
  call$2: function(url, name$) {
    return this.call$3(url, name$, null);
  }
};
$._ConstantMapKeyIterable$ = function(_map) {
  return new $._ConstantMapKeyIterable(_map);
};

$.Strings__toJsStringArray = function(strings) {
  var length$, i, string;
  if (typeof strings !== "object" || strings === null || (strings.constructor !== Array || !!strings.immutable$list) && !strings.is$JavaScriptIndexingBehavior())
    return $.Strings__toJsStringArray$bailout(1, strings);
  $.checkNull(strings);
  if (!$.isJsArray(strings)) {
    strings = $.List_List$from(strings);
    $.setRuntimeTypeInfo(strings, []);
  }
  length$ = strings.length;
  for (i = 0; i < length$; ++i) {
    if (i >= strings.length)
      throw $.ioore(i);
    string = strings[i];
    if (!(typeof string === "string"))
      throw $.$$throw($.ArgumentError$(string));
  }
  return strings;
};

$.Strings__toJsStringArray$bailout = function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      strings = env0;
      break;
    case 2:
      length$ = env2;
      t1 = env1;
      strings = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      $.checkNull(strings);
      if (!$.isJsArray(strings)) {
        strings = $.List_List$from(strings);
        $.setRuntimeTypeInfo(strings, []);
      }
      t1 = $.getInterceptor$JSStringJSArray(strings);
      length$ = t1.get$length(strings);
    case 2:
      var strings, t1, length$, i, string;
      state0 = 0;
      for (i = 0; $.ltB(i, length$); ++i) {
        string = t1.operator$index$1(strings, i);
        if (!(typeof string === "string"))
          throw $.$$throw($.ArgumentError$(string));
      }
      return strings;
  }
};

$._callInIsolate = function(isolate, function$) {
  isolate.eval$1(function$);
  $._globalState().get$topEventLoop().run$0();
};

$._currentIsolate = function() {
  return $._globalState().get$currentContext();
};

$.startRootIsolate = function(entry) {
  var t1, rootContext;
  t1 = $._Manager$();
  $._globalState0(t1);
  if ($._globalState().get$isWorker() === true)
    return;
  rootContext = $._IsolateContext$();
  $._globalState().set$rootContext(rootContext);
  $._globalState().set$currentContext(rootContext);
  rootContext.eval$1(entry);
  $._globalState().get$topEventLoop().run$0();
};

$._globalState = function() {
  return $globalState;
};

$._globalState0 = function(val) {
  $globalState = val;
};

$._Manager$ = function() {
  var t1 = new $._Manager(0, 0, 1, null, null, null, null, null, null, null, null, null);
  t1._Manager$0();
  return t1;
};

$._IsolateContext$ = function() {
  var t1 = new $._IsolateContext(null, null, null);
  t1._IsolateContext$0();
  return t1;
};

$._EventLoop$ = function() {
  return new $._EventLoop($.Queue_Queue($._IsolateEvent));
};

$._IsolateEvent$ = function(isolate, fn, message) {
  return new $._IsolateEvent(isolate, fn, message);
};

$._MainManagerStub$ = function() {
  return new $._MainManagerStub();
};

$.IsolateNatives_computeThisScript = function() {
  var t1, t2, src;
  for (t1 = $.CONSTANT0.get$iterator(document.getElementsByTagName('script')); t1.moveNext$0() === true;) {
    t2 = t1.get$current();
    src = t2 && t2.src;
    if (!(src == null) && $.getInterceptor$JSString(src).endsWith$1(src, "test_controller.js") !== true && $.RegExp_RegExp("client.dart.js", true, false).hasMatch$1(src) !== true)
      return src;
  }
  return;
};

$.IsolateNatives_computeGlobalThis = function() {
  return function() { return this; }();
};

$.IsolateNatives__processWorkerMessage = function(sender, e) {
  var msg, t1, t2, entryPoint, replyTo;
  msg = $._deserializeMessage(e.data);
  t1 = $.getInterceptor$JSStringJSArray(msg);
  switch (t1.operator$index$1(msg, "command")) {
    case "start":
      t2 = t1.operator$index$1(msg, "id");
      $._globalState().set$currentManagerId(t2);
      entryPoint = $[t1.operator$index$1(msg, "functionName")];
      replyTo = $._deserializeMessage(t1.operator$index$1(msg, "replyTo"));
      $._globalState().get$topEventLoop().enqueue$3($._IsolateContext$(), new $.IsolateNatives__processWorkerMessage_function(entryPoint, replyTo), "worker-start");
      $._globalState().get$topEventLoop().run$0();
      break;
    case "spawn-worker":
      $.IsolateNatives__spawnWorker(t1.operator$index$1(msg, "functionName"), t1.operator$index$1(msg, "uri"), t1.operator$index$1(msg, "replyPort"));
      break;
    case "message":
      if (!(t1.operator$index$1(msg, "port") == null))
        t1.operator$index$1(msg, "port").send$2(t1.operator$index$1(msg, "msg"), t1.operator$index$1(msg, "replyTo"));
      $._globalState().get$topEventLoop().run$0();
      break;
    case "close":
      $.IsolateNatives__log("Closing Worker");
      $._globalState().get$managers().remove$1(sender.get$id());
      sender.terminate$0();
      $._globalState().get$topEventLoop().run$0();
      break;
    case "log":
      $.IsolateNatives__log(t1.operator$index$1(msg, "msg"));
      break;
    case "print":
      if ($._globalState().get$isWorker() === true)
        $._globalState().get$mainManager().postMessage$1($._serializeMessage($.makeLiteralMap(["command", "print", "msg", msg])));
      else
        $.print(t1.operator$index$1(msg, "msg"));
      break;
    case "error":
      throw $.$$throw(t1.operator$index$1(msg, "msg"));
  }
};

$.IsolateNatives__log = function(msg, exception) {
  var t1, trace;
  if ($._globalState().get$isWorker() === true)
    $._globalState().get$mainManager().postMessage$1($._serializeMessage($.makeLiteralMap(["command", "log", "msg", msg])));
  else
    try {
      t1 = msg;
      $.get$globalThis().console.log(t1);
    } catch (exception) {
      $.unwrapException(exception);
      trace = $.getTraceFromException(exception);
      throw $.$$throw($.Exception_Exception(trace));
    }

};

$.IsolateNatives__startIsolate = function(topLevel, replyTo) {
  $.lazyPort = $.ReceivePort_ReceivePort();
  replyTo.send$2("spawned", $.port().toSendPort$0());
  topLevel.call$0();
};

$.IsolateNatives__spawnWorker = function(functionName, uri, replyPort) {
  var worker, t1, workerId;
  if (functionName == null)
    functionName = "main";
  if (uri == null)
    uri = $.get$IsolateNatives_thisScript();
  worker = new Worker(uri);
  worker.set$onmessage(function(e) { $.IsolateNatives__processWorkerMessage.call$2(worker, e); });
  t1 = $._globalState();
  workerId = t1.get$nextManagerId();
  t1.set$nextManagerId($.add(workerId, 1));
  worker.set$id(workerId);
  $.indexSet($._globalState().get$managers(), workerId, worker);
  worker.postMessage$1($._serializeMessage($.makeLiteralMap(["command", "start", "id", workerId, "replyTo", $._serializeMessage(replyPort), "functionName", functionName])));
};

$._NativeJsSendPort$ = function(_receivePort, isolateId) {
  return new $._NativeJsSendPort(_receivePort, isolateId);
};

$._WorkerSendPort$ = function(_workerId, isolateId, _receivePortId) {
  return new $._WorkerSendPort(_workerId, _receivePortId, isolateId);
};

$.ReceivePortImpl$ = function() {
  var t1 = $.ReceivePortImpl__nextFreeId;
  $.ReceivePortImpl__nextFreeId = $.add(t1, 1);
  t1 = new $.ReceivePortImpl(t1, null);
  t1.ReceivePortImpl$0();
  return t1;
};

$._waitForPendingPorts = function(message, callback) {
  var finder = $._PendingSendPortFinder$();
  finder.traverse$1(message);
  $.Future_wait(finder.ports).then$1(new $._waitForPendingPorts_anon(callback));
};

$._PendingSendPortFinder$ = function() {
  var t1 = $._MessageTraverserVisitedMap$();
  t1 = new $._PendingSendPortFinder([], t1);
  t1._PendingSendPortFinder$0();
  return t1;
};

$._serializeMessage = function(message) {
  if ($._globalState().get$needSerialization() === true)
    return $._JsSerializer$().traverse$1(message);
  else
    return $._JsCopier$().traverse$1(message);
};

$._deserializeMessage = function(message) {
  if ($._globalState().get$needSerialization() === true)
    return $._JsDeserializer$().deserialize$1(message);
  else
    return message;
};

$._JsSerializer$ = function() {
  var t1 = new $._JsSerializer(0, $._MessageTraverserVisitedMap$());
  t1._JsSerializer$0();
  return t1;
};

$._JsCopier$ = function() {
  var t1 = new $._JsCopier($._MessageTraverserVisitedMap$());
  t1._JsCopier$0();
  return t1;
};

$._JsDeserializer$ = function() {
  return new $._JsDeserializer(null);
};

$._JsVisitedMap$ = function() {
  return new $._JsVisitedMap(null);
};

$._MessageTraverserVisitedMap$ = function() {
  return new $._MessageTraverserVisitedMap();
};

$.TimerImpl$ = function(milliseconds, callback) {
  var t1 = new $.TimerImpl(true, null);
  t1.TimerImpl$2(milliseconds, callback);
  return t1;
};

$.hasTimer = function() {
  return !($.get$globalThis().setTimeout == null);
};

$._ArrayIterator$ = function(_list, T) {
  var t1 = new $._ArrayIterator(_list, -1, null);
  $.setRuntimeTypeInfo(t1, [T]);
  return t1;
};

$.add = function(a, b) {
  return typeof a === "number" && typeof b === "number" ? a + b : $.add$slow(a, b);
};

$.sub = function(a, b) {
  return typeof a === "number" && typeof b === "number" ? a - b : $.sub$slow(a, b);
};

$.div = function(a, b) {
  return typeof a === "number" && typeof b === "number" ? a / b : $.div$slow(a, b);
};

$.mul = function(a, b) {
  return typeof a === "number" && typeof b === "number" ? a * b : $.mul$slow(a, b);
};

$.gt = function(a, b) {
  return typeof a === "number" && typeof b === "number" ? a > b : $.gt$slow(a, b);
};

$.ge = function(a, b) {
  return typeof a === "number" && typeof b === "number" ? a >= b : $.ge$slow(a, b);
};

$.lt = function(a, b) {
  return typeof a === "number" && typeof b === "number" ? a < b : $.lt$slow(a, b);
};

$.le = function(a, b) {
  return typeof a === "number" && typeof b === "number" ? a <= b : $.le$slow(a, b);
};

$.gtB = function(a, b) {
  return typeof a === "number" && typeof b === "number" ? a > b : $.gt$slow(a, b) === true;
};

$.geB = function(a, b) {
  return typeof a === "number" && typeof b === "number" ? a >= b : $.ge$slow(a, b) === true;
};

$.ltB = function(a, b) {
  return typeof a === "number" && typeof b === "number" ? a < b : $.lt$slow(a, b) === true;
};

$.leB = function(a, b) {
  return typeof a === "number" && typeof b === "number" ? a <= b : $.le$slow(a, b) === true;
};

$.indexSet = function(a, index, value) {
  var key;
  if (a.constructor === Array && !a.immutable$list) {
    key = index >>> 0;
    if (key === index && key < a.length) {
      a[key] = value;
      return;
    }
  }
  $.indexSet$slow(a, index, value);
};

$.checkNumbers = function(a, b) {
  if (typeof a === "number")
    if (typeof b === "number")
      return true;
    else
      throw $.$$throw($.ArgumentError$(b));
  return false;
};

$.isJsArray = function(value) {
  return !(value == null) && value.constructor === Array;
};

$.add$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a + b;
  return a.operator$add$1(b);
};

$.div$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a / b;
  return a.operator$div$1(b);
};

$.mul$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a * b;
  return a.operator$mul$1(b);
};

$.sub$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a - b;
  return a.operator$sub$1(b);
};

$.mod = function(a, b) {
  var result;
  if ($.checkNumbers(a, b)) {
    result = a % b;
    if (result === 0)
      return 0;
    if (result > 0)
      return result;
    if (b < 0)
      return result - b;
    else
      return result + b;
  }
  return a.operator$mod$1(b);
};

$.tdiv = function(a, b) {
  if ($.checkNumbers(a, b))
    return $.CONSTANT4.truncate$0(a / b);
  return a.operator$tdiv$1(b);
};

$.eq = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b);
  return a === b;
};

$.eqB = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b) === true;
  return a === b;
};

$.gt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a > b;
  return a.operator$gt$1(b);
};

$.ge$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a >= b;
  return a.operator$ge$1(b);
};

$.lt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a < b;
  return a.operator$lt$1(b);
};

$.le$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a <= b;
  return a.operator$le$1(b);
};

$.shl = function(a, b) {
  if ($.checkNumbers(a, b)) {
    if (b < 0)
      throw $.$$throw($.ArgumentError$(b));
    if (b > 31)
      return 0;
    return (a << b) >>> 0;
  }
  return a.operator$shl$1(b);
};

$.shr = function(a, b) {
  if ($.checkNumbers(a, b)) {
    if (b < 0)
      throw $.$$throw($.ArgumentError$(b));
    if (a > 0) {
      if (b > 31)
        return 0;
      return a >>> b;
    }
    if (b > 31)
      b = 31;
    return (a >> b) >>> 0;
  }
  return a.operator$shr$1(b);
};

$.and = function(a, b) {
  if ($.checkNumbers(a, b))
    return (a & b) >>> 0;
  return a.operator$and$1(b);
};

$.xor = function(a, b) {
  if ($.checkNumbers(a, b))
    return (a ^ b) >>> 0;
  return a.operator$xor$1(b);
};

$.neg = function(a) {
  if (typeof a === "number")
    return -a;
  return a.operator$negate$0();
};

$.indexSet$slow = function(a, index, value) {
  if (!(a == null) && a.constructor === Array) {
    if (!(typeof index === "number" && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index < 0 || $.geB(index, $.getInterceptor$JSStringJSArray(a).get$length(a)))
      throw $.$$throw($.RangeError$value(index));
    $.checkMutable(a, "indexed set");
    a[index] = value;
    return;
  }
  a.operator$indexSet$2(index, value);
};

$.checkMutable = function(list, reason) {
  if (!!(list.immutable$list))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.checkGrowable = function(list, reason) {
  if (!!(list.fixed$length))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.S = function(value) {
  var res = $.getInterceptor(value).toString$0(value);
  if (!(typeof res === "string"))
    throw $.$$throw($.ArgumentError$(value));
  return res;
};

$.Primitives_objectHashCode = function(object) {
  var hash = object.$identityHash;
  if (hash == null) {
    hash = $.add($.Primitives_hashCodeSeed, 1);
    $.Primitives_hashCodeSeed = hash;
    object.$identityHash = hash;
  }
  return hash;
};

$.Primitives_printString = function(string) {
  if (typeof dartPrint == "function") {
    dartPrint(string);
    return;
  }
  if (typeof window == "object") {
    if (typeof console == "object")
      console.log(string);
    return;
  }
  if (typeof print == "function") {
    print(string);
    return;
  }
  throw 'Unable to print message: ' + String(string);
};

$.Primitives__throwFormatException = function(string) {
  throw $.$$throw($.FormatException$(string));
};

$.Primitives_parseInt = function(source, radix, handleError) {
  var match, t1, maxCharCode, digitsPart, i;
  if (handleError == null)
    handleError = $.Primitives__throwFormatException;
  $.checkString(source);
  match = /^\s*[+-]?((0x[a-f0-9]+)|(\d+)|([a-z0-9]+))\s*$/i.exec(source);
  if (radix == null) {
    if (!(match == null)) {
      t1 = $.getInterceptor$JSStringJSArray(match);
      if (!(t1.operator$index$1(match, 2) == null))
        return parseInt(source, 16);
      if (!(t1.operator$index$1(match, 3) == null))
        return parseInt(source, 10);
      return handleError.call$1(source);
    }
    radix = 10;
  } else {
    if (!(typeof radix === "number" && Math.floor(radix) === radix))
      throw $.$$throw($.ArgumentError$("Radix is not an integer"));
    if (radix < 2 || radix > 36)
      throw $.$$throw($.RangeError$("Radix " + $.S(radix) + " not in range 2..36"));
    if (!(match == null)) {
      if (radix === 10 && !($.getInterceptor$JSStringJSArray(match).operator$index$1(match, 3) == null))
        return parseInt(source, 10);
      if (radix < 10 || $.getInterceptor$JSStringJSArray(match).operator$index$1(match, 3) == null) {
        maxCharCode = radix <= 10 ? 48 + radix - 1 : 97 + radix - 10 - 1;
        t1 = $.getInterceptor$JSStringJSArray(match).operator$index$1(match, 1);
        digitsPart = $.getInterceptor$JSString(t1).toLowerCase$0(t1);
        for (t1 = $.getInterceptor$JSStringJSArray(digitsPart), i = 0; $.ltB(i, t1.get$length(digitsPart)); ++i)
          if ($.gtB(t1.charCodeAt$1(digitsPart, i), maxCharCode))
            return handleError.call$1(source);
      }
    }
    radix = radix;
  }
  if (match == null)
    return handleError.call$1(source);
  return parseInt(source, radix);
};

$.Primitives_parseDouble = function(source, handleError) {
  var result;
  $.checkString(source);
  if (handleError == null)
    handleError = $.Primitives__throwFormatException;
  if (!/^\s*(?:NaN|[+-]?(?:Infinity|(?:\.\d+|\d+(?:\.\d+)?)(?:[eE][+-]?\d+)?))\s*$/.test(source))
    return handleError.call$1(source);
  result = parseFloat(source);
  if ($.CONSTANT4.get$isNaN(result) === true && !$.eqB(source, "NaN"))
    return handleError.call$1(source);
  return result;
};

$.Primitives_objectTypeName = function(object) {
  var name$, decompiled, t1;
  name$ = $.constructorNameFallback(object);
  if ($.eqB(name$, "Object")) {
    decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
    if (typeof decompiled === "string")
      name$ = decompiled;
  }
  t1 = $.getInterceptor$JSString(name$);
  return $.Primitives_identical(t1.charCodeAt$1(name$, 0), 36) ? t1.substring$1(name$, 1) : name$;
};

$.Primitives_objectToString = function(object) {
  return "Instance of '" + $.S($.Primitives_objectTypeName(object)) + "'";
};

$.Primitives_newGrowableList = function(length$) {
  return new Array(length$);
};

$.Primitives_newFixedList = function(length$) {
  var result = new Array(length$);
  result.fixed$length = true;
  return result;
};

$.Primitives_dateNow = function() {
  return Date.now();
};

$.Primitives__fromCharCodeApply = function(array) {
  var end, t1, i, result, subarray, t2;
  end = array.length;
  for (t1 = end <= 500, i = 0, result = ""; i < end; i += 500) {
    if (t1)
      subarray = array;
    else {
      t2 = i + 500;
      t2 = t2 < end ? t2 : end;
      subarray = array.slice(i, t2);
    }
    result = result + String.fromCharCode.apply(null, subarray);
  }
  return result;
};

$.Primitives_stringFromCodePoints = function(codePoints) {
  var a, t1, t2;
  a = [];
  for (t1 = $.CONSTANT0.get$iterator(codePoints); t1.moveNext$0() === true;) {
    t2 = t1.get$current();
    if (!(typeof t2 === "number" && Math.floor(t2) === t2))
      throw $.$$throw($.ArgumentError$(t2));
    if (t2 <= 65535)
      a.push(t2);
    else if (t2 <= 1114111) {
      a.push(55296 + ($.shr(t2 - 65536, 10) & 1023));
      a.push(56320 + (t2 & 1023));
    } else
      throw $.$$throw($.ArgumentError$(t2));
  }
  return $.Primitives__fromCharCodeApply(a);
};

$.Primitives_stringFromCharCodes = function(charCodes) {
  var t1, t2;
  for (t1 = $.CONSTANT0.get$iterator(charCodes); t1.moveNext$0() === true;) {
    t2 = t1.get$current();
    if (!(typeof t2 === "number" && Math.floor(t2) === t2))
      throw $.$$throw($.ArgumentError$(t2));
    if (t2 < 0)
      throw $.$$throw($.ArgumentError$(t2));
    if (t2 > 65535)
      return $.Primitives_stringFromCodePoints(charCodes);
  }
  return $.Primitives__fromCharCodeApply(charCodes);
};

$.Primitives_lazyAsJsDate = function(receiver) {
  if (receiver.date === (void 0))
    receiver.date = new Date(receiver.millisecondsSinceEpoch);
  return receiver.date;
};

$.Primitives_getYear = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCFullYear() + 0) : ($.Primitives_lazyAsJsDate(receiver).getFullYear() + 0);
};

$.Primitives_getMonth = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1 : $.Primitives_lazyAsJsDate(receiver).getMonth() + 1;
};

$.Primitives_getDay = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCDate() + 0) : ($.Primitives_lazyAsJsDate(receiver).getDate() + 0);
};

$.Primitives_getHours = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCHours() + 0) : ($.Primitives_lazyAsJsDate(receiver).getHours() + 0);
};

$.Primitives_getMinutes = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCMinutes() + 0) : ($.Primitives_lazyAsJsDate(receiver).getMinutes() + 0);
};

$.Primitives_getSeconds = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCSeconds() + 0) : ($.Primitives_lazyAsJsDate(receiver).getSeconds() + 0);
};

$.Primitives_getMilliseconds = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() + 0) : ($.Primitives_lazyAsJsDate(receiver).getMilliseconds() + 0);
};

$.Primitives_identical = function(a, b) {
  return a == null ? b == null : a === b;
};

$.iae = function(argument) {
  throw $.$$throw($.ArgumentError$(argument));
};

$.ioore = function(index) {
  throw $.$$throw($.RangeError$value(index));
};

$.checkNull = function(object) {
  if (object == null)
    throw $.$$throw($.ArgumentError$(null));
  return object;
};

$.checkNum = function(value) {
  if (!(typeof value === "number"))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$.checkString = function(value) {
  if (!(typeof value === "string"))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$.$$throw = function(ex) {
  var jsError;
  if (ex == null)
    ex = $.CONSTANT;
  jsError = new Error();
  jsError.name = ex;
  jsError.description = ex;
  jsError.dartException = ex;
  jsError.toString = $.toStringWrapper.call$0;
  throw jsError;
};

$.toStringWrapper = function() {
  var t1 = this.dartException;
  return $.getInterceptor(t1).toString$0(t1);
};

$.unwrapException = function(ex) {
  var message, type, name$, ieErrorCode, ieFacilityNumber, t1;
  if ("dartException" in ex)
    return ex.dartException;
  message = ex.message;
  if (ex instanceof TypeError) {
    type = ex.type;
    name$ = ex.arguments ? ex.arguments[0] : "";
    if (message.indexOf("JSNull") !== -1 || $.eqB(type, "property_not_function") || $.eqB(type, "called_non_callable") || $.eqB(type, "non_object_property_call") || $.eqB(type, "non_object_property_load"))
      return $.NoSuchMethodError$(null, name$, [], $.makeLiteralMap([]), null);
    else if ($.eqB(type, "undefined_method"))
      return $.NoSuchMethodError$("", name$, [], $.makeLiteralMap([]), null);
    ieErrorCode = ex.number & 0xffff;
    ieFacilityNumber = ex.number>>16 & 0x1FFF;
    if (typeof message === "string")
      if ($.CONSTANT1.endsWith$1(message, "is null") === true || $.CONSTANT1.endsWith$1(message, "is undefined") === true || $.CONSTANT1.endsWith$1(message, "is null or undefined") === true || $.CONSTANT1.endsWith$1(message, "of null") === true)
        return $.NoSuchMethodError$(null, "<unknown>", [], $.makeLiteralMap([]), null);
      else {
        if (message.indexOf(" has no method ") === -1)
          if (message.indexOf(" is not a function") === -1)
            t1 = ieErrorCode === 438 && ieFacilityNumber === 10;
          else
            t1 = true;
        else
          t1 = true;
        if (t1)
          return $.NoSuchMethodError$("", "<unknown>", [], $.makeLiteralMap([]), null);
      }
    return $.Exception_Exception(typeof message === "string" ? message : "");
  }
  if (ex instanceof RangeError) {
    if (typeof message === "string" && message.indexOf("call stack") !== -1)
      return $.StackOverflowError$();
    return $.ArgumentError$(null);
  }
  if (typeof InternalError == 'function' && ex instanceof InternalError)
    if (typeof message === "string" && message === "too much recursion")
      return $.StackOverflowError$();
  return ex;
};

$.getTraceFromException = function(exception) {
  return $.StackTrace$(exception.stack);
};

$.StackTrace$ = function(stack) {
  return new $.StackTrace(stack);
};

$.makeLiteralMap = function(keyValuePairs) {
  var iterator, result, key;
  iterator = $.CONSTANT0.get$iterator(keyValuePairs);
  result = $.LinkedHashMap_LinkedHashMap();
  for (; iterator.moveNext$0() === true;) {
    key = iterator.get$current();
    iterator.moveNext$0();
    $.indexSet(result, key, iterator.get$current());
  }
  return result;
};

$.invokeClosure = function(closure, isolate, numberOfArguments, arg1, arg2) {
  if ($.eqB(numberOfArguments, 0))
    return $._callInIsolate(isolate, new $.invokeClosure_anon(closure));
  else if ($.eqB(numberOfArguments, 1))
    return $._callInIsolate(isolate, new $.invokeClosure_anon0(closure, arg1));
  else if ($.eqB(numberOfArguments, 2))
    return $._callInIsolate(isolate, new $.invokeClosure_anon1(closure, arg1, arg2));
  else
    throw $.$$throw($.Exception_Exception("Unsupported number of arguments for wrapped closure"));
};

$.convertDartClosureToJS = function(closure, arity) {
  var function$;
  if (closure == null)
    return;
  function$ = closure.$identity;
  if (!!function$)
    return function$;
  $._currentIsolate();
  function$ = function(a, b) { return $.invokeClosure.call$5(closure, $._currentIsolate(), arity, a, b); };
  closure.$identity = function$;
  return function$;
};

$.setRuntimeTypeInfo = function(target, typeInfo) {
  if (!(target == null))
    target.builtin$typeInfo = typeInfo;
};

$.getRuntimeTypeInfo = function(target) {
  var res;
  if (target == null)
    return;
  res = target.builtin$typeInfo;
  return res == null ? {} : res;
};

$.propertyTypeCastError = function(value, property) {
  var actualType, t1;
  actualType = $.Primitives_objectTypeName(value);
  t1 = $.getInterceptor$JSString(property);
  throw $.$$throw($.CastErrorImplementation$(actualType, t1.substring$2(property, 3, t1.get$length(property))));
};

$.propertyTypeCast = function(value, property) {
  if (value == null || !!value[property])
    return value;
  $.propertyTypeCastError(value, property);
};

$.callTypeCast = function(value, property) {
  var t1;
  if (!(value == null))
    t1 = typeof value === "object" && value[property]();
  else
    t1 = true;
  if (t1)
    return value;
  $.propertyTypeCastError(value, property);
};

$.CastErrorImplementation$ = function(actualType, expectedType) {
  return new $.CastErrorImplementation(actualType, expectedType);
};

$.throwCyclicInit = function(staticName) {
  throw $.$$throw($.RuntimeError$("Cyclic initialization for static " + $.S(staticName)));
};

$.TypeImpl$ = function(typeName) {
  return new $.TypeImpl(typeName);
};

$.getTypeArgumentAsString = function(runtimeType) {
  var t1, className;
  t1 = $.getInterceptor$JSStringJSArray(runtimeType);
  className = t1.operator$index$1(runtimeType, 0).builtin$cls;
  if ($.eqB(t1.get$length(runtimeType), 1))
    return className;
  return className + "<" + $.S($.joinArguments(runtimeType, 1)) + ">";
};

$.runtimeTypeToString = function(type) {
  var t1 = type == null;
  if (t1)
    return "dynamic";
  else if (!t1 && type.constructor === Array)
    return $.getTypeArgumentAsString(type);
  else
    return type.builtin$cls;
};

$.joinArguments = function(types, startIndex) {
  var buffer, t1, index, firstArgument;
  if (typeof types !== "string" && (typeof types !== "object" || types === null || types.constructor !== Array && !types.is$JavaScriptIndexingBehavior()))
    return $.joinArguments$bailout(1, types, startIndex);
  buffer = $.StringBuffer_StringBuffer("");
  for (t1 = $.getInterceptor$JSArray(buffer), index = startIndex, firstArgument = true; index < types.length; ++index) {
    if (firstArgument)
      firstArgument = false;
    else
      t1.add$1(buffer, ", ");
    if (index < 0 || index >= types.length)
      throw $.ioore(index);
    t1.add$1(buffer, $.runtimeTypeToString(types[index]));
  }
  return t1.toString$0(buffer);
};

$.joinArguments$bailout = function(state0, types, startIndex) {
  var buffer, t1, t2, index, firstArgument;
  buffer = $.StringBuffer_StringBuffer("");
  for (t1 = $.getInterceptor$JSStringJSArray(types), t2 = $.getInterceptor$JSArray(buffer), index = startIndex, firstArgument = true; $.ltB(index, t1.get$length(types)); ++index) {
    if (firstArgument)
      firstArgument = false;
    else
      t2.add$1(buffer, ", ");
    t2.add$1(buffer, $.runtimeTypeToString(t1.operator$index$1(types, index)));
  }
  return $.getInterceptor(buffer).toString$0(buffer);
};

$.getRuntimeTypeString = function(object) {
  var className, typeInfo;
  className = !(object == null) && object.constructor === Array ? "List" : object.constructor.builtin$cls;
  typeInfo = object.builtin$typeInfo;
  if (typeInfo == null)
    return className;
  return className + "<" + $.S($.joinArguments(typeInfo, 0)) + ">";
};

$.isSubtype = function(s, t) {
  var t1, typeOfS, typeOfT, len, i;
  if (typeof s !== "string" && (typeof s !== "object" || s === null || s.constructor !== Array && !s.is$JavaScriptIndexingBehavior()))
    return $.isSubtype$bailout(1, s, t);
  if (typeof t !== "string" && (typeof t !== "object" || t === null || t.constructor !== Array && !t.is$JavaScriptIndexingBehavior()))
    return $.isSubtype$bailout(1, s, t);
  if (false)
    return true;
  if (s === t)
    return true;
  if (s.constructor === Array) {
    if (0 >= s.length)
      throw $.ioore(0);
    t1 = s[0];
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
      return $.isSubtype$bailout(2, s, t, true, t1);
    typeOfS = t1;
  } else
    typeOfS = s;
  if (t.constructor === Array) {
    if (0 >= t.length)
      throw $.ioore(0);
    t1 = t[0];
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
      return $.isSubtype$bailout(3, s, t, typeOfS, t1, true, true);
    typeOfT = t1;
  } else
    typeOfT = t;
  if (typeOfS["is$" + $.S($.runtimeTypeToString(typeOfT))] == null)
    return false;
  if (s.constructor === Array)
    t1 = !t.constructor === Array;
  else
    t1 = true;
  if (t1)
    return true;
  t1 = $.getInterceptor$JSStringJSArray(s);
  len = s.length;
  if (len !== t.length)
    return false;
  for (i = 1; i < len; ++i) {
    if (i >= s.length)
      throw $.ioore(i);
    t1 = s[i];
    if (i >= t.length)
      throw $.ioore(i);
    if (!$.isSubtype(t1, t[i]))
      return false;
  }
  return true;
};

$.isSubtype$bailout = function(state0, env0, env1, env2, env3, env4, env5) {
  switch (state0) {
    case 1:
      t = env1;
      s = env0;
      break;
    case 2:
      t2 = env3;
      t1 = env2;
      t = env1;
      s = env0;
      break;
    case 3:
      t2 = env5;
      t1 = env4;
      t3 = env3;
      typeOfS = env2;
      t = env1;
      s = env0;
      break;
    case 4:
      len = env3;
      t1 = env2;
      t = env1;
      s = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      t1 = !(s == null);
      if (s == null || t == null)
        return true;
      if ($.eqB(s, t))
        return true;
    case 2:
      if (state0 === 2 || state0 === 0 && t1 && s.constructor === Array)
        switch (state0) {
          case 0:
            t2 = $.getInterceptor$JSStringJSArray(s).operator$index$1(s, 0);
          case 2:
            state0 = 0;
            typeOfS = t2;
        }
      else
        typeOfS = s;
      t2 = !(t == null);
    case 3:
      if (state0 === 3 || state0 === 0 && t2 && t.constructor === Array)
        switch (state0) {
          case 0:
            t3 = $.getInterceptor$JSStringJSArray(t).operator$index$1(t, 0);
          case 3:
            state0 = 0;
            typeOfT = t3;
        }
      else
        typeOfT = t;
      if (typeOfS["is$" + $.S($.runtimeTypeToString(typeOfT))] == null)
        return false;
      if (t1 && s.constructor === Array)
        t1 = !(t2 && t.constructor === Array);
      else
        t1 = true;
      if (t1)
        return true;
      t1 = $.getInterceptor$JSStringJSArray(s);
      len = t1.get$length(s);
    case 4:
      var t, s, t1, t2, typeOfS, t3, typeOfT, len, i;
      state0 = 0;
      t2 = $.getInterceptor$JSStringJSArray(t);
      if (!$.eqB(len, t2.get$length(t)))
        return false;
      for (i = 1; $.ltB(i, len); ++i)
        if (!$.isSubtype(t1.operator$index$1(s, i), t2.operator$index$1(t, i)))
          return false;
      return true;
  }
};

$.createRuntimeType = function(name$) {
  return $.TypeImpl$(name$);
};

$.typeNameInChrome = function(obj) {
  return $.typeNameInWebKitCommon(obj.constructor.name);
};

$.typeNameInSafari = function(obj) {
  return $.typeNameInWebKitCommon($.constructorNameFallback(obj));
};

$.typeNameInWebKitCommon = function(tag) {
  var name$ = tag;
  if (name$ === "Window")
    return "DOMWindow";
  if (name$ === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if (name$ === "WebKitMutationObserver")
    return "MutationObserver";
  if (name$ === "AudioChannelMerger")
    return "ChannelMergerNode";
  if (name$ === "AudioChannelSplitter")
    return "ChannelSplitterNode";
  if (name$ === "AudioGainNode")
    return "GainNode";
  if (name$ === "AudioPannerNode")
    return "PannerNode";
  if (name$ === "JavaScriptAudioNode")
    return "ScriptProcessorNode";
  if (name$ === "Oscillator")
    return "OscillatorNode";
  if (name$ === "RealtimeAnalyserNode")
    return "AnalyserNode";
  return name$;
};

$.typeNameInOpera = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === "Window")
    return "DOMWindow";
  return name$;
};

$.typeNameInFirefox = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === "Window")
    return "DOMWindow";
  if (name$ === "CSS2Properties")
    return "CSSStyleDeclaration";
  if (name$ === "DataTransfer")
    return "Clipboard";
  if (name$ === "DragEvent")
    return "MouseEvent";
  if (name$ === "GeoGeolocation")
    return "Geolocation";
  if (name$ === "MouseScrollEvent")
    return "WheelEvent";
  if (name$ === "OfflineResourceList")
    return "DOMApplicationCache";
  if (name$ === "WorkerMessageEvent")
    return "MessageEvent";
  if (name$ === "XMLDocument")
    return "Document";
  return name$;
};

$.typeNameInIE = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === "Window")
    return "DOMWindow";
  if (name$ === "Document") {
    if (!!obj.xmlVersion)
      return "Document";
    return "HTMLDocument";
  }
  if (name$ === "ApplicationCache")
    return "DOMApplicationCache";
  if (name$ === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if (name$ === "DataTransfer")
    return "Clipboard";
  if (name$ === "DragEvent")
    return "MouseEvent";
  if (name$ === "HTMLDDElement")
    return "HTMLElement";
  if (name$ === "HTMLDTElement")
    return "HTMLElement";
  if (name$ === "HTMLTableDataCellElement")
    return "HTMLTableCellElement";
  if (name$ === "HTMLTableHeaderCellElement")
    return "HTMLTableCellElement";
  if (name$ === "HTMLPhraseElement")
    return "HTMLElement";
  if (name$ === "MSStyleCSSProperties")
    return "CSSStyleDeclaration";
  if (name$ === "MouseWheelEvent")
    return "WheelEvent";
  if (name$ === "Position")
    return "Geoposition";
  if (name$ === "Object")
    if (window.DataView && (obj instanceof window.DataView))
      return "DataView";
  return name$;
};

$.constructorNameFallback = function(object) {
  var constructor$, name$, t1, string;
  if (object == null)
    return "Null";
  constructor$ = object.constructor;
  if (typeof(constructor$) === "function") {
    name$ = constructor$.name;
    if (typeof name$ === "string")
      t1 = !(name$ === "") && !(name$ === "Object") && !(name$ === "Function.prototype");
    else
      t1 = false;
    if (t1)
      return name$;
  }
  string = Object.prototype.toString.call(object);
  return string.substring(8, string.length - 1);
};

$.alternateTag = function(object, tag) {
  if (!!/^HTML[A-Z].*Element$/.test(tag)) {
    if (Object.prototype.toString.call(object) === "[object Object]")
      return;
    return "HTMLElement";
  }
  return;
};

$.callHasOwnProperty = function(function$, object, property) {
  return function$.call(object, property);
};

$.getFunctionForTypeNameOf = function() {
  if (!(typeof(navigator) === "object"))
    return $.typeNameInChrome;
  var userAgent = navigator.userAgent;
  if (userAgent.indexOf("Chrome") !== -1 || userAgent.indexOf("DumpRenderTree") !== -1)
    return $.typeNameInChrome;
  else if (userAgent.indexOf("Firefox") !== -1)
    return $.typeNameInFirefox;
  else if (userAgent.indexOf("MSIE") !== -1)
    return $.typeNameInIE;
  else if (userAgent.indexOf("Opera") !== -1)
    return $.typeNameInOpera;
  else if (userAgent.indexOf("AppleWebKit") !== -1)
    return $.typeNameInSafari;
  else
    return $.constructorNameFallback;
};

$.getTypeNameOf = function(obj) {
  if ($._getTypeNameOf == null)
    $._getTypeNameOf = $.getFunctionForTypeNameOf();
  return $._getTypeNameOf.call$1(obj);
};

$.toStringForNativeObject = function(obj) {
  return "Instance of " + $.getTypeNameOf(obj);
};

$.hashCodeForNativeObject = function(object) {
  return $.Primitives_objectHashCode(object);
};

$.defineProperty = function(obj, property, value) {
  Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
};

$.dynamicBind = function(obj, name$, methods, arguments$) {
  var tag, hasOwnPropertyFunction, method, secondTag, proto;
  tag = $.getTypeNameOf(obj);
  hasOwnPropertyFunction = Object.prototype.hasOwnProperty;
  method = $.dynamicBindLookup(hasOwnPropertyFunction, tag, methods);
  if (method == null) {
    secondTag = $.alternateTag(obj, tag);
    if (!(secondTag == null))
      method = $.dynamicBindLookup(hasOwnPropertyFunction, secondTag, methods);
  }
  if (method == null)
    method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, $.getTypeNameOf($.CONSTANT14));
  proto = Object.getPrototypeOf(obj);
  if (method == null)
    method = function () {if (Object.getPrototypeOf(this) === proto) {throw new TypeError(name$ + " is not a function");} else {return Object.prototype[name$].apply(this, arguments);}};
  if (!$.callHasOwnProperty(hasOwnPropertyFunction, proto, name$))
    $.defineProperty(proto, name$, method);
  return method.apply(obj, arguments$);
};

$.dynamicBindLookup = function(hasOwnPropertyFunction, tag, methods) {
  var method, i, entry;
  method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, tag);
  if (method == null && !($._dynamicMetadata0() == null))
    for (i = 0; i < $._dynamicMetadata0().length; ++i) {
      entry = $._dynamicMetadata0()[i];
      if ($.callHasOwnProperty(hasOwnPropertyFunction, entry.get$_set(), tag)) {
        method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, entry.get$_tag());
        if (!(method == null))
          break;
      }
    }
  return method;
};

$.lookupDynamicClass = function(hasOwnPropertyFunction, methods, className) {
  return $.callHasOwnProperty(hasOwnPropertyFunction, methods, className) ? methods[className] : null;
};

$.dynamicFunction = function(name$) {
  var f, methods, dartMethod, bind;
  f = Object.prototype[name$];
  if (!(f == null) && !!f.methods)
    return f.methods;
  methods = {};
  dartMethod = Object.getPrototypeOf($.CONSTANT14)[name$];
  if (!(dartMethod == null))
    methods["Object"] = dartMethod;
  bind = function() {return $.dynamicBind.call$4(this, name$, methods, Array.prototype.slice.call(arguments));};
  bind.methods = methods;
  $.defineProperty(Object.prototype, name$, bind);
  return methods;
};

$.MetaInfo$ = function(_tag, _tags, _set) {
  return new $.MetaInfo(_tag, _tags, _set);
};

$._dynamicMetadata0 = function() {
  if (typeof($dynamicMetadata) === "undefined") {
    var t1 = [];
    $._dynamicMetadata(t1);
  }
  return $dynamicMetadata;
};

$._dynamicMetadata = function(table) {
  $dynamicMetadata = table;
};

$.buildDynamicMetadata = function(inputTable) {
  var result, i, tag, tags, set, tagNames, j;
  result = [];
  for (i = 0; i < inputTable.length; ++i) {
    tag = inputTable[i][0];
    tags = inputTable[i][1];
    set = {};
    tagNames = tags.split("|");
    for (j = 0; j < tagNames.length; ++j)
      set[tagNames[j]] = true;
    result.push($.MetaInfo$(tag, tags, set));
  }
  return result;
};

$.dynamicSetMetadata = function(inputTable) {
  var t1 = $.buildDynamicMetadata(inputTable);
  $._dynamicMetadata(t1);
};

$.regExpExec = function(regExp, str) {
  var result = $.regExpGetNative(regExp).exec(str);
  if (result == null)
    return;
  return result;
};

$.regExpTest = function(regExp, str) {
  return $.regExpGetNative(regExp).test(str);
};

$.regExpGetNative = function(regExp) {
  var r = regExp._re;
  return r == null ? regExp._re = $.regExpMakeNative(regExp, false) : r;
};

$.regExpMakeNative = function(regExp, global, exception) {
  var pattern, isMultiLine, isCaseSensitive, sb, t1, t2, e;
  pattern = regExp.get$pattern();
  isMultiLine = regExp.get$isMultiLine();
  isCaseSensitive = regExp.get$isCaseSensitive();
  $.checkString(pattern);
  sb = $.StringBuffer_StringBuffer("");
  if (isMultiLine === true) {
    t1 = sb;
    $.getInterceptor$JSArray(t1).add$1(t1, "m");
  }
  if (isCaseSensitive !== true) {
    t1 = sb;
    $.getInterceptor$JSArray(t1).add$1(t1, "i");
  }
  if (global === true) {
    t1 = sb;
    $.getInterceptor$JSArray(t1).add$1(t1, "g");
  }
  try {
    t1 = pattern;
    t2 = sb;
    t1 = new RegExp(t1, $.getInterceptor(t2).toString$0(t2));
    return t1;
  } catch (exception) {
    t1 = $.unwrapException(exception);
    e = t1;
    throw $.$$throw($.IllegalJSRegExpException$(pattern, String(e)));
  }

};

$.JSSyntaxRegExp$ = function(pattern, caseSensitive, multiLine) {
  return new $.JSSyntaxRegExp(pattern, multiLine, caseSensitive);
};

$.JSSyntaxRegExp__globalVersionOf = function(other) {
  var t1, t2, re;
  t1 = other.get$pattern();
  t2 = other.get$isMultiLine();
  re = $.JSSyntaxRegExp$(t1, other.get$isCaseSensitive(), t2);
  re._re = $.regExpMakeNative(re, true);
  return re;
};

$._MatchImplementation$ = function(pattern, str, start, end, _groups) {
  return new $._MatchImplementation(pattern, str, start, end, _groups);
};

$._AllMatchesIterable$ = function(_re, _str) {
  return new $._AllMatchesIterable(_re, _str);
};

$._AllMatchesIterator$ = function(re, _str) {
  return new $._AllMatchesIterator($.JSSyntaxRegExp__globalVersionOf(re), _str, null);
};

$.StringMatch$ = function(start, str, pattern) {
  return new $.StringMatch(start, str, pattern);
};

$.allMatchesInStringUnchecked = function(needle, haystack) {
  var result, t1, length$, patternLength, startIndex, position, endIndex;
  result = $.List_List(0, $.Match);
  $.setRuntimeTypeInfo(result, [$.Match]);
  t1 = $.getInterceptor$JSStringJSArray(haystack);
  length$ = t1.get$length(haystack);
  patternLength = needle.length;
  for (startIndex = 0; true;) {
    position = t1.indexOf$2(haystack, needle, startIndex);
    if ($.eqB(position, -1))
      break;
    result.push($.StringMatch$(position, haystack, needle));
    endIndex = $.add(position, patternLength);
    if ($.eqB(endIndex, length$))
      break;
    else
      startIndex = $.eqB(position, endIndex) ? $.add(startIndex, 1) : endIndex;
  }
  return result;
};

$.stringContainsUnchecked = function(receiver, other, startIndex) {
  var substr, t1;
  if (typeof other === "string")
    return !$.eqB($.CONSTANT1.indexOf$2(receiver, other, startIndex), -1);
  else if (typeof other === "object" && other !== null && !!other.is$JSSyntaxRegExp)
    return other.hasMatch$1($.CONSTANT1.substring$1(receiver, startIndex));
  else {
    substr = $.CONSTANT1.substring$1(receiver, startIndex);
    t1 = $.getInterceptor$JSString(other).allMatches$1(other, substr);
    return $.getInterceptor$JSArray(t1).get$iterator(t1).moveNext$0();
  }
};

$.stringReplaceJS = function(receiver, replacer, to) {
  return receiver.replace(replacer, to.replace('$', '$$$$'));
};

$.stringReplaceAllUnchecked = function(receiver, from, to) {
  var result, length$, t1, i;
  $.checkString(to);
  if (from === "")
    if (receiver === "")
      return to;
    else {
      result = $.StringBuffer_StringBuffer("");
      length$ = receiver.length;
      t1 = $.getInterceptor$JSArray(result);
      t1.add$1(result, to);
      for (i = 0; i < length$; ++i) {
        if (i >= receiver.length)
          throw $.ioore(i);
        t1.add$1(result, receiver[i]);
        t1.add$1(result, to);
      }
      return t1.toString$0(result);
    }
  else
    return $.stringReplaceJS(receiver, $.regExpMakeNative($.JSSyntaxRegExp$(from.replace($.regExpMakeNative($.get$quoteRegExp(), true), "\\$&"), true, false), true), to);
};

$.stringJoinUnchecked = function(array, separator) {
  return array.join(separator);
};

$.AsyncError$ = function(error, stackTrace) {
  return new $.AsyncError(error, stackTrace, null);
};

$.AsyncError$withCause = function(error, stackTrace, cause) {
  return new $.AsyncError(error, stackTrace, cause);
};

$.Future_Future$immediate = function(value, T) {
  return $._FutureImpl$immediate(value, T);
};

$.Future_wait = function(futures) {
  return $._FutureImpl__FutureImpl$wait(futures, $.List);
};

$.Completer_Completer = function(T) {
  return $._CompleterImpl$(T);
};

$._CompleterImpl$ = function(T) {
  var t1 = new $._CompleterImpl($._FutureImpl$($.getRuntimeTypeInfo(this)[0]), false);
  $.setRuntimeTypeInfo(t1, [T]);
  return t1;
};

$._FutureListener__FutureListener$wrap = function(future, T) {
  return $._FutureListenerWrapper$(future);
};

$._FutureListenerWrapper$ = function(future, T) {
  var t1 = new $._FutureListenerWrapper(future, null);
  $.setRuntimeTypeInfo(t1, [T]);
  return t1;
};

$._FutureImpl$ = function(T) {
  var t1 = new $._FutureImpl(0, null);
  $.setRuntimeTypeInfo(t1, [T]);
  return t1;
};

$._FutureImpl$immediate = function(value, T) {
  var t1 = new $._FutureImpl(0, null);
  $.setRuntimeTypeInfo(t1, [T]);
  t1._FutureImpl$immediate$1(value);
  return t1;
};

$._FutureImpl__FutureImpl$wait = function(futures, T) {
  var t1, t2, completer, values, i, t3, i0;
  t1 = {};
  t2 = $.getInterceptor$JSStringJSArray(futures);
  if (t2.get$isEmpty(futures) === true)
    return $.Future_Future$immediate($.CONSTANT8, $.List);
  completer = $.Completer_Completer($.List);
  t1.remaining_0 = t2.get$length(futures);
  values = $.List_List$fixedLength(t2.get$length(futures), null);
  $.setRuntimeTypeInfo(values, []);
  t1.completed_1 = false;
  for (t2 = t2.get$iterator(futures), i = 0; t2.moveNext$0() === true; i = i0) {
    t3 = t2.get$current();
    i0 = i + 1;
    t3.then$1(new $._FutureImpl__FutureImpl$wait_anon(t1, completer, values, i)).catchError$1(new $._FutureImpl__FutureImpl$wait_anon0(t1, completer));
  }
  return completer.get$future();
};

$._ThenFuture$ = function(_onValue, S, T) {
  var t1 = new $._ThenFuture(_onValue, null, 0, null);
  $.setRuntimeTypeInfo(t1, [S, T]);
  return t1;
};

$._CatchErrorFuture$ = function(_onError, _test, T) {
  var t1 = new $._CatchErrorFuture(_test, _onError, null, 0, null);
  $.setRuntimeTypeInfo(t1, [T]);
  return t1;
};

$._SubscribeFuture$ = function(onValue, _onError, S, T) {
  var t1 = new $._SubscribeFuture(_onError, onValue, null, 0, null);
  $.setRuntimeTypeInfo(t1, [S, T]);
  return t1;
};

$._FutureWrapper$ = function(_future, T) {
  var t1 = new $._FutureWrapper(_future);
  $.setRuntimeTypeInfo(t1, [T]);
  return t1;
};

$.Timer_Timer = function(milliseconds, callback) {
  return $.TimerImpl$(milliseconds, callback);
};

$.Arrays_copy = function(src, srcStart, dst, dstStart, count) {
  var i, j, t1, t2, t3;
  if (typeof src !== "string" && (typeof src !== "object" || src === null || src.constructor !== Array && !src.is$JavaScriptIndexingBehavior()))
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (typeof dst !== "object" || dst === null || (dst.constructor !== Array || !!dst.immutable$list) && !dst.is$JavaScriptIndexingBehavior())
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (srcStart < dstStart)
    for (i = srcStart + count - 1, j = dstStart + count - 1, t1 = src.length, t2 = dst.length; i >= srcStart; --i, --j) {
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      t3 = src[i];
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
  else
    for (t1 = src.length, t2 = dst.length, j = dstStart, i = srcStart; i < srcStart + count; ++i, ++j) {
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      t3 = src[i];
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
};

$.Arrays_copy$bailout = function(state0, src, srcStart, dst, dstStart, count) {
  var i, j, t1;
  if (srcStart < dstStart)
    for (i = srcStart + count - 1, j = dstStart + count - 1, t1 = $.getInterceptor$JSStringJSArray(src); i >= srcStart; --i, --j)
      $.indexSet(dst, j, t1.operator$index$1(src, i));
  else
    for (t1 = $.getInterceptor$JSStringJSArray(src), j = dstStart, i = srcStart; i < srcStart + count; ++i, ++j)
      $.indexSet(dst, j, t1.operator$index$1(src, i));
};

$.Arrays_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$.Collections_contains = function(iterable, element) {
  var t1;
  for (t1 = $.getInterceptor$JSArray(iterable).get$iterator(iterable); t1.moveNext$0() === true;)
    if ($.eqB(element, t1.get$current()))
      return true;
  return false;
};

$.Collections_forEach = function(iterable, f) {
  var t1;
  for (t1 = $.getInterceptor$JSArray(iterable).get$iterator(iterable); t1.moveNext$0() === true;)
    f.call$1(t1.get$current());
};

$.Collections_every = function(iterable, f) {
  var t1;
  for (t1 = $.getInterceptor$JSArray(iterable).get$iterator(iterable); t1.moveNext$0() === true;)
    if (f.call$1(t1.get$current()) !== true)
      return false;
  return true;
};

$.Collections_joinList = function(list, separator) {
  var t1, buffer, i;
  if (typeof list !== "string" && (typeof list !== "object" || list === null || list.constructor !== Array && !list.is$JavaScriptIndexingBehavior()))
    return $.Collections_joinList$bailout(1, list, separator);
  if (typeof separator !== "string")
    return $.Collections_joinList$bailout(1, list, separator);
  if ($.getInterceptor$JSStringJSArray(list).get$isEmpty(list) === true)
    return "";
  t1 = list.length;
  if (t1 === 1) {
    if (0 >= t1)
      throw $.ioore(0);
    return $.S(list[0]);
  }
  buffer = $.StringBuffer_StringBuffer("");
  if (separator === "")
    for (t1 = $.getInterceptor$JSArray(buffer), i = 0; i < list.length; ++i)
      t1.add$1(buffer, $.S(list[i]));
  else {
    t1 = $.getInterceptor$JSArray(buffer);
    if (0 >= list.length)
      throw $.ioore(0);
    t1.add$1(buffer, $.S(list[0]));
    for (i = 1; i < list.length; ++i) {
      t1.add$1(buffer, separator);
      if (i >= list.length)
        throw $.ioore(i);
      t1.add$1(buffer, $.S(list[i]));
    }
  }
  return $.getInterceptor(buffer).toString$0(buffer);
};

$.Collections_joinList$bailout = function(state0, list, separator) {
  var t1, buffer, t2, i;
  t1 = $.getInterceptor$JSStringJSArray(list);
  if (t1.get$isEmpty(list) === true)
    return "";
  if ($.eqB(t1.get$length(list), 1))
    return $.S(t1.operator$index$1(list, 0));
  buffer = $.StringBuffer_StringBuffer("");
  if (separator == null || $.eqB(separator, ""))
    for (t2 = $.getInterceptor$JSArray(buffer), i = 0; $.ltB(i, t1.get$length(list)); ++i)
      t2.add$1(buffer, $.S(t1.operator$index$1(list, i)));
  else {
    t2 = $.getInterceptor$JSArray(buffer);
    t2.add$1(buffer, $.S(t1.operator$index$1(list, 0)));
    for (i = 1; $.ltB(i, t1.get$length(list)); ++i) {
      t2.add$1(buffer, separator);
      t2.add$1(buffer, $.S(t1.operator$index$1(list, i)));
    }
  }
  return $.getInterceptor(buffer).toString$0(buffer);
};

$.Collections_collectionToString = function(c) {
  var result, t1;
  result = $.StringBuffer_StringBuffer("");
  t1 = $.List_List(0);
  $.setRuntimeTypeInfo(t1, []);
  $.Collections__emitCollection(c, result, t1);
  return $.getInterceptor(result).toString$0(result);
};

$.Collections__emitCollection = function(c, result, visiting) {
  var t1, isList, t2, t3, first, t4;
  t1 = $.getInterceptor$JSArray(visiting);
  t1.add$1(visiting, c);
  isList = typeof c === "object" && c !== null && (c.constructor === Array || c.is$List());
  t2 = $.getInterceptor$JSArray(result);
  t2.add$1(result, isList ? "[" : "{");
  for (t3 = $.getInterceptor$JSArray(c).get$iterator(c), first = true; t3.moveNext$0() === true; first = false) {
    t4 = t3.get$current();
    if (!first)
      t2.add$1(result, ", ");
    $.Collections__emitObject(t4, result, visiting);
  }
  t2.add$1(result, isList ? "]" : "}");
  t1.removeLast$0(visiting);
};

$.Collections__emitObject = function(o, result, visiting) {
  var t1;
  if (typeof o === "object" && o !== null && (o.constructor === Array || o.is$Collection()))
    if ($.Collections__containsRef(visiting, o)) {
      t1 = $.getInterceptor$JSArray(result);
      t1.add$1(result, typeof o === "object" && o !== null && (o.constructor === Array || o.is$List()) ? "[...]" : "{...}");
    } else
      $.Collections__emitCollection(o, result, visiting);
  else if (typeof o === "object" && o !== null && o.is$Map())
    if ($.Collections__containsRef(visiting, o))
      $.getInterceptor$JSArray(result).add$1(result, "{...}");
    else
      $.Maps__emitMap(o, result, visiting);
  else
    $.getInterceptor$JSArray(result).add$1(result, o);
};

$.Collections__containsRef = function(c, ref) {
  var t1, t2;
  for (t1 = $.getInterceptor$JSArray(c).get$iterator(c); t1.moveNext$0() === true;) {
    t2 = t1.get$current();
    if (t2 == null ? ref == null : t2 === ref)
      return true;
  }
  return false;
};

$.Maps_mapToString = function(m) {
  var result, t1;
  result = $.StringBuffer_StringBuffer("");
  t1 = $.List_List(0);
  $.setRuntimeTypeInfo(t1, []);
  $.Maps__emitMap(m, result, t1);
  return $.getInterceptor(result).toString$0(result);
};

$.Maps__emitMap = function(m, result, visiting) {
  var t1, t2, t3;
  t1 = {};
  t2 = $.getInterceptor$JSArray(visiting);
  t2.add$1(visiting, m);
  t3 = $.getInterceptor$JSArray(result);
  t3.add$1(result, "{");
  t1.first_0 = true;
  $.getInterceptor$JSArray(m).forEach$1(m, new $.Maps__emitMap_anon(t1, result, visiting));
  t3.add$1(result, "}");
  t2.removeLast$0(visiting);
};

$.Date_Date$now = function() {
  return $._DateImpl$now();
};

$.Date_Date$fromMillisecondsSinceEpoch = function(millisecondsSinceEpoch, isUtc) {
  return $._DateImpl$fromMillisecondsSinceEpoch(millisecondsSinceEpoch, isUtc);
};

$._DateImpl$fromMillisecondsSinceEpoch = function(millisecondsSinceEpoch, isUtc) {
  var t1 = new $._DateImpl(millisecondsSinceEpoch, isUtc);
  t1._DateImpl$fromMillisecondsSinceEpoch$2(millisecondsSinceEpoch, isUtc);
  return t1;
};

$._DateImpl$now = function() {
  var t1 = new $._DateImpl($.Primitives_dateNow(), false);
  t1._DateImpl$now$0();
  return t1;
};

$.double_parse = function(source, handleError) {
  return $.Primitives_parseDouble(source, handleError);
};

$.Error_safeToString = function(object) {
  var t1;
  if (typeof object === "number" && Math.floor(object) === object || typeof object === "number" || typeof object === "boolean" || null == object)
    return $.getInterceptor(object).toString$0(object);
  if (typeof object === "string") {
    t1 = $.CONSTANT1.replaceAll$2(object, "\\", "\\\\");
    t1 = $.getInterceptor$JSString(t1).replaceAll$2(t1, "\n", "\\n");
    t1 = $.getInterceptor$JSString(t1).replaceAll$2(t1, "\r", "\\r");
    return "\"" + $.S($.getInterceptor$JSString(t1).replaceAll$2(t1, "\"", "\\\"")) + "\"";
  }
  return $.Primitives_objectToString(object);
};

$.ArgumentError$ = function(message) {
  return new $.ArgumentError(message);
};

$.RangeError$ = function(message) {
  return new $.RangeError(message);
};

$.RangeError$value = function(value) {
  return new $.RangeError("value " + $.S(value));
};

$.NoSuchMethodError$ = function(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames) {
  return new $.NoSuchMethodError(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames);
};

$.UnsupportedError$ = function(message) {
  return new $.UnsupportedError(message);
};

$.UnimplementedError$ = function(message) {
  return new $.UnimplementedError(message);
};

$.StateError$ = function(message) {
  return new $.StateError(message);
};

$.StackOverflowError$ = function() {
  return new $.StackOverflowError();
};

$.RuntimeError$ = function(message) {
  return new $.RuntimeError(message);
};

$.Exception_Exception = function(message) {
  return $._ExceptionImplementation$(message);
};

$._ExceptionImplementation$ = function(message) {
  return new $._ExceptionImplementation(message);
};

$.FormatException$ = function(message) {
  return new $.FormatException(message);
};

$.IllegalJSRegExpException$ = function(_pattern, _errmsg) {
  return new $.IllegalJSRegExpException(_pattern, _errmsg);
};

$.int_parse = function(source, onError, radix) {
  return $.Primitives_parseInt(source, radix, onError);
};

$.MappedIterable$ = function(_iterable, _f, S, T) {
  var t1 = new $.MappedIterable(_iterable, _f);
  $.setRuntimeTypeInfo(t1, [S, T]);
  return t1;
};

$.MappedIterator$ = function(_iterator, _f, S, T) {
  var t1 = new $.MappedIterator(null, _iterator, _f);
  $.setRuntimeTypeInfo(t1, [S, T]);
  return t1;
};

$.WhereIterable$ = function(_iterable, _f, E) {
  var t1 = new $.WhereIterable(_iterable, _f);
  $.setRuntimeTypeInfo(t1, [E]);
  return t1;
};

$.WhereIterator$ = function(_iterator, _f, E) {
  var t1 = new $.WhereIterator(_iterator, _f);
  $.setRuntimeTypeInfo(t1, [E]);
  return t1;
};

$.List_List = function(length$, E) {
  if (!(typeof length$ === "number" && Math.floor(length$) === length$) || length$ < 0)
    throw $.$$throw($.ArgumentError$("Length must be a positive integer: " + $.S($.Error_safeToString(length$)) + "."));
  return $.Primitives_newGrowableList(length$);
};

$.List_List$fixedLength = function(length$, fill, E) {
  var result, t1, i;
  if (!(typeof length$ === "number" && Math.floor(length$) === length$) || length$ < 0)
    throw $.$$throw($.ArgumentError$("Length must be a positive integer: " + $.S(length$) + "."));
  result = $.Primitives_newFixedList(length$);
  if (typeof result !== "object" || result === null || (result.constructor !== Array || !!result.immutable$list) && !result.is$JavaScriptIndexingBehavior())
    return $.List_List$fixedLength$bailout(1, length$, fill, result);
  if (!$.eqB(length$, 0) && !(fill == null))
    for (t1 = result.length, i = 0; i < t1; ++i)
      result[i] = fill;
  return result;
};

$.List_List$fixedLength$bailout = function(state0, length$, fill, result) {
  var i;
  if (!$.eqB(length$, 0) && !(fill == null))
    for (i = 0; i < result.length; ++i)
      $.indexSet(result, i, fill);
  return result;
};

$.List_List$from = function(other, E) {
  var list, t1;
  list = $.List_List(0, E);
  $.setRuntimeTypeInfo(list, [E]);
  for (t1 = $.getInterceptor$JSArray(other).get$iterator(other); t1.moveNext$0() === true;)
    list.push(t1.get$current());
  return list;
};

$.ListIterator$ = function(_list, E) {
  var t1 = new $.ListIterator(_list, -1, null);
  $.setRuntimeTypeInfo(t1, [E]);
  return t1;
};

$.MappedList$ = function(_list, _f, S, T) {
  var t1 = new $.MappedList(_list, _f);
  $.setRuntimeTypeInfo(t1, [S, T]);
  return t1;
};

$.Map_Map = function(K, V) {
  return $._HashMapImpl$(K, V);
};

$.HashMap_HashMap = function(K, V) {
  return $._HashMapImpl$(K, V);
};

$.LinkedHashMap_LinkedHashMap = function(K, V) {
  return $._LinkedHashMapImpl$(K, V);
};

$._HashMapImpl$ = function(K, V) {
  var t1 = new $._HashMapImpl(null, null, null, null, null);
  $.setRuntimeTypeInfo(t1, [K, V]);
  t1._HashMapImpl$0();
  return t1;
};

$._HashMapImpl__computeLoadLimit = function(capacity) {
  return $.tdiv(capacity * 3, 4);
};

$._HashMapImpl__nextProbe = function(currentProbe, numberOfProbes, length$) {
  return $.and($.add(currentProbe, numberOfProbes), $.sub(length$, 1));
};

$._HashMapImplKeyIterable$ = function(_map, E) {
  var t1 = new $._HashMapImplKeyIterable(_map);
  $.setRuntimeTypeInfo(t1, [E]);
  return t1;
};

$._HashMapImplValueIterable$ = function(_map, E) {
  var t1 = new $._HashMapImplValueIterable(_map);
  $.setRuntimeTypeInfo(t1, [E]);
  return t1;
};

$._HashMapImplKeyIterator$ = function(map, E) {
  var t1 = new $._HashMapImplKeyIterator(map, -1, null);
  $.setRuntimeTypeInfo(t1, [E]);
  return t1;
};

$._HashMapImplValueIterator$ = function(map, E) {
  var t1 = new $._HashMapImplValueIterator(map, -1, null);
  $.setRuntimeTypeInfo(t1, [E]);
  return t1;
};

$._HashMapImplIndexIterator$ = function(map) {
  return new $._HashMapImplIndexIterator(map, -1, null);
};

$._KeyValuePair$ = function(key, value, K, V) {
  var t1 = new $._KeyValuePair(key, value);
  $.setRuntimeTypeInfo(t1, [K, V]);
  return t1;
};

$._LinkedHashMapImpl$ = function(K, V) {
  var t1 = new $._LinkedHashMapImpl(null, null);
  $.setRuntimeTypeInfo(t1, [K, V]);
  t1._LinkedHashMapImpl$0();
  return t1;
};

$.print = function(object) {
  if (typeof object === "string")
    $.Primitives_printString(object);
  else
    $.Primitives_printString($.getInterceptor(object).toString$0(object));
};

$.Queue_Queue = function(E) {
  return $.DoubleLinkedQueue$(E);
};

$.DoubleLinkedQueueEntry$ = function(e, E) {
  var t1 = new $.DoubleLinkedQueueEntry(null, null, null);
  $.setRuntimeTypeInfo(t1, [E]);
  t1.DoubleLinkedQueueEntry$1(e);
  return t1;
};

$._DoubleLinkedQueueEntrySentinel$ = function(E) {
  var t1 = new $._DoubleLinkedQueueEntrySentinel(null, null, null);
  $.setRuntimeTypeInfo(t1, [E]);
  t1.DoubleLinkedQueueEntry$1(null);
  t1._DoubleLinkedQueueEntrySentinel$0();
  return t1;
};

$.DoubleLinkedQueue$ = function(E) {
  var t1 = new $.DoubleLinkedQueue(null);
  $.setRuntimeTypeInfo(t1, [E]);
  t1.DoubleLinkedQueue$0();
  return t1;
};

$._DoubleLinkedQueueIterator$ = function(sentinel, E) {
  var t1 = new $._DoubleLinkedQueueIterator(sentinel, sentinel, null);
  $.setRuntimeTypeInfo(t1, [E]);
  return t1;
};

$.RegExp_RegExp = function(pattern, caseSensitive, multiLine) {
  return $.JSSyntaxRegExp$(pattern, caseSensitive, multiLine);
};

$.Set_Set = function(E) {
  return $._HashSetImpl$(E);
};

$._HashSetImpl$ = function(E) {
  var t1 = new $._HashSetImpl(null);
  $.setRuntimeTypeInfo(t1, [E]);
  t1._HashSetImpl$0();
  return t1;
};

$._HashSetIterator$ = function(set, E) {
  var t1, t2;
  t1 = set._backingMap.get$_keys();
  t2 = new $._HashSetIterator($.getInterceptor$JSArray(t1).get$iterator(t1));
  $.setRuntimeTypeInfo(t2, [E]);
  return t2;
};

$.String_String$fromCharCodes = function(charCodes) {
  if (!$.isJsArray(charCodes)) {
    charCodes = $.List_List$from(charCodes);
    $.setRuntimeTypeInfo(charCodes, []);
  }
  return $.Primitives_stringFromCharCodes(charCodes);
};

$.StringBuffer_StringBuffer = function(content$) {
  return $._StringBufferImpl$(content$);
};

$._StringBufferImpl$ = function(content$) {
  var t1 = new $._StringBufferImpl(null, null);
  t1._StringBufferImpl$1(content$);
  return t1;
};

$.Strings_join = function(strings, separator) {
  $.checkNull(strings);
  return $.stringJoinUnchecked($.Strings__toJsStringArray(strings), separator);
};

$.window = function() {
  return window;
};

$.document = function() {
  return document;
};

$.query = function(selector) {
  return $.document().query$1(selector);
};

$.BodyElementEvents$ = function(_ptr) {
  return new $.BodyElementEvents(_ptr);
};

$.DocumentEvents$ = function(_ptr) {
  return new $.DocumentEvents(_ptr);
};

$._FrozenCssClassSet$ = function() {
  return new $._FrozenCssClassSet();
};

$._ChildrenElementList$_wrap = function(element) {
  return new $._ChildrenElementList(element, element.get$$$dom_children());
};

$._FrozenElementList$_wrap = function(_nodeList) {
  return new $._FrozenElementList(_nodeList);
};

$._FrozenElementListIterator$ = function(_list) {
  return new $._FrozenElementListIterator(_list, -1, null);
};

$._ElementCssClassSet$ = function(_element) {
  return new $._ElementCssClassSet(_element);
};

$.Element_Element$html = function(html) {
  return $._ElementFactoryProvider_createElement_html(html);
};

$.Element_Element$tag = function(tag) {
  return document.createElement(tag);
};

$._ElementFactoryProvider_createElement_html = function(html) {
  var match, t1, tag, parentTag, temp, element, t2;
  match = $.get$_START_TAG_REGEXP().firstMatch$1(html);
  if (!(match == null)) {
    t1 = match.group$1(1);
    tag = $.getInterceptor$JSString(t1).toLowerCase$0(t1);
    parentTag = $.CONSTANT7.containsKey$1(tag) === true ? $.CONSTANT7.operator$index$1(tag) : "div";
  } else {
    parentTag = "div";
    tag = null;
  }
  temp = $.Element_Element$tag(parentTag);
  temp.set$innerHtml(html);
  t1 = temp.get$children();
  if ($.eqB($.getInterceptor$JSStringJSArray(t1).get$length(t1), 1)) {
    t1 = temp.get$children();
    element = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, 0);
  } else {
    if ($.eqB(parentTag, "html")) {
      t1 = temp.get$children();
      t2 = $.eqB($.getInterceptor$JSStringJSArray(t1).get$length(t1), 2);
      t1 = t2;
    } else
      t1 = false;
    if (t1) {
      t1 = temp.get$children();
      t2 = $.getInterceptor$JSStringJSArray(t1);
      element = t2.operator$index$1(t1, $.eqB(tag, "head") ? 0 : 1);
    } else {
      t1 = temp.get$children();
      throw $.$$throw($.ArgumentError$("HTML had " + $.S($.getInterceptor$JSStringJSArray(t1).get$length(t1)) + " " + "top level elements but 1 expected"));
    }
  }
  element.remove$0();
  return element;
};

$.ElementEvents$ = function(_ptr) {
  return new $.ElementEvents(_ptr);
};

$.Events$ = function(_ptr) {
  return new $.Events(_ptr);
};

$.EventListenerList$ = function(_ptr, _type) {
  return new $.EventListenerList(_ptr, _type);
};

$.FrameSetElementEvents$ = function(_ptr) {
  return new $.FrameSetElementEvents(_ptr);
};

$.InputElementEvents$ = function(_ptr) {
  return new $.InputElementEvents(_ptr);
};

$.MediaElementEvents$ = function(_ptr) {
  return new $.MediaElementEvents(_ptr);
};

$._ChildNodeListLazy$ = function(_this) {
  return new $._ChildNodeListLazy(_this);
};

$.ShadowRoot_supported = function() {
  return !!(Element.prototype.webkitCreateShadowRoot);
};

$.Text_Text = function(data) {
  return document.createTextNode(data);
};

$.WebSocket_WebSocket = function(url) {
  return new WebSocket(url);
};

$.WebSocketEvents$ = function(_ptr) {
  return new $.WebSocketEvents(_ptr);
};

$.Window__isDartLocation = function(thing, exception) {
  var t1;
  try {
    t1 = thing;
    t1 = typeof t1 === "object" && t1 !== null && t1.is$Location();
    return t1;
  } catch (exception) {
    $.unwrapException(exception);
    return false;
  }

};

$.WindowEvents$ = function(_ptr) {
  return new $.WindowEvents(_ptr);
};

$._ElementAttributeMap$ = function(element) {
  return new $._ElementAttributeMap(element);
};

$._convertNativeToDart_Window = function(win) {
  return $._DOMWindowCrossFrame__createSafe(win);
};

$._DOMWindowCrossFrame$ = function(_window) {
  return new $._DOMWindowCrossFrame(_window);
};

$._DOMWindowCrossFrame__createSafe = function(w) {
  var t1 = $.window();
  if (w == null ? t1 == null : w === t1)
    return w;
  else
    return $._DOMWindowCrossFrame$(w);
};

$._LocationCrossFrame$ = function(_location) {
  return new $._LocationCrossFrame(_location);
};

$._LocationCrossFrame__createSafe = function(location$) {
  var t1 = $.window().get$location();
  if (location$ == null ? t1 == null : location$ === t1)
    return location$;
  else
    return $._LocationCrossFrame$(location$);
};

$._LocationWrapper$ = function(_ptr) {
  return new $._LocationWrapper(_ptr);
};

$._LocationWrapper__get = function(p, m) {
  return p[m];
};

$.FixedSizeListIterator$ = function(array, T) {
  var t1 = new $.FixedSizeListIterator(array, $.getInterceptor$JSStringJSArray(array).get$length(array), -1, null);
  $.setRuntimeTypeInfo(t1, [T]);
  return t1;
};

$.convertNativeToDart_SerializedScriptValue = function(object) {
  return $.convertNativeToDart_AcceptStructuredClone(object, true);
};

$.convertNativeToDart_AcceptStructuredClone = function(object, mustCopy) {
  var values, copies;
  values = [];
  copies = [];
  return new $.convertNativeToDart_AcceptStructuredClone_walk(mustCopy, new $.convertNativeToDart_AcceptStructuredClone_findSlot(values, copies), new $.convertNativeToDart_AcceptStructuredClone_readSlot(copies), new $.convertNativeToDart_AcceptStructuredClone_writeSlot(copies)).call$1(object);
};

$.FilteredElementList$ = function(node) {
  return new $.FilteredElementList(node, node.get$nodes());
};

$.Lists_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (typeof a !== "string" && (typeof a !== "object" || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof startIndex !== "number")
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof endIndex !== "number")
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$.Lists_indexOf$bailout = function(state0, a, element, startIndex, endIndex) {
  var t1, i;
  t1 = $.getInterceptor$JSStringJSArray(a);
  if ($.geB(startIndex, t1.get$length(a)))
    return -1;
  if ($.ltB(startIndex, 0))
    startIndex = 0;
  for (i = startIndex; $.ltB(i, endIndex); i = $.add(i, 1))
    if ($.eqB(t1.operator$index$1(a, i), element))
      return i;
  return -1;
};

$.Lists_getRange = function(a, start, length$, accumulator) {
  var end, i;
  if (typeof a !== "string" && (typeof a !== "object" || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $.Lists_getRange$bailout(1, a, start, length$, accumulator);
  if (typeof start !== "number")
    return $.Lists_getRange$bailout(1, a, start, length$, accumulator);
  if ($.ltB(length$, 0))
    throw $.$$throw($.ArgumentError$("length"));
  if (start < 0)
    throw $.$$throw($.RangeError$value(start));
  if (typeof length$ !== "number")
    throw $.iae(length$);
  end = start + length$;
  if (end > a.length)
    throw $.$$throw($.RangeError$value(end));
  for (i = start; i < end; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    accumulator.push(a[i]);
  }
  return accumulator;
};

$.Lists_getRange$bailout = function(state0, a, start, length$, accumulator) {
  var end, t1, i;
  if ($.ltB(length$, 0))
    throw $.$$throw($.ArgumentError$("length"));
  if ($.ltB(start, 0))
    throw $.$$throw($.RangeError$value(start));
  end = $.add(start, length$);
  t1 = $.getInterceptor$JSStringJSArray(a);
  if ($.gtB(end, t1.get$length(a)))
    throw $.$$throw($.RangeError$value(end));
  for (i = start; $.ltB(i, end); i = $.add(i, 1))
    accumulator.push(t1.operator$index$1(a, i));
  return accumulator;
};

$.port = function() {
  if ($.lazyPort == null)
    $.lazyPort = $.ReceivePort_ReceivePort();
  return $.lazyPort;
};

$.ReceivePort_ReceivePort = function() {
  return $.ReceivePortImpl$();
};

$.Random_Random = function(seed) {
  return $.CONSTANT13;
};

$._AttributeClassSet$ = function(_element) {
  return new $._AttributeClassSet(_element);
};

$.Uri$ = function(uri) {
  var t1, t2;
  t1 = $.get$Uri__splitRe().firstMatch$1(uri);
  t2 = $.getInterceptor$JSStringJSArray(t1);
  return new $.Uri($.Uri__emptyIfNull(t2.operator$index$1(t1, 1)), $.Uri__emptyIfNull(t2.operator$index$1(t1, 2)), $.Uri__emptyIfNull(t2.operator$index$1(t1, 3)), $.Uri__parseIntOrZero(t2.operator$index$1(t1, 4)), $.Uri__emptyIfNull(t2.operator$index$1(t1, 5)), $.Uri__emptyIfNull(t2.operator$index$1(t1, 6)), $.Uri__emptyIfNull(t2.operator$index$1(t1, 7)));
};

$.Uri__emptyIfNull = function(val) {
  return !(val == null) ? val : "";
};

$.Uri__parseIntOrZero = function(val) {
  if (!(val == null) && !$.eqB(val, ""))
    return $.int_parse(val, null, null);
  else
    return 0;
};

$.Uri__addIfNonEmpty = function(sb, test, first, second) {
  var t1;
  if (!("" === test)) {
    t1 = $.getInterceptor$JSArray(sb);
    t1.add$1(sb, first == null ? "null" : first);
    t1.add$1(sb, second == null ? "null" : second);
  }
};

$.ViewModel$ = function() {
  return new $.ViewModel(true, true);
};

$.AppModel$ = function() {
  return new $.AppModel([]);
};

$.$$Todo = function() {
  return $.ObjectoryQueryBuilder$("Todo");
};

$.app = function() {
  if ($._app == null) {
    $._app = $.AppModel$();
    var t1 = $.ObjectoryWebsocketBrowserImpl$($.get$DefaultUri(), new $.app_anon(), false);
    $.objectory(t1);
    $.objectory0().initDomainModel$0().then$1(new $.app_anon0());
  }
  return $._app;
};

$.Todo$ = function(newTask) {
  var t1 = new $.Todo(false, null, null, null, false);
  t1.BasePersistentObject$0();
  t1.Todo$1(newTask);
  return t1;
};

$.EditableLabel$forElement = function(e) {
  var t1 = new $.EditableLabel(null, null, null, null, null, null, e, null);
  t1.WebComponent$forElement$1(e);
  return t1;
};

$.main = function() {
  var t1, t2;
  t1 = new $.main_updateFilters();
  t2 = $.window().get$on().get$hashChange();
  $.getInterceptor$JSArray(t2).add$1(t2, t1);
  t2 = $.window().get$on().get$popState();
  $.getInterceptor$JSArray(t2).add$1(t2, t1);
};

$.addTodo = function(e) {
  var input, todo, t1;
  e.preventDefault$0();
  input = $.query("#new-todo");
  if ($.eqB(input.get$value(), ""))
    return;
  todo = $.Todo$(input.get$value());
  t1 = $.app().get$todos();
  $.getInterceptor$JSArray(t1).add$1(t1, todo);
  $.objectory0().save$1(todo);
  input.set$value("");
};

$.init_autogenerated = function() {
  var t1, _root, __t, __todoapp, __e0, __main;
  t1 = {};
  _root = $.document().get$body();
  t1.__toggleAll_1 = null;
  __t = $.Template$(_root);
  __todoapp = _root.query$1("#todoapp");
  __e0 = __todoapp.query$1("#header").query$1("#__e-0");
  __t.listen$2(__e0.query$1("#new-todo").get$on().get$change(), new $.init_autogenerated_anon());
  __t.listen$2(__e0.get$on().get$submit(), new $.init_autogenerated_anon0());
  __main = __todoapp.query$1("#main");
  t1.__toggleAll_1 = __main.query$1("#toggle-all");
  __t.listen$2(t1.__toggleAll_1.get$on().get$change(), new $.init_autogenerated_anon1(t1));
  __t.oneWayBind$3(new $.init_autogenerated_anon2(), new $.init_autogenerated_anon3(t1), false);
  __t.loop$3(__main.query$1("#todo-list").query$1("#__e-3"), new $.init_autogenerated_anon4(), new $.init_autogenerated_anon5());
  __t.conditional$3(__todoapp.query$1("#__e-8"), new $.init_autogenerated_anon6(), new $.init_autogenerated_anon7());
  _root.query$1("#info");
  __t.create$0();
  __t.insert$0();
};

$.main0 = function() {
  $.main();
  $.init_autogenerated();
};

$.RouterOptions$forElement = function(e) {
  var t1 = new $.RouterOptions(null, null, null, e, null);
  t1.WebComponent$forElement$1(e);
  return t1;
};

$.TodoRow$forElement = function(e) {
  var t1 = new $.TodoRow(null, null, null, null, null, null, null, e, null);
  t1.WebComponent$forElement$1(e);
  return t1;
};

$.JsonUnsupportedObjectError$ = function(unsupportedObject) {
  return new $.JsonUnsupportedObjectError(unsupportedObject, null);
};

$.JsonUnsupportedObjectError$withCause = function(unsupportedObject, cause) {
  return new $.JsonUnsupportedObjectError(unsupportedObject, cause);
};

$.JSON_EXT_parse = function(json) {
  return $._JsonParser$(json).parseToplevel$0();
};

$.JSON_EXT_stringify = function(object) {
  return $._JsonStringifier_stringify(object);
};

$._JsonParser$ = function(json) {
  var t1 = new $._JsonParser(json, $.getInterceptor$JSStringJSArray(json).get$length(json), 0);
  t1._JsonParser$1(json);
  return t1;
};

$._JsonStringifier$ = function(sb) {
  return new $._JsonStringifier(sb, []);
};

$._JsonStringifier_stringify = function(object) {
  var output = $.StringBuffer_StringBuffer("");
  $._JsonStringifier$(output).stringifyValue$1(object);
  return $.getInterceptor(output).toString$0(output);
};

$._JsonStringifier_escape = function(sb, s) {
  var t1, length$, charCodes, needsEscape, i, charCode, t2;
  t1 = $.getInterceptor$JSStringJSArray(s);
  length$ = t1.get$length(s);
  charCodes = $.List_List(0, $.$int);
  $.setRuntimeTypeInfo(charCodes, [$.$int]);
  for (needsEscape = false, i = 0; $.ltB(i, length$); ++i) {
    charCode = t1.charCodeAt$1(s, i);
    if ($.ltB(charCode, 32)) {
      charCodes.push(92);
      switch (charCode) {
        case 8:
          charCodes.push(98);
          break;
        case 9:
          charCodes.push(116);
          break;
        case 10:
          charCodes.push(110);
          break;
        case 12:
          charCodes.push(102);
          break;
        case 13:
          charCodes.push(114);
          break;
        default:
          charCodes.push(117);
          t2 = $.and($.shr(charCode, 12), 15);
          if ($.ltB(t2, 10)) {
            if (typeof t2 !== "number")
              throw $.iae(t2);
            t2 = 48 + t2;
          } else {
            if (typeof t2 !== "number")
              throw $.iae(t2);
            t2 = 87 + t2;
          }
          charCodes.push(t2);
          t2 = $.and($.shr(charCode, 8), 15);
          if ($.ltB(t2, 10)) {
            if (typeof t2 !== "number")
              throw $.iae(t2);
            t2 = 48 + t2;
          } else {
            if (typeof t2 !== "number")
              throw $.iae(t2);
            t2 = 87 + t2;
          }
          charCodes.push(t2);
          t2 = $.and($.shr(charCode, 4), 15);
          if ($.ltB(t2, 10)) {
            if (typeof t2 !== "number")
              throw $.iae(t2);
            t2 = 48 + t2;
          } else {
            if (typeof t2 !== "number")
              throw $.iae(t2);
            t2 = 87 + t2;
          }
          charCodes.push(t2);
          t2 = $.and(charCode, 15);
          if ($.ltB(t2, 10)) {
            if (typeof t2 !== "number")
              throw $.iae(t2);
            t2 = 48 + t2;
          } else {
            if (typeof t2 !== "number")
              throw $.iae(t2);
            t2 = 87 + t2;
          }
          charCodes.push(t2);
          break;
      }
      needsEscape = true;
    } else if ($.eqB(charCode, 34) || $.eqB(charCode, 92)) {
      charCodes.push(92);
      charCodes.push(charCode);
      needsEscape = true;
    } else
      charCodes.push(charCode);
  }
  t1 = $.getInterceptor$JSArray(sb);
  t1.add$1(sb, needsEscape ? $.String_String$fromCharCodes(charCodes) : s);
};

$.BsonBinary$ = function(length$) {
  var t1 = new $.BsonBinary(null, $.makeUint8List(length$), 0, 0, null);
  t1.BsonBinary$1(length$);
  return t1;
};

$.BsonBinary$fromHexString = function(_hexString) {
  return new $.BsonBinary(null, null, null, null, _hexString);
};

$.DbRef$ = function(collection, id) {
  var t1 = new $.DbRef(collection, id, null);
  t1.DbRef$2(collection, id);
  return t1;
};

$.ObjectId$ = function(clientMode) {
  var t1 = new $.ObjectId(null);
  t1.ObjectId$1$clientMode(clientMode);
  return t1;
};

$.ObjectId$fromBsonBinary = function(id) {
  return new $.ObjectId(id);
};

$.ObjectId_ObjectId$fromHexString = function(hexString) {
  return $.ObjectId$fromBsonBinary($.BsonBinary$fromHexString(hexString));
};

$.makeUint8List = function(size) {
  return $.BsonPlatform_platform.makeUint8List$1(size);
};

$.makeByteArray = function(from) {
  return $.BsonPlatform_platform.makeByteArray$1(from);
};

$.BsonRegexp$ = function(pattern, caseInsensitive, dotAll, extended, multiLine, options) {
  var t1 = new $.BsonRegexp(pattern, options, null, null, multiLine, caseInsensitive, null, dotAll, extended);
  t1.BsonRegexp$6$caseInsensitive$dotAll$extended$multiLine$options(pattern, caseInsensitive, dotAll, extended, multiLine, options);
  return t1;
};

$.BsonString$ = function(data) {
  return new $.BsonString(data, null);
};

$.BsonCode$ = function(dataValue) {
  return new $.BsonCode(dataValue, null);
};

$.BsonCString$ = function(data, useKeyCash) {
  return new $.BsonCString(useKeyCash, data, null);
};

$.Statics_nextIncrement = function() {
  var t1 = $.Statics__current_increment;
  $.Statics__current_increment = $.add(t1, 1);
  return t1;
};

$.Statics_MaxBits = function(bits) {
  var t1, i;
  if ($.Statics__maxBits == null) {
    t1 = $.List_List(65, $.$int);
    $.setRuntimeTypeInfo(t1, [$.$int]);
    $.Statics__maxBits = t1;
    $.indexSet($.Statics__maxBits, 0, 0);
    for (i = 1; i < 65; ++i)
      $.indexSet($.Statics__maxBits, i, $.shl(2, i - 1));
  }
  t1 = $.Statics__maxBits;
  return $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, bits);
};

$.Timestamp$ = function(seconds, increment) {
  var t1 = new $.Timestamp(seconds, increment);
  t1.Timestamp$2(seconds, increment);
  return t1;
};

$.objectory0 = function() {
  return $.Objectory_objectoryImpl;
};

$.objectory = function(impl) {
  $.Objectory_objectoryImpl = impl;
  return impl;
};

$.ObjectoryQueryBuilder$ = function(className) {
  var t1 = new $.ObjectoryQueryBuilder(null, className);
  t1.ObjectoryQueryBuilder$1(className);
  return t1;
};

$.ObjectoryMessage$fromList = function(jdata) {
  var t1 = new $.ObjectoryMessage(null, null);
  t1.ObjectoryMessage$fromList$1(jdata);
  return t1;
};

$.ObjectoryWebsocketBrowserImpl$ = function(uri, registerClassesCallback, dropCollectionsOnStartup) {
  var t1 = new $.ObjectoryWebsocketBrowserImpl(null, null, $.Map_Map($.$int, $.Completer), 0, uri, registerClassesCallback, dropCollectionsOnStartup, null, null);
  t1.Objectory$3(uri, registerClassesCallback, dropCollectionsOnStartup);
  return t1;
};

$.updateBinding = function(value, node, stringValue) {
  var isSafeHtml, node0;
  isSafeHtml = typeof value === "object" && value !== null && !!value.is$SafeHtml;
  if (stringValue == null)
    stringValue = $.getInterceptor(value).toString$0(value);
  if (!isSafeHtml && typeof node === "object" && node !== null && node.is$Text())
    node.set$text(stringValue);
  else {
    node0 = isSafeHtml ? $.Element_Element$html(stringValue) : $.Text_Text(stringValue);
    node.replaceWith$1(node0);
    node = node0;
  }
  return node;
};

$.updateCssClass = function(elem, addClasses, classes) {
  var t1, t2;
  if ($.eqB(classes, "") || classes == null)
    return;
  if (addClasses === true)
    if (typeof classes === "string")
      if ($.CONSTANT1.contains$1(classes, " ") === true) {
        t1 = elem.get$classes();
        $.getInterceptor$JSArray(t1).addAll$1(t1, classes.split(" "));
      } else {
        t1 = elem.get$classes();
        $.getInterceptor$JSArray(t1).add$1(t1, classes);
      }
    else {
      t1 = $.getRuntimeTypeInfo(classes);
      t2 = $.String;
      t2 = $.isSubtype(t1[0], t2);
      if (typeof classes === "object" && classes !== null && (classes.constructor === Array || classes.is$List()) && t2) {
        t1 = elem.get$classes();
        $.getInterceptor$JSArray(t1).addAll$1(t1, $.getInterceptor$JSArray(classes).where$1(classes, new $.updateCssClass_anon()));
      } else
        throw $.$$throw($.ArgumentError$("classes must be a String or List<String>."));
    }
  else if (typeof classes === "string")
    if ($.CONSTANT1.contains$1(classes, " ") === true)
      elem.get$classes().removeAll$1(classes.split(" "));
    else
      elem.get$classes().remove$1(classes);
  else {
    t1 = $.getRuntimeTypeInfo(classes);
    t2 = $.String;
    t2 = $.isSubtype(t1[0], t2);
    if (typeof classes === "object" && classes !== null && (classes.constructor === Array || classes.is$List()) && t2)
      elem.get$classes().removeAll$1($.getInterceptor$JSArray(classes).where$1(classes, new $.updateCssClass_anon0()));
    else
      throw $.$$throw($.ArgumentError$("classes must be a String or List<String>."));
  }
};

$.bindCssClasses = function(elem, exp) {
  return $.watchAndInvoke(exp, new $.bindCssClasses_anon(elem), null);
};

$.sanitizeUri = function(uri) {
  if (typeof uri === "object" && uri !== null && !!uri.is$SafeUri)
    return uri.toString$0();
  uri = $.getInterceptor(uri).toString$0(uri);
  return $._isSafeUri(uri) ? uri : "#";
};

$._isSafeUri = function(uri) {
  var scheme, t1;
  scheme = $.Uri$(uri).scheme;
  if ($.eqB(scheme, ""))
    return true;
  t1 = $.getInterceptor$JSString(scheme);
  return $.CONSTANT0.contains$1($.CONSTANT5, t1.toLowerCase$0(scheme)) === true || "MAILTO" === t1.toUpperCase$0(scheme);
};

$.Listener$ = function(target, listener) {
  return new $.Listener(target, listener);
};

$.Binding$ = function(exp, action) {
  return new $.Binding(exp, action, null);
};

$.ClassAttrBinding$ = function(elem, exp) {
  return new $.ClassAttrBinding(elem, exp, null);
};

$.DomPropertyBinding$ = function(getter, setter, isUrl) {
  return new $.DomPropertyBinding(setter, getter, isUrl, null);
};

$.ComponentItem$ = function(elem) {
  return new $.ComponentItem(elem);
};

$.Template$ = function(node) {
  return new $.Template(node, [], []);
};

$.ConditionalTemplate$ = function(reference, exp, bodySetup) {
  return new $.ConditionalTemplate(false, bodySetup, exp, null, reference, [], []);
};

$.LoopTemplate$ = function(reference, exp, iterSetup) {
  return new $.LoopTemplate(iterSetup, exp, null, reference, [], []);
};

$.LoopTemplateInAttribute$ = function(node, exp, iterSetup) {
  return new $.LoopTemplateInAttribute(iterSetup, exp, null, node, [], []);
};

$.watch = function(target, callback, debugName, exception) {
  var isList, t1, exp, e, trace, watcher;
  if (callback == null)
    return new $.watch_anon();
  if ($._watchers == null)
    $._watchers = [];
  isList = false;
  t1 = target;
  if (typeof t1 === "object" && t1 !== null && !!t1.is$Handle)
    exp = $.propertyTypeCast(target, "is$Handle").get$_getter();
  else {
    t1 = target;
    if (typeof t1 === "function" || typeof t1 === "object" && t1 !== null && !!t1.is$Function) {
      exp = target;
      try {
        t1 = target.call$0();
        isList = typeof t1 === "object" && t1 !== null && (t1.constructor === Array || t1.is$List());
      } catch (exception) {
        t1 = $.unwrapException(exception);
        e = t1;
        trace = $.getTraceFromException(exception);
        $.print("error: evaluating " + $.S(!(debugName == null) ? debugName : "<unnamed>") + " " + "watcher threw error (" + $.S(e) + ", " + $.S(trace) + ")");
      }

    } else {
      t1 = target;
      if (typeof t1 === "object" && t1 !== null && (t1.constructor === Array || t1.is$List())) {
        exp = new $.watch_anon0(target);
        isList = true;
      } else
        exp = null;
    }
  }
  watcher = isList === true ? $._ListWatcher$(exp, callback, debugName) : $._Watcher$(exp, callback, debugName);
  t1 = $._watchers;
  $.getInterceptor$JSArray(t1).add$1(t1, watcher);
  return new $.watch_anon1(watcher);
};

$.watchAndInvoke = function(exp, callback, debugName) {
  var res = $.watch(exp, callback, debugName);
  if (typeof exp === "function" || typeof exp === "object" && exp !== null && !!exp.is$Function)
    callback.call$1($.WatchEvent$(null, exp.call$0()));
  else
    callback.call$1($.WatchEvent$(null, exp));
  return res;
};

$.WatchEvent$ = function(oldValue, newValue) {
  return new $.WatchEvent(oldValue, newValue);
};

$._Watcher$ = function(_getter, _callback, debugName) {
  var t1 = new $._Watcher(debugName, _getter, _callback, null);
  t1._Watcher$3(_getter, _callback, debugName);
  return t1;
};

$._unregister = function(watcher) {
  var t1, index;
  t1 = $._watchers;
  index = $.getInterceptor$JSStringJSArray(t1).indexOf$1(t1, watcher);
  if (!$.eqB(index, -1)) {
    t1 = $._watchers;
    $.getInterceptor$JSArray(t1).removeRange$2(t1, index, 1);
  }
};

$.dispatch = function() {
  var total, t1, dirty, total0;
  if ($._watchers == null)
    return;
  total = 0;
  do {
    for (t1 = $._watchers, t1 = $.getInterceptor$JSArray(t1).get$iterator(t1), dirty = false; t1.moveNext$0() === true;)
      if (t1.get$current().compareAndNotify$0() === true)
        dirty = true;
    if (dirty) {
      total0 = total + 1;
      t1 = total < 10;
      total = total0;
    } else
      t1 = false;
  } while (t1);
  if (total === 10)
    $.print("Possible loop in watchers propagation, stopped dispatch.");
};

$._ListWatcher$ = function(getter, callback, debugName, T) {
  var t1 = new $._ListWatcher(debugName, getter, callback, null);
  $.setRuntimeTypeInfo(t1, [T]);
  t1._Watcher$3(getter, callback, debugName);
  t1._ListWatcher$3(getter, callback, debugName);
  return t1;
};

$.WebComponent__matches = function(node, selector) {
  if (typeof node === "object" && node !== null && node.is$Text())
    return $.eq(selector, "*");
  return $.callTypeCast(node, "is$Element").matches$1(selector);
};

$.WebComponent__isActive = function(node) {
  for (node = node.get$parent(); !(node == null); node = node.get$parent())
    if ($.eqB(node.get$tagName(), "CONTENT") || $.eqB(node.get$tagName(), "SHADOW"))
      return false;
  return true;
};

$.WebComponent__distribute = function(insertionPoint, nodes) {
  var t1, t2;
  for (t1 = $.getInterceptor$JSArray(nodes).get$iterator(nodes); t1.moveNext$0() === true;) {
    t2 = t1.get$current();
    insertionPoint.get$parent().insertBefore$2(t2, insertionPoint);
  }
  insertionPoint.remove$0();
};

$._realShadowRoot = function() {
  return $.useShadowDom === true && $.ShadowRoot_supported() === true;
};

$.dynamicBind.call$4 = $.dynamicBind;
$.dynamicBind.$name = "dynamicBind";
$.Primitives__throwFormatException.call$1 = $.Primitives__throwFormatException;
$.Primitives__throwFormatException.$name = "Primitives__throwFormatException";
$.invokeClosure.call$5 = $.invokeClosure;
$.invokeClosure.$name = "invokeClosure";
$.IsolateNatives__processWorkerMessage.call$2 = $.IsolateNatives__processWorkerMessage;
$.IsolateNatives__processWorkerMessage.$name = "IsolateNatives__processWorkerMessage";
$.typeNameInChrome.call$1 = $.typeNameInChrome;
$.typeNameInChrome.$name = "typeNameInChrome";
$.typeNameInSafari.call$1 = $.typeNameInSafari;
$.typeNameInSafari.$name = "typeNameInSafari";
$.typeNameInOpera.call$1 = $.typeNameInOpera;
$.typeNameInOpera.$name = "typeNameInOpera";
$.typeNameInFirefox.call$1 = $.typeNameInFirefox;
$.typeNameInFirefox.$name = "typeNameInFirefox";
$.typeNameInIE.call$1 = $.typeNameInIE;
$.typeNameInIE.$name = "typeNameInIE";
$.constructorNameFallback.call$1 = $.constructorNameFallback;
$.constructorNameFallback.$name = "constructorNameFallback";
$.toStringWrapper.call$0 = $.toStringWrapper;
$.toStringWrapper.$name = "toStringWrapper";
Isolate.$finishClasses($$);
$$ = {};
$.Node = {builtin$cls: 'Node'};
$.Match = {builtin$cls: 'Match'};
$.List = {builtin$cls: 'List'};
$.ReceivePort = {builtin$cls: 'ReceivePort'};
$.Completer = {builtin$cls: 'Completer'};
$.String = {builtin$cls: 'String', is$String: true};
$._ManagerStub = {builtin$cls: '_ManagerStub'};
$.$int = {builtin$cls: '$int'};
$.Element = {builtin$cls: 'Element'};
$.num = {builtin$cls: 'num'};
Isolate.makeConstantList = function(list) {
  list.immutable$list = true;
  list.fixed$length = true;
  return list;
};
$.CONSTANT8 = Isolate.makeConstantList([]);
$.CONSTANT6 = new Isolate.$isolateProperties.ConstantMap(0, {}, Isolate.$isolateProperties.CONSTANT8);
$.CONSTANT13 = new Isolate.$isolateProperties._Random();
$.CONSTANT = new Isolate.$isolateProperties.NullThrownError();
$.CONSTANT15 = Isolate.makeConstantList(["body", "head", "caption", "td", "colgroup", "col", "tr", "tbody", "tfoot", "thead", "track"]);
$.CONSTANT7 = new Isolate.$isolateProperties.ConstantMap(11, {body: "html", head: "html", caption: "table", td: "tr", colgroup: "table", col: "colgroup", tr: "tbody", tbody: "table", tfoot: "table", thead: "table", track: "audio"}, Isolate.$isolateProperties.CONSTANT15);
$.CONSTANT9 = $.createRuntimeType('String');
$.CONSTANT0 = new Isolate.$isolateProperties.JSArray();
$.CONSTANT4 = new Isolate.$isolateProperties.JSNumber();
$.CONSTANT2 = new Isolate.$isolateProperties.JSInt();
$.CONSTANT1 = new Isolate.$isolateProperties.JSString();
$.CONSTANT5 = Isolate.makeConstantList(["http", "https", "ftp", "mailto"]);
$.CONSTANT10 = $.createRuntimeType('bool');
$.CONSTANT11 = $.createRuntimeType('$int');
$.CONSTANT3 = new Isolate.$isolateProperties._DeletedKeySentinel();
$.CONSTANT12 = $.createRuntimeType('$double');
$.CONSTANT14 = new Isolate.$isolateProperties.Object();
$._watchers = null;
$._SAFE_SCHEMES = Isolate.$isolateProperties.CONSTANT5;
$._DateImpl__MAX_MILLISECONDS_SINCE_EPOCH = 8640000000000000;
$.Statics__current_increment = 0;
$.Statics__maxBits = null;
$.Primitives_hashCodeSeed = 0;
$.Primitives_DOLLAR_CHAR_VALUE = 36;
$._getTypeNameOf = null;
$.BsonPlatform_platform = null;
$.ReceivePortImpl__nextFreeId = 1;
$._app = null;
$.Objectory_objectoryImpl = null;
$.Uri__COMPONENT_SCHEME = 1;
$.Uri__COMPONENT_USER_INFO = 2;
$.Uri__COMPONENT_DOMAIN = 3;
$.Uri__COMPONENT_PORT = 4;
$.Uri__COMPONENT_PATH = 5;
$._HashMapImpl__DELETED_KEY = Isolate.$isolateProperties.CONSTANT3;
$.Uri__COMPONENT_QUERY_DATA = 6;
$._HashMapImpl__INITIAL_CAPACITY = 8;
$.Uri__COMPONENT_FRAGMENT = 7;
$._JsonParser_BACKSPACE = 8;
$._JsonParser_TAB = 9;
$._JsonParser_NEW_LINE = 10;
$._JsonParser_FORM_FEED = 12;
$._JsonParser_CARRIAGE_RETURN = 13;
$._JsonParser_SPACE = 32;
$._JsonParser_QUOTE = 34;
$._JsonParser_PLUS = 43;
$._JsonParser_COMMA = 44;
$._JsonParser_MINUS = 45;
$._JsonParser_DOT = 46;
$._JsonParser_SLASH = 47;
$._JsonParser_CHAR_0 = 48;
$._JsonParser_CHAR_1 = 49;
$._JsonParser_CHAR_2 = 50;
$._JsonParser_CHAR_3 = 51;
$._JsonParser_CHAR_4 = 52;
$._JsonParser_CHAR_5 = 53;
$._JsonParser_CHAR_6 = 54;
$._JsonParser_CHAR_7 = 55;
$._JsonParser_CHAR_8 = 56;
$._JsonParser_CHAR_9 = 57;
$._JsonParser_COLON = 58;
$._JsonParser_CHAR_CAPITAL_E = 69;
$.KeyCode_ESC = 27;
$._JsonParser_LBRACKET = 91;
$._JsonParser_RBRACKET = 93;
$._JsonParser_CHAR_B = 98;
$._JsonParser_CHAR_E = 101;
$._JsonParser_CHAR_F = 102;
$._JsonParser_CHAR_R = 114;
$._JsonParser_CHAR_N = 110;
$._JsonParser_CHAR_T = 116;
$._JsonParser_CHAR_U = 117;
$._JsonParser_LBRACE = 123;
$._JsonParser_RBRACE = 125;
$._JsonParser_STRING_LITERAL = 34;
$._JsonParser_NUMBER_LITERAL = 45;
$._JsonParser_NULL_LITERAL = 110;
$._JsonParser_FALSE_LITERAL = 102;
$._JsonParser_TRUE_LITERAL = 116;
$._JsonParser_WHITESPACE = 32;
$._JsonParser_LAST_ASCII = 125;
$._JsonParser_NULL_STRING = "null";
$._JsonParser_TRUE_STRING = "true";
$.lazyPort = null;
$._JsonParser_FALSE_STRING = "false";
$._JsonParser_tokens = null;
$._JsonParser_DOLLAR_SIGN = 36;
$._JsonParser_BACKSLASH = 92;
$._SPAWNED_SIGNAL = "spawned";
$.useShadowDom = false;
$._FutureImpl__VALUE = 1;
$._FutureImpl__INCOMPLETE = 0;
$._FutureImpl__ERROR = 2;
$.getInterceptor$JSStringJSArray = function(receiver) {
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return void 0;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSString = function(receiver) {
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return void 0;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSNumber = function(receiver) {
  if (typeof receiver == "number")
    return $.JSNumber.prototype;
  if (receiver == null)
    return void 0;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor = function(receiver) {
  if (typeof receiver == "number") {
    if (Math.floor(receiver) == receiver)
      return $.JSInt.prototype;
    return $.JSDouble.prototype;
  }
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return $.JSNull.prototype;
  if (typeof receiver == "function")
    return $.JSFunction.prototype;
  if (typeof receiver == "boolean")
    return $.JSBool.prototype;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSArray = function(receiver) {
  if (receiver == null)
    return void 0;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
Isolate.$lazy($, '_splitRe', 'Uri__splitRe', 'get$Uri__splitRe', function() {
  return $.RegExp_RegExp("^(?:([^:/?#.]+):)?(?://(?:([^/?#]*)@)?([\\w\\d\\-\\u0100-\\uffff.%]*)(?::([0-9]+))?)?([^?#]+)?(?:\\?([^#]*))?(?:#(.*))?$", true, false);
});
Isolate.$lazy($, 'MachineId', 'Statics_MachineId', 'get$Statics_MachineId', function() {
  var t1 = $.mul($.Random_Random(null).nextDouble$0(), 16777215);
  t1 = $.getInterceptor$JSNumber(t1).floor$0(t1);
  return $.getInterceptor$JSNumber(t1).toInt$0(t1);
});
Isolate.$lazy($, 'Pid', 'Statics_Pid', 'get$Statics_Pid', function() {
  var t1 = $.mul($.Random_Random(null).nextDouble$0(), 65535);
  t1 = $.getInterceptor$JSNumber(t1).floor$0(t1);
  return $.getInterceptor$JSNumber(t1).toInt$0(t1);
});
Isolate.$lazy($, 'viewModel', 'viewModel', 'get$viewModel', function() {
  return $.ViewModel$();
});
Isolate.$lazy($, 'DefaultUri', 'DefaultUri', 'get$DefaultUri', function() {
  return $.window().get$location().get$host();
});
Isolate.$lazy($, '_START_TAG_REGEXP', '_START_TAG_REGEXP', 'get$_START_TAG_REGEXP', function() {
  return $.RegExp_RegExp("<(\\w+)", true, false);
});
Isolate.$lazy($, 'globalThis', 'globalThis', 'get$globalThis', function() {
  return $.IsolateNatives_computeGlobalThis();
});
Isolate.$lazy($, 'quoteRegExp', 'quoteRegExp', 'get$quoteRegExp', function() {
  return $.JSSyntaxRegExp$("[-[\\]{}()*+?.,\\\\^$|#\\s]", true, false);
});
Isolate.$lazy($, 'thisScript', 'IsolateNatives_thisScript', 'get$IsolateNatives_thisScript', function() {
  return $.IsolateNatives_computeThisScript();
});
Isolate.$lazy($, 'globalWorker', 'globalWorker', 'get$globalWorker', function() {
  return $.get$globalThis()['Worker'];
});
Isolate.$lazy($, 'globalWindow', 'globalWindow', 'get$globalWindow', function() {
  return $.get$globalThis()['window'];
});
Isolate.$lazy($, 'globalPostMessageDefined', 'globalPostMessageDefined', 'get$globalPostMessageDefined', function() {
  return $.get$globalThis()['postMessage'] !== (void 0);
});
var $ = null;
Isolate.$finishClasses($$);
$$ = {};
Isolate = Isolate.$finishIsolateConstructor(Isolate);
var $ = new Isolate();
$.$defineNativeClass = function(cls, desc) {
  var fields = desc[''];
  var fields_array = fields ? fields.split(',') : [];
  for (var i = 0; i < fields_array.length; i++) {
    $.$generateAccessor(fields_array[i], desc);
  }
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var method in desc) {
    if (method) {        if (hasOwnProperty.call(desc, method)) {
        $.dynamicFunction(method)[cls] = desc[method];
      }
    }
  }
};

(function(table) {
  for (var key in table)
    $.defineProperty(Object.prototype, key, table[key]);
})({
  is$JavaScriptIndexingBehavior: function() {
    return false;
  },
  is$Collection: function() {
    return false;
  },
  is$List: function() {
    return false;
  },
  is$Map: function() {
    return false;
  },
  is$Element: function() {
    return false;
  },
  is$Location: function() {
    return false;
  },
  is$ShadowRoot: function() {
    return false;
  },
  is$Text: function() {
    return false;
  },
  toString$0: function() {
    return $.toStringForNativeObject(this);
  },
  get$hashCode: function() {
    return $.hashCodeForNativeObject(this);
  }
});

$.$defineNativeClass("Worker", {
  get$id: function() {
    return this.id;
  },
  set$id: function(i) {
    this.id = i;
  },
  set$onmessage: function(f) {
    this.onmessage = f;
  },
  postMessage$1: function(msg) {
    this.postMessage(msg);
  },
  terminate$0: function() {
    this.terminate();
  }
});

$.$defineNativeClass("HTMLAnchorElement", {"": "hash>,host>",
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("HTMLAreaElement", {"": "hash>,host>"});

$.$defineNativeClass("Attr", {"": "value="});

$.$defineNativeClass("HTMLBodyElement", {
  get$on: function() {
    return $.BodyElementEvents$(this);
  }
});

$.$defineNativeClass("HTMLButtonElement", {"": "value="});

$.$defineNativeClass("CharacterData", {"": "data>,length>",
  remove$0: function() {
    return this.remove();
  }
});

$.$defineNativeClass("CompositionEvent", {"": "data>"});

$.$defineNativeClass("CSSStyleDeclaration", {"": "length>",
  _getPropertyValue$1: function(propertyName) {
    return this.getPropertyValue(propertyName);
  },
  getPropertyValue$1: function(propertyName) {
    var propValue = this._getPropertyValue$1(propertyName);
    return !(propValue == null) ? propValue : "";
  },
  get$clear: function() {
    return this.getPropertyValue$1("clear");
  },
  clear$0: function() {
    return this.get$clear().call$0();
  }
});

$.$defineNativeClass("DataView", {
  setInt16$3$littleEndian: function(byteOffset, value, littleEndian) {
    return this.setInt16(byteOffset,value,littleEndian);
  },
  setInt16$2: function(byteOffset, value) {
    return this.setInt16(byteOffset, value);
  },
  setInt32$3$littleEndian: function(byteOffset, value, littleEndian) {
    return this.setInt32(byteOffset,value,littleEndian);
  },
  setInt32$2: function(byteOffset, value) {
    return this.setInt32(byteOffset, value);
  },
  setInt8$2: function(byteOffset, value) {
    return this.setInt8(byteOffset,value);
  }
});

$.$defineNativeClass("HTMLDetailsElement", {"": "open>"});

$.$defineNativeClass("Document", {"": "$$dom_body:body~",
  get$on: function() {
    return $.DocumentEvents$(this);
  },
  $$dom_getElementById$1: function(elementId) {
    return this.getElementById(elementId);
  },
  $$dom_getElementsByName$1: function(elementName) {
    return this.getElementsByName(elementName);
  },
  $$dom_getElementsByTagName$1: function(tagname) {
    return this.getElementsByTagName(tagname);
  },
  $$dom_querySelector$1: function(selectors) {
    return this.querySelector(selectors);
  },
  $$dom_querySelectorAll$1: function(selectors) {
    return this.querySelectorAll(selectors);
  },
  query$1: function(selectors) {
    if ($.RegExp_RegExp("^#[_a-zA-Z]\\w*$", true, false).hasMatch$1(selectors) === true)
      return this.$$dom_getElementById$1($.getInterceptor$JSString(selectors).substring$1(selectors, 1));
    return this.$$dom_querySelector$1(selectors);
  },
  queryAll$1: function(selectors) {
    var mutableMatches, t2, len, copyOfMatches, t1, i;
    if ($.RegExp_RegExp("^\\[name=[\"'][^'\"]+['\"]\\]$", true, false).hasMatch$1(selectors) === true) {
      mutableMatches = this.$$dom_getElementsByName$1($.CONSTANT1.substring$2(selectors, 7, selectors.length - 2));
      if (typeof mutableMatches !== "string" && (typeof mutableMatches !== "object" || mutableMatches === null || mutableMatches.constructor !== Array && !mutableMatches.is$JavaScriptIndexingBehavior()))
        return this.queryAll$1$bailout(1, mutableMatches);
      t2 = $.getInterceptor$JSStringJSArray(mutableMatches);
      len = mutableMatches.length;
      copyOfMatches = $.List_List$fixedLength(len, null, $.Element);
      $.setRuntimeTypeInfo(copyOfMatches, [$.Element]);
      for (t1 = mutableMatches.length, i = 0; i < len; ++i) {
        if (i >= t1)
          throw $.ioore(i);
        copyOfMatches[i] = mutableMatches[i];
      }
      return $._FrozenElementList$_wrap(copyOfMatches);
    } else if ($.RegExp_RegExp("^[*a-zA-Z0-9]+$", true, false).hasMatch$1(selectors) === true) {
      mutableMatches = this.$$dom_getElementsByTagName$1(selectors);
      if (typeof mutableMatches !== "string" && (typeof mutableMatches !== "object" || mutableMatches === null || mutableMatches.constructor !== Array && !mutableMatches.is$JavaScriptIndexingBehavior()))
        return this.queryAll$1$bailout(3, mutableMatches);
      t2 = $.getInterceptor$JSStringJSArray(mutableMatches);
      len = mutableMatches.length;
      copyOfMatches = $.List_List$fixedLength(len, null, $.Element);
      $.setRuntimeTypeInfo(copyOfMatches, [$.Element]);
      for (t1 = mutableMatches.length, i = 0; i < len; ++i) {
        if (i >= t1)
          throw $.ioore(i);
        copyOfMatches[i] = mutableMatches[i];
      }
      return $._FrozenElementList$_wrap(copyOfMatches);
    } else
      return $._FrozenElementList$_wrap(this.$$dom_querySelectorAll$1(selectors));
  },
  queryAll$1$bailout: function(state0, env0, env1, env2) {
    switch (state0) {
      case 1:
        mutableMatches = env0;
        break;
      case 2:
        len = env2;
        t2 = env1;
        mutableMatches = env0;
        break;
      case 3:
        mutableMatches = env0;
        break;
      case 4:
        t2 = env2;
        mutableMatches = env1;
        len = env0;
        break;
    }
    switch (state0) {
      case 0:
      default:
        var mutableMatches, t2, len, copyOfMatches, i, t1;
        if (state0 === 2 || state0 === 1 || state0 === 0 && $.RegExp_RegExp("^\\[name=[\"'][^'\"]+['\"]\\]$", true, false).hasMatch$1(selectors) === true)
          switch (state0) {
            case 0:
              mutableMatches = this.$$dom_getElementsByName$1($.CONSTANT1.substring$2(selectors, 7, selectors.length - 2));
            case 1:
              state0 = 0;
              t2 = $.getInterceptor$JSStringJSArray(mutableMatches);
              len = t2.get$length(mutableMatches);
            case 2:
              state0 = 0;
              copyOfMatches = $.List_List$fixedLength(len, null, $.Element);
              $.setRuntimeTypeInfo(copyOfMatches, [$.Element]);
              for (i = 0; $.ltB(i, len); ++i) {
                t1 = t2.operator$index$1(mutableMatches, i);
                if (i >= copyOfMatches.length)
                  throw $.ioore(i);
                copyOfMatches[i] = t1;
              }
              return $._FrozenElementList$_wrap(copyOfMatches);
          }
        else
          switch (state0) {
            case 0:
            default:
              if (state0 === 4 || state0 === 3 || state0 === 0 && $.RegExp_RegExp("^[*a-zA-Z0-9]+$", true, false).hasMatch$1(selectors) === true)
                switch (state0) {
                  case 0:
                    mutableMatches = this.$$dom_getElementsByTagName$1(selectors);
                  case 3:
                    state0 = 0;
                    t2 = $.getInterceptor$JSStringJSArray(mutableMatches);
                    len = t2.get$length(mutableMatches);
                  case 4:
                    state0 = 0;
                    copyOfMatches = $.List_List$fixedLength(len, null, $.Element);
                    $.setRuntimeTypeInfo(copyOfMatches, [$.Element]);
                    for (i = 0; $.ltB(i, len); ++i) {
                      t1 = t2.operator$index$1(mutableMatches, i);
                      if (i >= copyOfMatches.length)
                        throw $.ioore(i);
                      copyOfMatches[i] = t1;
                    }
                    return $._FrozenElementList$_wrap(copyOfMatches);
                }
              else
                return $._FrozenElementList$_wrap(this.$$dom_querySelectorAll$1(selectors));
          }
    }
  }
});

$.$defineNativeClass("DocumentFragment", {
  get$children: function() {
    if (this._children == null)
      this._children = $.FilteredElementList$(this);
    return this._children;
  },
  query$1: function(selectors) {
    return this.$$dom_querySelector$1(selectors);
  },
  queryAll$1: function(selectors) {
    return $._FrozenElementList$_wrap(this.$$dom_querySelectorAll$1(selectors));
  },
  set$innerHtml: function(value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("set$innerHtml")) {
      var t1, e, nodes;
      t1 = this.get$nodes();
      $.getInterceptor$JSArray(t1).clear$0(t1);
      e = $.Element_Element$tag("div");
      e.set$innerHtml(value);
      nodes = $.List_List$from(e.get$nodes());
      $.setRuntimeTypeInfo(nodes, []);
      t1 = this.get$nodes();
      $.getInterceptor$JSArray(t1).addAll$1(t1, nodes);
    } else
      return Object.prototype.set$innerHtml.call(this, value);
  },
  get$id: function() {
    return "";
  },
  get$tagName: function() {
    return "";
  },
  get$parent: function() {
    return;
  },
  get$attributes: function() {
    return $.CONSTANT6;
  },
  get$classes: function() {
    return $._FrozenCssClassSet$();
  },
  blur$0: function() {
  },
  get$blur: function() {
    return new $.BoundClosure(this, "blur$0");
  },
  focus$0: function() {
  },
  click$0: function() {
  },
  get$click: function() {
    return new $.BoundClosure(this, "click$0");
  },
  set$id: function(value) {
    throw $.$$throw($.UnsupportedError$("ID can't be set for document fragments."));
  },
  get$on: function() {
    return $.ElementEvents$(this);
  },
  $$dom_querySelector$1: function(selectors) {
    return this.querySelector(selectors);
  },
  $$dom_querySelectorAll$1: function(selectors) {
    return this.querySelectorAll(selectors);
  }
});

$.$defineNativeClass("DocumentType", {
  remove$0: function() {
    return this.remove();
  }
});

$.$defineNativeClass("DOMException", {"": "message>",
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("Element", {"": "xtag=,$$dom_children:children~,id=,innerHtml:innerHTML|,$$dom_className:className},$$dom_firstElementChild:firstElementChild~,$$dom_lastElementChild:lastElementChild~,tagName>",
  get$attributes: function() {
    return $._ElementAttributeMap$(this);
  },
  get$children: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$children")) {
      return $._ChildrenElementList$_wrap(this);
    } else
      return Object.prototype.get$children.call(this);
  },
  set$children: function(value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("set$children")) {
      var copy, children, t1;
      copy = $.List_List$from(value);
      $.setRuntimeTypeInfo(copy, []);
      children = this.get$children();
      t1 = $.getInterceptor$JSArray(children);
      t1.clear$0(children);
      t1.addAll$1(children, copy);
    } else
      return Object.prototype.set$children.call(this, value);
  },
  query$1: function(selectors) {
    return this.$$dom_querySelector$1(selectors);
  },
  queryAll$1: function(selectors) {
    return $._FrozenElementList$_wrap(this.$$dom_querySelectorAll$1(selectors));
  },
  get$classes: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$classes")) {
      return $._ElementCssClassSet$(this);
    } else
      return Object.prototype.get$classes.call(this);
  },
  matches$1: function(selectors) {
    if (!!this.matches)
      return this.matches(selectors);
    else if (!!this.webkitMatchesSelector)
      return this.webkitMatchesSelector(selectors);
    else if (!!this.mozMatchesSelector)
      return this.mozMatchesSelector(selectors);
    else if (!!this.msMatchesSelector)
      return this.msMatchesSelector(selectors);
  },
  get$on: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$on")) {
      return $.ElementEvents$(this);
    } else
      return Object.prototype.get$on.call(this);
  },
  click$0: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("click$0")) {
      return this.click();
    } else
      return Object.prototype.click$0.call(this);
  },
  get$click: function() {
    return new $.BoundClosure(this, "click$0");
  },
  blur$0: function() {
    return this.blur();
  },
  get$blur: function() {
    return new $.BoundClosure(this, "blur$0");
  },
  focus$0: function() {
    return this.focus();
  },
  $$dom_getAttribute$1: function(name) {
    return this.getAttribute(name);
  },
  $$dom_hasAttribute$1: function(name) {
    return this.hasAttribute(name);
  },
  $$dom_querySelector$1: function(selectors) {
    return this.querySelector(selectors);
  },
  $$dom_querySelectorAll$1: function(selectors) {
    return this.querySelectorAll(selectors);
  },
  $$dom_removeAttribute$1: function(name) {
    return this.removeAttribute(name);
  },
  $$dom_setAttribute$2: function(name, value) {
    return this.setAttribute(name,value);
  },
  createShadowRoot$0: function() {
    return this.webkitCreateShadowRoot();
  },
  is$Element: function() {
    return true;
  }
});

$.$defineNativeClass("ErrorEvent", {"": "message>"});

$.$defineNativeClass("Event", {
  preventDefault$0: function() {
    return this.preventDefault();
  }
});

$.$defineNativeClass("EventException", {"": "message>",
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("EventTarget", {
  get$on: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$on")) {
      return $.Events$(this);
    } else
      return Object.prototype.get$on.call(this);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$$dom_addEventListener$3")) {
      return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
    } else
      return Object.prototype.$$dom_addEventListener$3.call(this, type, listener, useCapture);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$$dom_removeEventListener$3")) {
      return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
    } else
      return Object.prototype.$$dom_removeEventListener$3.call(this, type, listener, useCapture);
  }
});

$.$defineNativeClass("FileException", {"": "message>",
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("Float32Array", {
  get$length: function() {
    return this.length;
  },
  operator$index$1: function(index) {
    return this[index];
  },
  operator$indexSet$2: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this, $.num);
  },
  contains$1: function(element) {
    return $.Collections_contains(this, element);
  },
  forEach$1: function(f) {
    return $.Collections_forEach(this, f);
  },
  join$1: function(separator) {
    return $.Collections_joinList(this, separator);
  },
  mappedBy$1: function(f) {
    return $.MappedList$(this, f, $.num, null);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f, $.num);
  },
  every$1: function(f) {
    return $.Collections_every(this, f);
  },
  toList$0: function() {
    var t1 = $.List_List$from(this, $.num);
    $.setRuntimeTypeInfo(t1, [$.num]);
    return t1;
  },
  get$isEmpty: function() {
    return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.gtB(t1.get$length(this), 0))
      return this.operator$index$1($.sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
  },
  setRange$4: function(start, rangeLength, from, startFrom) {
    throw $.$$throw($.UnsupportedError$("Cannot setRange on immutable List."));
  },
  setRange$3: function(start, rangeLength, from) {
    return this.setRange$4(start, rangeLength, from, null);
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  is$List: function() {
    return true;
  },
  is$Collection: function() {
    return true;
  },
  is$JavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("Float64Array", {
  get$length: function() {
    return this.length;
  },
  operator$index$1: function(index) {
    return this[index];
  },
  operator$indexSet$2: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this, $.num);
  },
  contains$1: function(element) {
    return $.Collections_contains(this, element);
  },
  forEach$1: function(f) {
    return $.Collections_forEach(this, f);
  },
  join$1: function(separator) {
    return $.Collections_joinList(this, separator);
  },
  mappedBy$1: function(f) {
    return $.MappedList$(this, f, $.num, null);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f, $.num);
  },
  every$1: function(f) {
    return $.Collections_every(this, f);
  },
  toList$0: function() {
    var t1 = $.List_List$from(this, $.num);
    $.setRuntimeTypeInfo(t1, [$.num]);
    return t1;
  },
  get$isEmpty: function() {
    return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.gtB(t1.get$length(this), 0))
      return this.operator$index$1($.sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
  },
  setRange$4: function(start, rangeLength, from, startFrom) {
    throw $.$$throw($.UnsupportedError$("Cannot setRange on immutable List."));
  },
  setRange$3: function(start, rangeLength, from) {
    return this.setRange$4(start, rangeLength, from, null);
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  is$List: function() {
    return true;
  },
  is$Collection: function() {
    return true;
  },
  is$JavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("HTMLFormElement", {"": "length>",
  reset$0: function() {
    return this.reset();
  },
  submit$0: function() {
    return this.submit();
  },
  get$submit: function() {
    return new $.BoundClosure(this, "submit$0");
  }
});

$.$defineNativeClass("HTMLFrameElement", {"": "location>"});

$.$defineNativeClass("HTMLFrameSetElement", {
  get$on: function() {
    return $.FrameSetElementEvents$(this);
  }
});

$.$defineNativeClass("HTMLCollection", {
  get$length: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$length")) {
      return this.length;
    } else
      return Object.prototype.get$length.call(this);
  },
  operator$index$1: function(index) {
    return this[index];
  },
  operator$indexSet$2: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this, $.Node);
  },
  contains$1: function(element) {
    return $.Collections_contains(this, element);
  },
  forEach$1: function(f) {
    return $.Collections_forEach(this, f);
  },
  join$1: function(separator) {
    return $.Collections_joinList(this, separator);
  },
  mappedBy$1: function(f) {
    return $.MappedList$(this, f, $.Node, null);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f, $.Node);
  },
  every$1: function(f) {
    return $.Collections_every(this, f);
  },
  toList$0: function() {
    var t1 = $.List_List$from(this, $.Node);
    $.setRuntimeTypeInfo(t1, [$.Node]);
    return t1;
  },
  get$isEmpty: function() {
    return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("set$length")) {
      throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
    } else
      return Object.prototype.set$length.call(this, value);
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.gtB(t1.get$length(this), 0))
      return this.operator$index$1($.sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
  },
  setRange$4: function(start, rangeLength, from, startFrom) {
    throw $.$$throw($.UnsupportedError$("Cannot setRange on immutable List."));
  },
  setRange$3: function(start, rangeLength, from) {
    return this.setRange$4(start, rangeLength, from, null);
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  is$List: function() {
    return true;
  },
  is$Collection: function() {
    return true;
  },
  is$JavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("HTMLDocument", {
  get$body: function() {
    return $.document().get$$$dom_body();
  }
});

$.$defineNativeClass("HTMLOptionsCollection", {
  get$length: function() {
    return this.length;
  },
  set$length: function(value) {
    this.length = value;
  },
  remove$1: function(index) {
    return this.remove(index);
  }
});

$.$defineNativeClass("XMLHttpRequestException", {"": "message>",
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("HTMLImageElement", {
  complete$1: function(arg0) {
    return this.complete.call$1(arg0);
  }
});

$.$defineNativeClass("HTMLInputElement", {"": "checked=,pattern>,value=",
  get$on: function() {
    return $.InputElementEvents$(this);
  },
  is$Element: function() {
    return true;
  }
});

$.$defineNativeClass("Int16Array", {
  get$length: function() {
    return this.length;
  },
  operator$index$1: function(index) {
    return this[index];
  },
  operator$indexSet$2: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this, $.$int);
  },
  contains$1: function(element) {
    return $.Collections_contains(this, element);
  },
  forEach$1: function(f) {
    return $.Collections_forEach(this, f);
  },
  join$1: function(separator) {
    return $.Collections_joinList(this, separator);
  },
  mappedBy$1: function(f) {
    return $.MappedList$(this, f, $.$int, null);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f, $.$int);
  },
  every$1: function(f) {
    return $.Collections_every(this, f);
  },
  toList$0: function() {
    var t1 = $.List_List$from(this, $.$int);
    $.setRuntimeTypeInfo(t1, [$.$int]);
    return t1;
  },
  get$isEmpty: function() {
    return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.gtB(t1.get$length(this), 0))
      return this.operator$index$1($.sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
  },
  setRange$4: function(start, rangeLength, from, startFrom) {
    throw $.$$throw($.UnsupportedError$("Cannot setRange on immutable List."));
  },
  setRange$3: function(start, rangeLength, from) {
    return this.setRange$4(start, rangeLength, from, null);
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  is$List: function() {
    return true;
  },
  is$Collection: function() {
    return true;
  },
  is$JavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("Int32Array", {
  get$length: function() {
    return this.length;
  },
  operator$index$1: function(index) {
    return this[index];
  },
  operator$indexSet$2: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this, $.$int);
  },
  contains$1: function(element) {
    return $.Collections_contains(this, element);
  },
  forEach$1: function(f) {
    return $.Collections_forEach(this, f);
  },
  join$1: function(separator) {
    return $.Collections_joinList(this, separator);
  },
  mappedBy$1: function(f) {
    return $.MappedList$(this, f, $.$int, null);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f, $.$int);
  },
  every$1: function(f) {
    return $.Collections_every(this, f);
  },
  toList$0: function() {
    var t1 = $.List_List$from(this, $.$int);
    $.setRuntimeTypeInfo(t1, [$.$int]);
    return t1;
  },
  get$isEmpty: function() {
    return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.gtB(t1.get$length(this), 0))
      return this.operator$index$1($.sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
  },
  setRange$4: function(start, rangeLength, from, startFrom) {
    throw $.$$throw($.UnsupportedError$("Cannot setRange on immutable List."));
  },
  setRange$3: function(start, rangeLength, from) {
    return this.setRange$4(start, rangeLength, from, null);
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  is$List: function() {
    return true;
  },
  is$Collection: function() {
    return true;
  },
  is$JavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("Int8Array", {
  get$length: function() {
    return this.length;
  },
  operator$index$1: function(index) {
    return this[index];
  },
  operator$indexSet$2: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this, $.$int);
  },
  contains$1: function(element) {
    return $.Collections_contains(this, element);
  },
  forEach$1: function(f) {
    return $.Collections_forEach(this, f);
  },
  join$1: function(separator) {
    return $.Collections_joinList(this, separator);
  },
  mappedBy$1: function(f) {
    return $.MappedList$(this, f, $.$int, null);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f, $.$int);
  },
  every$1: function(f) {
    return $.Collections_every(this, f);
  },
  toList$0: function() {
    var t1 = $.List_List$from(this, $.$int);
    $.setRuntimeTypeInfo(t1, [$.$int]);
    return t1;
  },
  get$isEmpty: function() {
    return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.gtB(t1.get$length(this), 0))
      return this.operator$index$1($.sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
  },
  setRange$4: function(start, rangeLength, from, startFrom) {
    throw $.$$throw($.UnsupportedError$("Cannot setRange on immutable List."));
  },
  setRange$3: function(start, rangeLength, from) {
    return this.setRange$4(start, rangeLength, from, null);
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  is$List: function() {
    return true;
  },
  is$Collection: function() {
    return true;
  },
  is$JavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("KeyboardEvent", {
  get$keyCode: function() {
    return this.keyCode;
  }
});

$.$defineNativeClass("HTMLLIElement", {"": "value="});

$.$defineNativeClass("Location", {"": "hash>,host>",
  toString$0: function() {
    return this.toString();
  },
  is$Location: function() {
    return true;
  }
});

$.$defineNativeClass("HTMLMediaElement", {"": "error>",
  get$on: function() {
    return $.MediaElementEvents$(this);
  }
});

$.$defineNativeClass("MediaKeyEvent", {"": "message>"});

$.$defineNativeClass("MessageEvent", {"": "ports>",
  get$data: function() {
    return $.convertNativeToDart_SerializedScriptValue(this.data);
  }
});

$.$defineNativeClass("HTMLMeterElement", {"": "value="});

$.$defineNativeClass("MutationEvent", {"": "newValue>"});

$.$defineNativeClass("NamedNodeMap", {
  get$length: function() {
    return this.length;
  },
  operator$index$1: function(index) {
    return this[index];
  },
  operator$indexSet$2: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this, $.Node);
  },
  contains$1: function(element) {
    return $.Collections_contains(this, element);
  },
  forEach$1: function(f) {
    return $.Collections_forEach(this, f);
  },
  join$1: function(separator) {
    return $.Collections_joinList(this, separator);
  },
  mappedBy$1: function(f) {
    return $.MappedList$(this, f, $.Node, null);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f, $.Node);
  },
  every$1: function(f) {
    return $.Collections_every(this, f);
  },
  toList$0: function() {
    var t1 = $.List_List$from(this, $.Node);
    $.setRuntimeTypeInfo(t1, [$.Node]);
    return t1;
  },
  get$isEmpty: function() {
    return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.gtB(t1.get$length(this), 0))
      return this.operator$index$1($.sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
  },
  setRange$4: function(start, rangeLength, from, startFrom) {
    throw $.$$throw($.UnsupportedError$("Cannot setRange on immutable List."));
  },
  setRange$3: function(start, rangeLength, from) {
    return this.setRange$4(start, rangeLength, from, null);
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  is$List: function() {
    return true;
  },
  is$Collection: function() {
    return true;
  },
  is$JavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("Node", {"": "$$dom_attributes:attributes~,$$dom_childNodes:childNodes~,$$dom_localName:localName~,$$dom_namespaceUri:namespaceURI~,nextNode:nextSibling~,parent:parentElement~,parentNode>,text:textContent|",
  get$nodes: function() {
    return $._ChildNodeListLazy$(this);
  },
  remove$0: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("remove$0")) {
      var t1 = this.parentNode;
      if (!(t1 == null))
        t1.$$dom_removeChild$1(this);
    } else
      return Object.prototype.remove$0.call(this);
  },
  replaceWith$1: function(otherNode, exception) {
    var parent$;
    try {
      parent$ = this.parentNode;
      parent$.$$dom_replaceChild$2(otherNode, this);
    } catch (exception) {
      $.unwrapException(exception);
    }

    return this;
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_appendChild$1: function(newChild) {
    return this.appendChild(newChild);
  },
  contains$1: function(other) {
    return this.contains(other);
  },
  insertBefore$2: function(newChild, refChild) {
    return this.insertBefore(newChild,refChild);
  },
  $$dom_removeChild$1: function(oldChild) {
    return this.removeChild(oldChild);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_replaceChild$2: function(newChild, oldChild) {
    return this.replaceChild(newChild,oldChild);
  }
});

$.$defineNativeClass("NodeList", {
  get$length: function() {
    return this.length;
  },
  operator$index$1: function(index) {
    return this[index];
  },
  operator$indexSet$2: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this, $.Node);
  },
  contains$1: function(element) {
    return $.Collections_contains(this, element);
  },
  forEach$1: function(f) {
    return $.Collections_forEach(this, f);
  },
  join$1: function(separator) {
    return $.Collections_joinList(this, separator);
  },
  mappedBy$1: function(f) {
    return $.MappedList$(this, f, $.Node, null);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f, $.Node);
  },
  every$1: function(f) {
    return $.Collections_every(this, f);
  },
  toList$0: function() {
    var t1 = $.List_List$from(this, $.Node);
    $.setRuntimeTypeInfo(t1, [$.Node]);
    return t1;
  },
  get$isEmpty: function() {
    return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.gtB(t1.get$length(this), 0))
      return this.operator$index$1($.sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
  },
  setRange$4: function(start, rangeLength, from, startFrom) {
    throw $.$$throw($.UnsupportedError$("Cannot setRange on immutable List."));
  },
  setRange$3: function(start, rangeLength, from) {
    return this.setRange$4(start, rangeLength, from, null);
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  is$List: function() {
    return true;
  },
  is$Collection: function() {
    return true;
  },
  is$JavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("HTMLObjectElement", {"": "data>"});

$.$defineNativeClass("HTMLOptionElement", {"": "value="});

$.$defineNativeClass("HTMLOutputElement", {"": "value="});

$.$defineNativeClass("HTMLParamElement", {"": "value="});

$.$defineNativeClass("PositionError", {"": "message>"});

$.$defineNativeClass("ProcessingInstruction", {"": "data>"});

$.$defineNativeClass("HTMLProgressElement", {"": "value="});

$.$defineNativeClass("RadioNodeList", {"": "value="});

$.$defineNativeClass("RangeException", {"": "message>",
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("HTMLSelectElement", {"": "length=,value="});

$.$defineNativeClass("ShadowRoot", {"": "applyAuthorStyles<,innerHtml:innerHTML|",
  is$ShadowRoot: function() {
    return true;
  }
});

$.$defineNativeClass("SpeechRecognitionError", {"": "error>,message>"});

$.$defineNativeClass("SQLError", {"": "message>"});

$.$defineNativeClass("SQLException", {"": "message>"});

$.$defineNativeClass("Storage", {
  containsKey$1: function(key) {
    return !(this.$$dom_getItem$1(key) == null);
  },
  operator$index$1: function(key) {
    return this.$$dom_getItem$1(key);
  },
  operator$indexSet$2: function(key, value) {
    this.$$dom_setItem$2(key, value);
  },
  remove$1: function(key) {
    var value = this.operator$index$1(key);
    this.$$dom_removeItem$1(key);
    return value;
  },
  clear$0: function() {
    return this.$$dom_clear$0();
  },
  forEach$1: function(f) {
    var i, key;
    for (i = 0; true; ++i) {
      key = this.$$dom_key$1(i);
      if (key == null)
        return;
      f.call$2(key, this.operator$index$1(key));
    }
  },
  get$keys: function() {
    var keys = [];
    this.forEach$1(new $.Storage_keys_anon(keys));
    return keys;
  },
  get$values: function() {
    var values = [];
    this.forEach$1(new $.Storage_values_anon(values));
    return values;
  },
  get$length: function() {
    return this.length;
  },
  get$isEmpty: function() {
    return this.$$dom_key$1(0) == null;
  },
  $$dom_clear$0: function() {
    return this.clear();
  },
  $$dom_getItem$1: function(key) {
    return this.getItem(key);
  },
  $$dom_key$1: function(index) {
    return this.key(index);
  },
  $$dom_removeItem$1: function(key) {
    return this.removeItem(key);
  },
  $$dom_setItem$2: function(key, data) {
    return this.setItem(key,data);
  },
  is$Map: function() {
    return true;
  }
});

$.$defineNativeClass("StorageEvent", {"": "key>,newValue>,oldValue>"});

$.$defineNativeClass("Text", {
  is$Text: function() {
    return true;
  }
});

$.$defineNativeClass("HTMLTextAreaElement", {"": "value="});

$.$defineNativeClass("TextEvent", {"": "data>"});

$.$defineNativeClass("Uint16Array", {
  get$length: function() {
    return this.length;
  },
  operator$index$1: function(index) {
    return this[index];
  },
  operator$indexSet$2: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this, $.$int);
  },
  contains$1: function(element) {
    return $.Collections_contains(this, element);
  },
  forEach$1: function(f) {
    return $.Collections_forEach(this, f);
  },
  join$1: function(separator) {
    return $.Collections_joinList(this, separator);
  },
  mappedBy$1: function(f) {
    return $.MappedList$(this, f, $.$int, null);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f, $.$int);
  },
  every$1: function(f) {
    return $.Collections_every(this, f);
  },
  toList$0: function() {
    var t1 = $.List_List$from(this, $.$int);
    $.setRuntimeTypeInfo(t1, [$.$int]);
    return t1;
  },
  get$isEmpty: function() {
    return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.gtB(t1.get$length(this), 0))
      return this.operator$index$1($.sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
  },
  setRange$4: function(start, rangeLength, from, startFrom) {
    throw $.$$throw($.UnsupportedError$("Cannot setRange on immutable List."));
  },
  setRange$3: function(start, rangeLength, from) {
    return this.setRange$4(start, rangeLength, from, null);
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  is$List: function() {
    return true;
  },
  is$Collection: function() {
    return true;
  },
  is$JavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("Uint32Array", {
  get$length: function() {
    return this.length;
  },
  operator$index$1: function(index) {
    return this[index];
  },
  operator$indexSet$2: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this, $.$int);
  },
  contains$1: function(element) {
    return $.Collections_contains(this, element);
  },
  forEach$1: function(f) {
    return $.Collections_forEach(this, f);
  },
  join$1: function(separator) {
    return $.Collections_joinList(this, separator);
  },
  mappedBy$1: function(f) {
    return $.MappedList$(this, f, $.$int, null);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f, $.$int);
  },
  every$1: function(f) {
    return $.Collections_every(this, f);
  },
  toList$0: function() {
    var t1 = $.List_List$from(this, $.$int);
    $.setRuntimeTypeInfo(t1, [$.$int]);
    return t1;
  },
  get$isEmpty: function() {
    return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.gtB(t1.get$length(this), 0))
      return this.operator$index$1($.sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
  },
  setRange$4: function(start, rangeLength, from, startFrom) {
    throw $.$$throw($.UnsupportedError$("Cannot setRange on immutable List."));
  },
  setRange$3: function(start, rangeLength, from) {
    return this.setRange$4(start, rangeLength, from, null);
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  is$List: function() {
    return true;
  },
  is$Collection: function() {
    return true;
  },
  is$JavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("Uint8Array", {
  get$length: function() {
    return this.length;
  },
  operator$index$1: function(index) {
    return this[index];
  },
  operator$indexSet$2: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this, $.$int);
  },
  contains$1: function(element) {
    return $.Collections_contains(this, element);
  },
  forEach$1: function(f) {
    return $.Collections_forEach(this, f);
  },
  join$1: function(separator) {
    return $.Collections_joinList(this, separator);
  },
  mappedBy$1: function(f) {
    return $.MappedList$(this, f, $.$int, null);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f, $.$int);
  },
  every$1: function(f) {
    return $.Collections_every(this, f);
  },
  toList$0: function() {
    var t1 = $.List_List$from(this, $.$int);
    $.setRuntimeTypeInfo(t1, [$.$int]);
    return t1;
  },
  get$isEmpty: function() {
    return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.gtB(t1.get$length(this), 0))
      return this.operator$index$1($.sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
  },
  setRange$4: function(start, rangeLength, from, startFrom) {
    throw $.$$throw($.UnsupportedError$("Cannot setRange on immutable List."));
  },
  setRange$3: function(start, rangeLength, from) {
    return this.setRange$4(start, rangeLength, from, null);
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  is$List: function() {
    return true;
  },
  is$Collection: function() {
    return true;
  },
  is$JavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("WebSocket", {
  get$on: function() {
    return $.WebSocketEvents$(this);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  close$2: function(code, reason) {
    return this.close(code,reason);
  },
  close$0: function() {
    return this.close();
  },
  get$close: function() {
    return new $.BoundClosure1(this, "close$2");
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  send$1: function(data) {
    return this.send(data);
  }
});

$.$defineNativeClass("DOMWindow", {
  open$3: function(url, name$, options) {
    if (options == null)
      return $._DOMWindowCrossFrame__createSafe(this.open(url,name$));
    else
      return $._DOMWindowCrossFrame__createSafe(this.open(url,name$,options));
  },
  get$open: function() {
    return new $.BoundClosure2(this, "open$3");
  },
  get$location: function() {
    var result = this.get$_location();
    if ($.Window__isDartLocation(result) === true)
      return result;
    if (null == this._location_wrapper)
      this._location_wrapper = $._LocationWrapper$(result);
    return this._location_wrapper;
  },
  get$_location: function() {
    return this.location;
  },
  get$on: function() {
    return $.WindowEvents$(this);
  },
  get$parent: function() {
    return $._convertNativeToDart_Window(this.parent);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  close$0: function() {
    return this.close();
  },
  get$close: function() {
    return new $.BoundClosure(this, "close$0");
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  }
});

$.$defineNativeClass("XPathException", {"": "message>",
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("SVGComponentTransferFunctionElement", {"": "offset>"});

$.$defineNativeClass("SVGStopElement", {"": "offset>"});

$.$defineNativeClass("SVGElement", {
  get$classes: function() {
    if (this._cssClassSet == null)
      this._cssClassSet = $._AttributeClassSet$(this);
    return this._cssClassSet;
  },
  get$children: function() {
    return $.FilteredElementList$(this);
  },
  set$children: function(value) {
    var children, t1;
    children = this.get$children();
    t1 = $.getInterceptor$JSArray(children);
    t1.clear$0(children);
    t1.addAll$1(children, value);
  },
  set$innerHtml: function(svg) {
    var container, t1;
    container = $.Element_Element$tag("div");
    container.set$innerHtml("<svg version=\"1.1\">" + $.S(svg) + "</svg>");
    t1 = container.get$children();
    this.set$children($.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, 0).get$children());
  },
  get$$$dom_children: function() {
    throw $.$$throw($.UnsupportedError$("Cannot get dom_children on SVG."));
  },
  click$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot invoke click SVG."));
  },
  get$click: function() {
    return new $.BoundClosure(this, "click$0");
  },
  get$id: function() {
    return this.id;
  },
  set$id: function(value) {
    this.id = value;
  }
});

$.$defineNativeClass("SVGException", {"": "message>",
  toString$0: function() {
    return this.toString();
  }
});

// 75 dynamic classes.
// 245 classes
// 21 !leaf
(function() {
  var v0_Text = "Text|CDATASection", v1_ComponentTransferFunctionElement = "SVGComponentTransferFunctionElement|SVGFEFuncAElement|SVGFEFuncRElement|SVGFEFuncGElement|SVGFEFuncBElement", v2_MediaElement = "HTMLMediaElement|HTMLVideoElement|HTMLAudioElement", v3_SvgElement = [v1_ComponentTransferFunctionElement, "SVGElement|SVGAElement|SVGAltGlyphDefElement|SVGTextContentElement|SVGTextPositioningElement|SVGAltGlyphElement|SVGTSpanElement|SVGTextElement|SVGTRefElement|SVGTextPathElement|SVGAltGlyphItemElement|SVGAnimationElement|SVGAnimateColorElement|SVGAnimateElement|SVGAnimateMotionElement|SVGAnimateTransformElement|SVGSetElement|SVGCircleElement|SVGCursorElement|SVGDefsElement|SVGDescElement|SVGEllipseElement|SVGFEComponentTransferElement|SVGFECompositeElement|SVGFEColorMatrixElement|SVGFEConvolveMatrixElement|SVGFEDisplacementMapElement|SVGFEDropShadowElement|SVGFEFloodElement|SVGFEGaussianBlurElement|SVGFEDiffuseLightingElement|SVGFEImageElement|SVGFEMergeElement|SVGFEMorphologyElement|SVGFEOffsetElement|SVGFEMergeNodeElement|SVGFETurbulenceElement|SVGFESpotLightElement|SVGFEPointLightElement|SVGFESpecularLightingElement|SVGFEDistantLightElement|SVGFETileElement|SVGFontFaceFormatElement|SVGFilterElement|SVGFontFaceSrcElement|SVGFontFaceUriElement|SVGFontElement|SVGGElement|SVGFEBlendElement|SVGGlyphElement|SVGGlyphRefElement|SVGFontFaceElement|SVGImageElement|SVGFontFaceNameElement|SVGHKernElement|SVGLineElement|SVGGradientElement|SVGLinearGradientElement|SVGRadialGradientElement|SVGMPathElement|SVGMarkerElement|SVGMaskElement|SVGMetadataElement|SVGMissingGlyphElement|SVGPathElement|SVGForeignObjectElement|SVGPatternElement|SVGClipPathElement|SVGPolygonElement|SVGPolylineElement|SVGRectElement|SVGScriptElement|SVGStopElement|SVGStyleElement|SVGSVGElement|SVGSwitchElement|SVGSymbolElement|SVGTitleElement|SVGUseElement|SVGVKernElement|SVGViewElement"].join("|"), v4_Element = [v2_MediaElement, v3_SvgElement, "Element|HTMLPreElement|HTMLProgressElement|HTMLQuoteElement|HTMLScriptElement|HTMLSelectElement|HTMLShadowElement|HTMLSourceElement|HTMLSpanElement|HTMLStyleElement|HTMLTableCaptionElement|HTMLTableCellElement|HTMLTableColElement|HTMLTableElement|HTMLTableRowElement|HTMLTableSectionElement|HTMLTextAreaElement|HTMLTitleElement|HTMLTrackElement|HTMLUListElement|HTMLUnknownElement|HTMLElement|HTMLAnchorElement|HTMLAppletElement|HTMLAreaElement|HTMLBRElement|HTMLBaseElement|HTMLBaseFontElement|HTMLBodyElement|HTMLButtonElement|HTMLCanvasElement|HTMLContentElement|HTMLDListElement|HTMLDataListElement|HTMLDetailsElement|HTMLDirectoryElement|HTMLDivElement|HTMLEmbedElement|HTMLFieldSetElement|HTMLFontElement|HTMLFormElement|HTMLFrameElement|HTMLFrameSetElement|HTMLHRElement|HTMLHeadElement|HTMLHeadingElement|HTMLHtmlElement|HTMLIFrameElement|HTMLImageElement|HTMLInputElement|HTMLKeygenElement|HTMLLIElement|HTMLLabelElement|HTMLLegendElement|HTMLLinkElement|HTMLMapElement|HTMLMarqueeElement|HTMLMenuElement|HTMLMetaElement|HTMLMeterElement|HTMLModElement|HTMLOListElement|HTMLObjectElement|HTMLOptGroupElement|HTMLOptionElement|HTMLOutputElement|HTMLParagraphElement|HTMLParamElement"].join("|"), v5_DocumentFragment = "DocumentFragment|ShadowRoot", v6_CharacterData = [v0_Text, "CharacterData|Comment"].join("|"), v7_Document = "Document|SVGDocument|HTMLDocument", v8_Node = [v4_Element, v5_DocumentFragment, v6_CharacterData, v7_Document, "Node|ProcessingInstruction|Attr|DocumentType|EntityReference|Notation"].join("|");
  $.dynamicSetMetadata([["HTMLCollection", "HTMLCollection|HTMLFormControlsCollection|HTMLOptionsCollection"], ["SVGComponentTransferFunctionElement", v1_ComponentTransferFunctionElement], ["Text", v0_Text], ["CharacterData", v6_CharacterData], ["HTMLMediaElement", v2_MediaElement], ["Document", v7_Document], ["DocumentFragment", v5_DocumentFragment], ["SVGElement", v3_SvgElement], ["Element", v4_Element], ["Event", "Event|PopStateEvent|ProgressEvent|XMLHttpRequestProgressEvent|RTCDataChannelEvent|RTCIceCandidateEvent|SpeechInputEvent|SpeechRecognitionError|SpeechRecognitionEvent|StorageEvent|UIEvent|TextEvent|TouchEvent|MouseEvent|WheelEvent|CompositionEvent|SVGZoomEvent|KeyboardEvent|TrackEvent|WebKitTransitionEvent|WebGLContextEvent|IDBVersionChangeEvent|IDBVersionChangeEvent|CloseEvent|DeviceOrientationEvent|DeviceMotionEvent|ErrorEvent|BeforeLoadEvent|WebKitAnimationEvent|HashChangeEvent|AudioProcessingEvent|OfflineAudioCompletionEvent|CustomEvent|MediaKeyEvent|MediaStreamEvent|MediaStreamTrackEvent|MessageEvent|MutationEvent|OverflowEvent|PageTransitionEvent"], ["Node", v8_Node], ["Uint8Array", "Uint8Array|Uint8ClampedArray"], ["EventTarget", [v8_Node, "EventTarget|WebSocket|DOMWindow"].join("|")], ["NodeList", "NodeList|RadioNodeList"]]);
})();

$.main0.call$0 = $.main0
//
// BEGIN invoke [main].
//
if (typeof document !== 'undefined' && document.readyState !== 'complete') {
  document.addEventListener('readystatechange', function () {
    if (document.readyState == 'complete') {
      if (typeof dartMainRunner === 'function') {
        dartMainRunner(function() { $.startRootIsolate($.main0); });
      } else {
        $.startRootIsolate($.main0);
      }
    }
  }, false);
} else {
  if (typeof dartMainRunner === 'function') {
    dartMainRunner(function() { $.startRootIsolate($.main0); });
  } else {
    $.startRootIsolate($.main0);
  }
}
//
// END invoke [main].
//

function init() {
Isolate.$isolateProperties = {};
function generateAccessor(field, prototype) {
  var len = field.length;
  var lastCharCode = field.charCodeAt(len - 1);
  var needsAccessor = (lastCharCode & 63) >= 60;
  if (needsAccessor) {
    var needsGetter = (lastCharCode & 3) > 0;
    var needsSetter = (lastCharCode & 2) == 0;
    var renaming = (lastCharCode & 64) != 0;
    var accessorName = field = field.substring(0, len - 1);
    if (renaming) {
      var divider = field.indexOf(":");
      accessorName = field.substring(0, divider);
      field = field.substring(divider + 1);
    }
    if (needsGetter) {
      var getterString = "return this." + field + ";";
      prototype["get$" + accessorName] = new Function(getterString);
    }
    if (needsSetter) {
      var setterString = "this." + field + " = v;";
      prototype["set$" + accessorName] = new Function("v", setterString);
    }
  }
  return field;
};
Isolate.$isolateProperties.$generateAccessor = generateAccessor;
Isolate.$defineClass = function(cls, fields, prototype) {
  var constructor;
  if (typeof fields == 'function') {
    constructor = fields;
  } else {
    var str = "function " + cls + "(";
    var body = "";
    for (var i = 0; i < fields.length; i++) {
      if (i != 0) str += ", ";
      var field = fields[i];
      field = generateAccessor(field, prototype);
      str += field;
      body += "this." + field + " = " + field + ";\n";
    }
    str += ") {" + body + "}\n";
    str += "return " + cls + ";";
    constructor = new Function(str)();
  }
  constructor.prototype = prototype;
  constructor.builtin$cls = cls;
  return constructor;
};
var supportsProto = false;
var tmp = Isolate.$defineClass('c', ['f?'], {}).prototype;
if (tmp.__proto__) {
  tmp.__proto__ = {};
  if (typeof tmp.get$f !== 'undefined') supportsProto = true;
}
Isolate.$pendingClasses = {};
Isolate.$finishClasses = function(collectedClasses) {
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var cls in collectedClasses) {
    if (hasOwnProperty.call(collectedClasses, cls)) {
      var desc = collectedClasses[cls];
      var fields = desc[''], supr;
      if (typeof fields == 'string') {
        var s = fields.split(';'); supr = s[0];
        fields = s[1] == '' ? [] : s[1].split(',');
      } else {
        supr = desc['super'];
      }
      Isolate.$isolateProperties[cls] = Isolate.$defineClass(cls, fields, desc);
      if (supr) Isolate.$pendingClasses[cls] = supr;
    }
  }
  var pendingClasses = Isolate.$pendingClasses;
  Isolate.$pendingClasses = {};
  var finishedClasses = {};
  function finishClass(cls) {
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    if (hasOwnProperty.call(finishedClasses, cls)) return;
    finishedClasses[cls] = true;
    var superclass = pendingClasses[cls];
    if (!superclass) return;
    finishClass(superclass);
    var constructor = Isolate.$isolateProperties[cls];
    var superConstructor = Isolate.$isolateProperties[superclass];
    var prototype = constructor.prototype;
    if (supportsProto) {
      prototype.__proto__ = superConstructor.prototype;
      prototype.constructor = constructor;
    } else {
      function tmp() {};
      tmp.prototype = superConstructor.prototype;
      var newPrototype = new tmp();
      constructor.prototype = newPrototype;
      newPrototype.constructor = constructor;
      for (var member in prototype) {
        if (!member) continue;          if (hasOwnProperty.call(prototype, member)) {
          newPrototype[member] = prototype[member];
        }
      }
    }
  }
  for (var cls in pendingClasses) finishClass(cls);
};
Isolate.$lazy = function(prototype, staticName, fieldName, getterName, lazyValue) {
  var getter = new Function("{ return $." + fieldName + ";}");
  var sentinelUndefined = {};
  var sentinelInProgress = {};
  prototype[fieldName] = sentinelUndefined;
  prototype[getterName] = function() {
    var result = $[fieldName];
    try {
      if (result === sentinelUndefined) {
        $[fieldName] = sentinelInProgress;
        try {
          result = $[fieldName] = lazyValue();
        } catch (e) {
          if ($[fieldName] === sentinelInProgress) {
            $[fieldName] = null;
          }
          throw e;
        }
      } else if (result === sentinelInProgress) {
        $.throwCyclicInit(staticName);
      }
      return result;
    } finally {
      $[getterName] = getter;
    }
  };
};
Isolate.$finishIsolateConstructor = function(oldIsolate) {
  var isolateProperties = oldIsolate.$isolateProperties;
  var isolatePrototype = oldIsolate.prototype;
  var str = "{\n";
  str += "var properties = Isolate.$isolateProperties;\n";
  for (var staticName in isolateProperties) {
    if (Object.prototype.hasOwnProperty.call(isolateProperties, staticName)) {
      str += "this." + staticName + "= properties." + staticName + ";\n";
    }
  }
  str += "}\n";
  var newIsolate = new Function(str);
  newIsolate.prototype = isolatePrototype;
  isolatePrototype.constructor = newIsolate;
  newIsolate.$isolateProperties = isolateProperties;
  return newIsolate;
};
}

//@ sourceMappingURL=main.html_bootstrap.dart.js.map